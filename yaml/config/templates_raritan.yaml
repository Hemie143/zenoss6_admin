device_classes:
  /Datacenter/Raritan:
    templates:
      RaritanHumiditySensor:
        datasources:
          HumidSensor:
            cycletime: ${here/zCommandCollectionInterval}
            datapoints:
              humidity:
                rrdtype: GAUGE
            plugin_classname: ZenPacks.community.Raritan.dsplugins.SnmpRaritanEnvSensor.SnmpRaritanHumidSensor
            type: Python
        graphs:
          Humidity:
            graphpoints:
              Low Humidity:
                description: Low Humidity
                legend: ${graphPoint/id}
                type: Threshold
              OnCallSMS Low Humidity:
                description: OnCallSMS Low Humidity
                legend: ${graphPoint/id}
                type: Threshold
              humidity:
                description: HumidSensor_humidity
                dpName: HumidSensor_humidity
                legend: ${graphPoint/id}
            height: 400
            units: '%'
            width: 1000
        targetPythonClass: ZenPacks.community.Raritan.RaritanHumiditySensor
        thresholds:
          Low Humidity:
            dsnames:
            - HumidSensor_humidity
            eventClass: /Environ
            minval: 9
          OnCallSMS Low Humidity:
            dsnames:
            - HumidSensor_humidity
            eventClass: /HW/Humidity
            minval: '15'
            severity: 5
            timePeriod: 15 minutes
            type: DurationThreshold
            violationPercentage: 100
      RaritanInlet:
        datasources:
          Inlet:
            cycletime: ${here/zCommandCollectionInterval}
            datapoints:
              active_energy:
                rrdtype: GAUGE
              active_power:
                rrdtype: GAUGE
              apparent_power:
                rrdtype: GAUGE
              frequency:
                rrdtype: GAUGE
              power_factor:
                rrdtype: GAUGE
              rms_current:
                rrdtype: GAUGE
              rms_voltage:
                rrdtype: GAUGE
              state:
                rrdtype: GAUGE
              unbalanced_current:
                rrdtype: GAUGE
            plugin_classname: ZenPacks.community.Raritan.dsplugins.SnmpRaritanPDU.SnmpRaritanInlet
            type: Python
        graphs:
          Active Energy:
            graphpoints:
              Active_Energy:
                description: Inlet_active_energy
                dpName: Inlet_active_energy
                legend: ${graphPoint/id}
            height: '400'
            units: Wh
            width: 1000
          Current:
            graphpoints:
              RMS_Current:
                description: Inlet_rms_current
                dpName: Inlet_rms_current
                legend: ${graphPoint/id}
            height: '400'
            sequence: 4
            units: A
            width: 1000
          Frequency:
            graphpoints:
              Frequency:
                description: Inlet_frequency
                dpName: Inlet_frequency
                legend: ${graphPoint/id}
            height: '400'
            sequence: 2
            units: Hz
            width: 1000
          Power:
            graphpoints:
              Active_Power:
                description: Inlet_active_power
                dpName: Inlet_active_power
                legend: ${graphPoint/id}
              Apparent_Power:
                description: Inlet_apparent_power
                dpName: Inlet_apparent_power
                legend: ${graphPoint/id}
            height: '400'
            sequence: 1
            units: W
            width: 1000
          Power Factor:
            graphpoints:
              Power_Factor:
                description: Inlet_power_factor
                dpName: Inlet_power_factor
                legend: ${graphPoint/id}
            height: '400'
            sequence: 3
            width: 1000
          Unbalanced Current:
            graphpoints:
              Unbalanced_Current:
                description: Inlet_unbalanced_current
                dpName: Inlet_unbalanced_current
                legend: ${graphPoint/id}
            height: '400'
            sequence: 6
            units: '%'
            width: 1000
          Voltage:
            graphpoints:
              RMS_Voltage:
                description: Inlet_rms_voltage
                dpName: Inlet_rms_voltage
                legend: ${graphPoint/id}
            height: '400'
            sequence: 5
            units: V
            width: 1000
        targetPythonClass: ZenPacks.community.Raritan.RaritanInlet
        thresholds:
          Inlet High Frequency:
            dsnames:
            - Inlet_frequency
            eventClass: /PDU/Inlet
            maxval: '51'
          Inlet High Voltage Critical:
            dsnames:
            - Inlet_rms_voltage
            eventClass: /PDU/Inlet
            maxval: '440'
            severity: 5
          Inlet High Voltage Warning:
            dsnames:
            - Inlet_rms_voltage
            eventClass: /PDU/Inlet
            maxval: '428'
          Inlet Low Frequency:
            dsnames:
            - Inlet_frequency
            eventClass: /PDU/Inlet
            minval: '49'
          Inlet Low Power:
            dsnames:
            - Inlet_active_power
            eventClass: /PDU/Inlet
            minval: '10'
          Inlet Low Voltage Critical:
            dsnames:
            - Inlet_rms_voltage
            eventClass: /PDU/Inlet
            minval: '357'
            severity: 5
          Inlet Low Voltage Warning:
            dsnames:
            - Inlet_rms_voltage
            eventClass: /PDU/Inlet
            minval: '369'
          Inlet Power Factor:
            dsnames:
            - Inlet_power_factor
            eventClass: /PDU/Inlet
            minval: '0.6'
          OnCallSMS_Inlet_Power:
            dsnames:
            - Inlet_active_power
            eventClass: /PDU/Inlet
            minval: '1'
            severity: 5
      RaritanOCP:
        datasources:
          OCP:
            cycletime: ${here/zCommandCollectionInterval}
            datapoints:
              rms_current:
                rrdtype: GAUGE
            plugin_classname: ZenPacks.community.Raritan.dsplugins.SnmpRaritanPDU.SnmpRaritanOCP
            type: Python
        graphs:
          Current:
            graphpoints:
              RMS_Current:
                description: OCP_rms_current
                dpName: OCP_rms_current
                legend: ${graphPoint/id}
            height: '400'
            units: A
            width: 1000
        targetPythonClass: ZenPacks.community.Raritan.RaritanOCP
      RaritanOnOffSensor:
        datasources:
          OnOffSensor:
            cycletime: ${here/zCommandCollectionInterval}
            datapoints:
              onoff:
                rrdtype: GAUGE
            plugin_classname: ZenPacks.community.Raritan.dsplugins.SnmpRaritanEnvSensor.SnmpRaritanOnOffSensor
            type: Python
        graphs:
          OnOff:
            graphpoints:
              onoff:
                description: OnOffSensor_onoff
                dpName: OnOffSensor_onoff
                legend: ${graphPoint/id}
            height: 400
            maxy: 11
            width: 1000
        targetPythonClass: ZenPacks.community.Raritan.RaritanOnOffSensor
      RaritanOutlet:
        datasources:
          Outlet:
            cycletime: ${here/zCommandCollectionInterval}
            datapoints:
              active_energy:
                rrdtype: GAUGE
              active_power:
                rrdtype: GAUGE
              apparent_power:
                rrdtype: GAUGE
              frequency:
                rrdtype: GAUGE
              power_factor:
                rrdtype: GAUGE
              rms_current:
                rrdtype: GAUGE
              rms_voltage:
                rrdtype: GAUGE
              state:
                rrdtype: GAUGE
            plugin_classname: ZenPacks.community.Raritan.dsplugins.SnmpRaritanPDU.SnmpRaritanOutlet
            type: Python
        graphs:
          Active Energy:
            graphpoints:
              Active_Energy:
                description: Outlet_active_energy
                dpName: Outlet_active_energy
                legend: ${graphPoint/id}
            height: '400'
            units: Wh
            width: 1000
          Current:
            graphpoints:
              RMS_Current:
                description: Outlet_rms_current
                dpName: Outlet_rms_current
                legend: ${graphPoint/id}
            height: '400'
            sequence: 4
            units: A
            width: 1000
          Frequency:
            graphpoints:
              Frequency:
                description: Outlet_frequency
                dpName: Outlet_frequency
                legend: ${graphPoint/id}
            height: '400'
            sequence: 2
            units: Hz
            width: 1000
          Power:
            graphpoints:
              Active_Power:
                description: Outlet_active_power
                dpName: Outlet_active_power
                legend: ${graphPoint/id}
              Apparent_Power:
                description: Outlet_apparent_power
                dpName: Outlet_apparent_power
                legend: ${graphPoint/id}
            height: '400'
            sequence: 1
            units: W
            width: 1000
          Power Factor:
            graphpoints:
              Power_Factor:
                description: Outlet_power_factor
                dpName: Outlet_power_factor
                legend: ${graphPoint/id}
            height: '400'
            sequence: 3
            width: 1000
          Voltage:
            graphpoints:
              RMS_Voltage:
                description: Outlet_rms_voltage
                dpName: Outlet_rms_voltage
                legend: ${graphPoint/id}
            height: '400'
            sequence: 5
            units: V
            width: 1000
        targetPythonClass: ZenPacks.community.Raritan.RaritanOutlet
        thresholds:
          Outlet High Frequency:
            dsnames:
            - Outlet_frequency
            eventClass: /PDU/Outlet
            maxval: '51'
          Outlet High Voltage Critical:
            dsnames:
            - Outlet_rms_voltage
            eventClass: /PDU/Outlet
            maxval: '254'
            severity: 5
          Outlet High Voltage Warning:
            dsnames:
            - Outlet_rms_voltage
            eventClass: /PDU/Outlet
            maxval: '247'
          Outlet Low Frequency:
            dsnames:
            - Outlet_frequency
            eventClass: /PDU/Outlet
            minval: '49'
          Outlet Low Voltage Critical:
            dsnames:
            - Outlet_rms_voltage
            eventClass: /PDU/Outlet
            minval: '206'
          Outlet Low Voltage Warning:
            dsnames:
            - Outlet_rms_voltage
            eventClass: /PDU/Outlet
            minval: '213'
          Outlet Power Factor:
            dsnames:
            - Outlet_power_factor
            enabled: false
            eventClass: /PDU/Outlet
            minval: '0.6'
      RaritanTemperatureSensor:
        datasources:
          TempSensor:
            cycletime: ${here/zCommandCollectionInterval}
            datapoints:
              temperature:
                rrdtype: GAUGE
            plugin_classname: ZenPacks.community.Raritan.dsplugins.SnmpRaritanEnvSensor.SnmpRaritanTempSensor
            type: Python
        graphs:
          Temperature:
            graphpoints:
              High Temperature:
                description: High Temperature
                legend: ${graphPoint/id}
                type: Threshold
              OnCallSMS High Temp:
                description: OnCallSMS High Temp
                legend: ${graphPoint/id}
                type: Threshold
              temperature:
                description: TempSensor_temperature
                dpName: TempSensor_temperature
                legend: ${graphPoint/id}
            height: '400'
            units: °C
            width: 1000
        targetPythonClass: ZenPacks.community.Raritan.RaritanTemperatureSensor
        thresholds:
          High Temperature:
            dsnames:
            - TempSensor_temperature
            eventClass: /HW/Temperature
            maxval: 35
            severity: 5
          OnCallSMS High Temp:
            dsnames:
            - TempSensor_temperature
            eventClass: /HW/Temperature
            maxval: 30
            severity: 5
            timePeriod: 30 minutes
            type: DurationThreshold
            violationPercentage: 100
  /Datacenter/Raritan/devices/dc3-probe-s01.fednot.be/raritanHumiditySensors/Relative Humidity 1:
    templates:
      RaritanHumiditySensor:
        datasources:
          HumidSensor:
            cycletime: ${here/zCommandCollectionInterval}
            datapoints:
              humidity:
                rrdtype: GAUGE
            plugin_classname: ZenPacks.community.Raritan.dsplugins.SnmpRaritanEnvSensor.SnmpRaritanHumidSensor
            type: Python
        graphs:
          Humidity:
            graphpoints:
              Low Humidity:
                description: Low Humidity
                legend: ${graphPoint/id}
                type: Threshold
              OnCallSMS Low Humidity:
                description: OnCallSMS Low Humidity
                legend: ${graphPoint/id}
                type: Threshold
              humidity:
                description: HumidSensor_humidity
                dpName: HumidSensor_humidity
                legend: ${graphPoint/id}
                lineType: AREA
            height: 400
            units: '%'
            width: 1000
        targetPythonClass: ZenPacks.community.Raritan.RaritanHumiditySensor
        thresholds:
          Low Humidity:
            dsnames:
            - HumidSensor_humidity
            eventClass: /Environ
            minval: 9
          OnCallSMS Low Humidity:
            dsnames:
            - HumidSensor_humidity
            eventClass: /HW/Humidity
            minval: '15'
            severity: 5
            timePeriod: 15 minutes
            type: DurationThreshold
            violationPercentage: 100
  /Datacenter/Raritan/devices/dc4-probe-s01.fednot.be/raritanHumiditySensors/Relative Humidity 1:
    templates:
      RaritanHumiditySensor:
        datasources:
          HumidSensor:
            cycletime: ${here/zCommandCollectionInterval}
            datapoints:
              humidity:
                rrdtype: GAUGE
            plugin_classname: ZenPacks.community.Raritan.dsplugins.SnmpRaritanEnvSensor.SnmpRaritanHumidSensor
            type: Python
        graphs:
          Humidity:
            graphpoints:
              Low Humidity:
                description: Low Humidity
                legend: ${graphPoint/id}
                type: Threshold
              OnCallSMS Low Humidity:
                description: OnCallSMS Low Humidity
                legend: ${graphPoint/id}
                type: Threshold
              humidity:
                description: HumidSensor_humidity
                dpName: HumidSensor_humidity
                legend: ${graphPoint/id}
                lineType: AREA
            height: 400
            units: '%'
            width: 1000
        targetPythonClass: ZenPacks.community.Raritan.RaritanHumiditySensor
        thresholds:
          Low Humidity:
            dsnames:
            - HumidSensor_humidity
            eventClass: /Environ
            minval: 9
          OnCallSMS Low Humidity:
            dsnames:
            - HumidSensor_humidity
            eventClass: /HW/Humidity
            minval: '15'
            severity: 5
            timePeriod: 15 minutes
            type: DurationThreshold
            violationPercentage: 100
  /Datacenter/Raritan/devices/dc4-probe-s01.fednot.be/raritanTemperatureSensors/Temperature 3:
    templates:
      RaritanTemperatureSensor:
        datasources:
          TempSensor:
            cycletime: ${here/zCommandCollectionInterval}
            datapoints:
              temperature:
                rrdtype: GAUGE
            plugin_classname: ZenPacks.community.Raritan.dsplugins.SnmpRaritanEnvSensor.SnmpRaritanTempSensor
            type: Python
        graphs:
          Temperature:
            graphpoints:
              High Temperature:
                description: High Temperature
                legend: ${graphPoint/id}
                type: Threshold
              OnCallSMS High Temp:
                description: OnCallSMS High Temp
                legend: ${graphPoint/id}
                type: Threshold
              temperature:
                description: TempSensor_temperature
                dpName: TempSensor_temperature
                legend: ${graphPoint/id}
            height: '400'
            units: °C
            width: 1000
        targetPythonClass: ZenPacks.community.Raritan.RaritanTemperatureSensor
        thresholds:
          High Temperature:
            dsnames:
            - TempSensor_temperature
            eventClass: /HW/Temperature
            maxval: 35
            severity: 5
          OnCallSMS High Temp:
            dsnames:
            - TempSensor_temperature
            eventClass: /HW/Temperature
            maxval: '31'
            severity: 5
            timePeriod: 30 minutes
            type: DurationThreshold
            violationPercentage: 100
  /Datacenter/Raritan/devices/dc4-probe-s02.fednot.be/raritanHumiditySensors/Relative Humidity 1:
    templates:
      RaritanHumiditySensor:
        datasources:
          HumidSensor:
            cycletime: ${here/zCommandCollectionInterval}
            datapoints:
              humidity:
                rrdtype: GAUGE
            plugin_classname: ZenPacks.community.Raritan.dsplugins.SnmpRaritanEnvSensor.SnmpRaritanHumidSensor
            type: Python
        graphs:
          Humidity:
            graphpoints:
              Low Humidity:
                description: Low Humidity
                legend: ${graphPoint/id}
                type: Threshold
              OnCallSMS Low Humidity:
                description: OnCallSMS Low Humidity
                legend: ${graphPoint/id}
                type: Threshold
              humidity:
                description: HumidSensor_humidity
                dpName: HumidSensor_humidity
                legend: ${graphPoint/id}
                lineType: AREA
            height: 400
            units: '%'
            width: 1000
        targetPythonClass: ZenPacks.community.Raritan.RaritanHumiditySensor
        thresholds:
          Low Humidity:
            dsnames:
            - HumidSensor_humidity
            eventClass: /Environ
            minval: 9
          OnCallSMS Low Humidity:
            dsnames:
            - HumidSensor_humidity
            eventClass: /HW/Humidity
            minval: '10'
            severity: 5
            timePeriod: 15 minutes
            type: DurationThreshold
            violationPercentage: 100
