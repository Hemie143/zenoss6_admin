event_classes:
  /Events:
    zProperties:
      zEventAction: status
      zEventClearClasses: []
      zEventMaxTransformFails: 10
      zEventSeverity: -1
      zFlappingIntervalSeconds: 3600
      zFlappingSeverity: 4
      zFlappingThreshold: 4
  /Events/App: {}
  /Events/App/Apache: {}
  /Events/App/Citrix:
    mappings:
      IMAService_3615:
        evaluation: Presentation Server Failed to Connect to DataStore
        eventClassKey: IMAService_3615
      IMAService_3622:
        eventClassKey: IMAService_3622
        example: 'The server running MetaFrame Presentation Server failed to connect
          to the Data Store.  Error - IMA_RESULT_NETWORK_FAILURE

          An unknown failure occurred while connecting to the database.

          '
        zProperties:
          zEventSeverity: 3
      MetaFrameEvents_1103:
        eventClassKey: MetaFrameEvents_1103
        example: 'An error occurred while retrieving client printer properties. Default
          printer properties will be used instead.

          Client name: (CLIENTNAME)

          Printer: (Microsoft Office Document Image Writer (from CLIENTNAME) in session
          1)

          Printer driver: (Microsoft Office Document Image Writer Driver)

          '
        zProperties:
          zEventSeverity: 3
      MetaFrameEvents_1106:
        eventClassKey: MetaFrameEvents_1106
        example: 'Client printer auto-creation failed.  The driver could not be installed.
          Possible reasons for the failure:

          The driver is not in the list of drivers on the server.

          The driver cannot be located.

          The driver has not been mapped.

          Client name: (CLIENTNAME)

          Printer: (14WS on ed_server (from CLIENTNAME) in session 1)

          Printer driver: (HP LaserJet 4000 PCL 5e)

          '
        zProperties:
          zEventSeverity: 2
  /Events/App/Conn:
    mappings:
      FileMaker Server 7_30:
        eventClassKey: FileMaker Server 7_30
        example: Client "CLIENTNAME" no longer responding; connection closed. (10.1.23.45)
        zProperties:
          zEventSeverity: 2
      FileMaker Server 7_518:
        eventClassKey: FileMaker Server 7_518
        example: 'Administrator connected: "administrator" (10.120.100.230).'
        zProperties:
          zEventSeverity: 3
      FileMaker Server 7_520:
        eventClassKey: FileMaker Server 7_520
        example: 'Administrator disconnected: "administrator".'
        zProperties:
          zEventSeverity: 3
      MSFTPSVC_10:
        eventClassKey: MSFTPSVC_10
        example: User gbyam at host 68.50.179.209 has timed-out after 900 seconds
          of inactivity.
  /Events/App/Conn/Max:
    mappings:
      TermService_1013:
        eventClassKey: TermService_1013
        example: The terminal server has exceeded the maximum number of allowed connections.
        zProperties:
          zEventSeverity: 3
      termservice_1013:
        eventClassKey: termservice_1013
        example: The terminal server has exceeded the maximum number of allowed connections.
    zProperties:
      zEventSeverity: 3
  /Events/App/Down: {}
  /Events/App/Down/ASF: {}
  /Events/App/Down/Portal: {}
  /Events/App/Down/RVV: {}
  /Events/App/Email:
    mappings:
      EXCDO_8263:
        eventClassKey: EXCDO_8263
        example: 'The recurring appointment expansion in mailbox Lastname, Firstname
          has taken too long. Some recurring appointment instances may not be visible
          at this time. To ensure that the calendar view is correct, please refresh
          the calendar view in Microsoft Outlook Web Access.



          For more information, click http://www.microsoft.com/contentredirect.asp.'
      MSExchangeIS Mailbox Store_1029:
        eventClassKey: MSExchangeIS Mailbox Store_1029
        example: "username@domain.com failed an operation because the user did not\
          \ have the following access rights:\n\n'Delete' 'Read Property' 'Write Property'\
          \ 'Create Message' 'View Item' 'Create Subfolder' 'Write Security Descriptor'\
          \ 'Write Owner' 'Read Security Descriptor' 'Contact' \n\nThe distinguished\
          \ name of the owning mailbox is /O=My Organization/OU=DOMAIN/CN=RECIPIENTS/CN=username.\
          \ The folder ID is in the data section of this event.\n\n\nFor more information,\
          \ click http://www.microsoft.com/contentredirect.asp."
      MSExchangeIS Mailbox Store_1032:
        eventClassKey: MSExchangeIS Mailbox Store_1032
        example: '/o=My Organization/ou=DOMAIN/cn=Recipients/cn=vwindmil sent a message
          as /O=My Organization/OU=DOMAIN/cn=Configuration/cn=Servers/cn=MAIL1/cn=Microsoft
          Private MDB.



          For more information, click http://www.microsoft.com/contentredirect.asp.'
        zProperties:
          zEventSeverity: 1
      MSExchangeSA_9320:
        eventClassKey: MSExchangeSA_9320
        example: 'OALGen could not generate full details for some entries in the offline
          address list for address list ''\Global Address List''.  To see which

          entries are affected, event logging for the offline address list generator
          must be set to at least medium.


          - Default Offline Address List



          For more information, click http://www.microsoft.com/contentredirect.asp.'
      MSExchangeSA_9323:
        eventClassKey: MSExchangeSA_9323
        example: "Entry 'Nangpal, Alpana' has invalid or expired e-mail certificates.\
          \  These certificates will not be included in the offline address list for\
          \ '\\Global Address List'.  \n\n- Default Offline Address List\n\n\nFor\
          \ more information, click http://www.microsoft.com/contentredirect.asp."
      smtpsvc_5000:
        eventClassKey: smtpsvc_5000
        example: The message file 'E:\Program Files\Exchsrvr\Mailroot\vsi 1\Queue\NTFS_584fe40801c5f24800007253.EML'  in
          the queue directory 'E:\Program Files\Exchsrvr\Mailroot\vsi 1\Queue' is
          corrupt and has not been enumerated.
        regex: The message file '.*'  in the queue directory '(?P<eventkey>.*)' is
          corrupt and has not been enumerated.
        sequence: 1
  /Events/App/Email/Loop:
    mappings:
      msexchangetransport_3005:
        eventClassKey: msexchangetransport_3005
        example: 'A non-delivery report with a status code of 4.4.6 was generated
          for recipient rfc822;holland@hcmt.com (Message-ID <281720.5566209930204.043952489222.LALP.3314@septuagenarian>
          ). Cause: The maximum hop count was exceeded for this message. This non-delivery
          report can also be caused if a looping condition exists between sending
          and receiving servers that are not in the same Exchange organization. In
          this situation, the message bounces back and forth until the hop count is
          exceeded. A configuration error in the e-mail system can also cause the
          message to bounce between two servers or to be forwarded between two recipients.
          Solution: The maximum hop count is a property set on each virtual server
          and you can manually override it. The default maximum hop count is 15. Also,
          check for any situations that might cause loops between servers.'
        regex: 4.4.6 was generated for recipient rfc822;(?P<eventKey>\S+)
  /Events/App/Failed:
    mappings:
      Active Server Pages_9:
        eventClassKey: Active Server Pages_9
        example: 'Warning: IIS log failed to write entry,   Script timed out. The
          maximum amount of time for a script to execute was exceeded. You can change
          this limit by specifying a new value for the property Server.ScriptTimeout
          or by changing the value in the IIS administration tools..'
        zProperties:
          zEventSeverity: 3
      Application Error_1000:
        eventClassKey: Application Error_1000
        example: Faulting application inserverD.exe, version 5.41.2.0, faulting module
          ntdll.dll, version 5.2.3790.1830, fault address 0x0002f350.
        zProperties:
          zEventSeverity: 3
      Application Hang_1002:
        eventClassKey: Application Hang_1002
        example: Hanging application Copy of WorkRules.exe, version 1.0.0.7, hang
          module hungapp, version 0.0.0.0, hang address 0x00000000.
        zProperties:
          zEventSeverity: 3
      Application Popup_26:
        eventClassKey: Application Popup_26
        example: 'Application popup: Messenger Service  : Message from AMICASARCH
          to AMICASARCH on 7/5/2006 4:19:43 PM


          From:  Remote Storage on AMICASARCH

          User:   SYSTEM

          Subj:   **ADMINISTRATOR ALERT**


          Place Media "MHS805" into drive or library unit'
        zProperties:
          zEventSeverity: 3
      BROWSER_8032:
        eventClassKey: BROWSER_8032
        example: 'The browser service has failed to retrieve the backup list too many
          times on transport \Device\NetBT_Tcpip_{7177A0FB-FAD9-40C6-846C-FD72AAEC94A0}.

          The backup browser is stopping.'
        zProperties:
          zEventSeverity: 4
      Cloudmark Server Edition_2011:
        eventClassKey: Cloudmark Server Edition_2011
        example: 'Cloudmark Server Edition has exceeded its seat allocation.


          The following users will have their spam filtering disabled:


          Zacarias,  Geneva

          Zanti, Debra'
        zProperties:
          zEventSeverity: 4
      EventLog_6000:
        eventClassKey: EventLog_6000
        example: The Application log file is full.
        zProperties:
          zEventSeverity: 4
      MisysReports:
        eventClassKey: MisysReports
        example: 'tsm: /dev/tty0: 3004-034 TSM: All possible term settings tried unsuccessfully.'
      MultiView License Manager_114:
        eventClassKey: MultiView License Manager_114
        example: The Slave License Manager (CTXPS03) did not respond within the specified
          timeout period and has had its license allocation revoked
        zProperties:
          zEventSeverity: 3
      NETLOGON_5719:
        eventClassKey: NETLOGON_5719
        example: "This computer was not able to set up a secure session with a domain\n\
          controller in domain DOMAIN due to the following: \nThe remote procedure\
          \ call failed and did not execute. \n\nThis may lead to authentication problems.\
          \ Make sure that this\ncomputer is connected to the network. If the problem\
          \ persists,\nplease contact your domain administrator.\n\n\n\nADDITIONAL\
          \ INFO\n\nIf this computer is a domain controller for the specified domain,\
          \ it\nsets up the secure session to the primary domain controller emulator\
          \ in the specified\ndomain. Otherwise, this computer sets up the secure\
          \ session to any domain controller\nin the specified domain."
        zProperties:
          zEventSeverity: 4
      Norton AntiVirus_6:
        eventClassKey: Norton AntiVirus_6
        example: Scan could not access path C:\RECYCLER\S-1-5-21-1953108385-1836779210-1757479407-15306\Dc231.ENC
      Remote Storage_4002:
        eventClassKey: Remote Storage_4002
        example: Media <MHS809/RS-AMICASARCH-8> cannot be mounted into a drive. Media
          is not available for normal operations. (0x81010007)
        zProperties:
          zEventSeverity: 4
      Remote Storage_6021:
        eventClassKey: Remote Storage_6021
        example: An error was detected doing Data Transfer for <Demand Recall> on
          AMICASARCH\NTFS\F:. User cancelled the operation. (0x8101000c)
        zProperties:
          zEventSeverity: 3
      Server Agents_1562:
        eventClassKey: Server Agents_1562
        example: 'Component: System Information Agent


          Error: Unable to initialize agent on non-ProLiant system.


          Cause: The System Information Agent only operates on ProLiant systems.'
      Service Control Manager_7031:
        eventClassKey: Service Control Manager_7031
        example: 'The SNMP Service service terminated unexpectedly.  It has done this
          1 time(s).  The following corrective action will be taken in 60000 milliseconds:
          Restart the service.'
        zProperties:
          zEventSeverity: 3
      Srv_2022:
        eventClassKey: Srv_2022
        example: 'The server was unable to find a free connection 352 times in the
          last 60 seconds.  This indicates a spike in

          network traffic.  If this is happening frequently, you should consider increasing
          the minimum number of free

          connections to add headroom.  To do that, modify the MinFreeConnections
          and MaxFreeConnections for the LanmanServer

          in the registry.'
        zProperties:
          zEventSeverity: 5
      USER32_1073:
        eventClassKey: USER32_1073
        example: The attempt by user DOMAIN\username to restart/shutdown computer
          COMPUTER failed
        zProperties:
          zEventSeverity: 3
      W3SVC_101:
        eventClassKey: W3SVC_101
        example: 'The server was unable to add the virtual root ''/Packages/{80364610-d332-43de-b552-e3c35156edd4}''
          for the directory ''\\SERVERNAME\Packages\Cisco VPN Client\4.6'' due to
          the following error: Logon failure: unknown user name or bad password.  The
          data is the error code.


          For additional information specific to this message please visit the Microsoft
          Online Support site located at: http://www.microsoft.com/contentredirect.asp.'
      Winlogon_1218:
        eventClassKey: Winlogon_1218
        example: 'Failed to load Terminal Server Profile path.

          Note that the profile path must be less than 256 characters in length.

          User Name: Administrator

          Domain: DOMAIN'
        zProperties:
          zEventSeverity: 3
      Winlogon_1219:
        eventClassKey: Winlogon_1219
        example: 'Logon rejected for DOMAIN\username. Unable to obtain Terminal Server
          User Configuration.

          Error: The RPC server is unavailable.'
        zProperties:
          zEventSeverity: 4
  /Events/App/Info:
    mappings:
      .NET Runtime Optimization Service_1102:
        eventClassKey: .NET Runtime Optimization Service_1102
        example: '.NET Runtime Optimization Service (clr_optimization_v2.0.50727_32)
          - Succesfully compiled: System.Web.Services, Version=2.0.0.0, Culture=neutral,
          PublicKeyToken=b03f5f7f11d50a3a'
        zProperties:
          zEventSeverity: 2
  /Events/App/Install:
    mappings:
      WSH_0:
        eventClassKey: WSH_0
        example: 'LaunchMediSpan.vbs: Medi-Span update completed.'
        zProperties:
          zEventSeverity: 2
  /Events/App/Job:
    mappings:
      MSSQLSERVER_17055:
        eventClassKey: MSSQLSERVER_17055
        example: '3041 :

          BACKUP failed to complete the command BACKUP LOG datarepo WITH NO_LOG'
        zProperties:
          zEventSeverity: 2
      MSSQLSERVER_17177:
        eventClassKey: MSSQLSERVER_17177
        example: This instance of SQL Server has been using a process id of 1104 since
          5/11/2006 10:08:47 AM (local) 5/11/2006 2:08:47 PM (UTC).
        zProperties:
          zEventSeverity: 3
      SQLSERVERAGENT_208:
        evaluation: SQL Server Scheduled Job Failed
        eventClassKey: SQLSERVERAGENT_208
        example: 'SQL Server Scheduled Job ''Transaction Log Backup Job for DB Maintenance
          Plan ''Daily'''' (0xD44F269926AD264390A4FBF23B7B50E1) - Status: Failed -
          Invoked on: 2006-03-19 21:00:01 - Message: The job failed. The Job was invoked
          by Schedule 2 (Schedule 1). The last step to run was step 1 (Step 1).'
        regex: '^SQL Server Scheduled Job ''(?P<eventKey>.*)'' \(0x\S+\) - Status:
          Failed'
      WUSyncService_104:
        eventClassKey: WUSyncService_104
        example: 'Software Update Services successfully synchronized all content.




          Your server is completely up-to-date.




          User Action


          To view the list of files that may have been added, removed, or updated
          during this synchronization, see the synchronization log.




          To see the synchronization log, go to the Software Update Services Admin
          Web site (http://<YourServerName>/SUSAdmin), and then click the View synchronization
          log link.




          For more information about administering a server running Software Update
          Services, see the Microsoft Software Update Services Deployment Guide (http://go.microsoft.com/fwlink/?LinkId=6928).'
        zProperties:
          zEventSeverity: 3
    zProperties:
      zEventSeverity: 4
  /Events/App/Job/Fail:
    mappings:
      Ntfs_50:
        eventClassKey: Ntfs_50
        example: '{Delayed Write Failed}

          Windows was unable to save all the data for the file . The data has been
          lost.

          This error may be caused by a failure of your computer hardware or network
          connection. Please try to save this file elsewhere.'
        zProperties:
          zEventSeverity: 3
      Print_6161:
        eventClassKey: Print_6161
        example: 'The document Default Report Title owned by USERNAME failed to print
          on printer Client\DOMAIN-client#\10.1.2.3 - LJ 4100n. Data type: NT EMF
          1.008. Size of the spool file in bytes: 131776. Number of bytes printed:
          0. Total number of pages in the document: 2. Number of pages printed: 0.
          Client machine: \\COMPUTER. Win32 error code returned by the print processor:
          1450.'
        zProperties:
          zEventSeverity: 2
      SQLSERVERAGENT_322:
        eventClassKey: SQLSERVERAGENT_322
        example: The data portion of event 19002 from MSSQLSERVER is invalid.
        zProperties:
          zEventSeverity: 3
      Schedule_7901:
        eventClassKey: Schedule_7901
        example: "The At1.job command failed to start due to the following error:\
          \ \nGeneral access denied error"
  /Events/App/Log:
    mappings:
      CROND:
        evaluation: (mythtv) CMD (/usr/bin/mythfilldatabase>/dev/null 2>&1)
        eventClassKey: CROND
        example: (root) CMD (run-parts /etc/cron.hourly)
        regex: \((?P<username>\S+)\) CMD \((?P<command>.*)\)
        sequence: 1
      pmta:
        eventClassKey: pmta
      postfix_smtpd:
        eventClassKey: postfix/smtpd
        example: 'warning: 68.33.51.29: hostname pcp0010796240pcs.anapol01.md.comcast.net
          verification failed: Host not found'
        regex: 'warning: (?P<eventKey>\S+):'
      procmail:
        eventClassKey: procmail
        example: Descriptor 1 was not open
        regex: Descriptor 1 was not open
        zProperties:
          zEventSeverity: 2
    zProperties:
      zEventAction: history
  /Events/App/Log/Auction:
    mappings:
      auction_log:
        eventClassKey: auction_log
        sequence: 7
    zProperties:
      zEventAction: status
  /Events/App/Log/Audit:
    mappings:
      audit_log:
        eventClassKey: audit_log
        sequence: 7
    zProperties:
      zEventAction: status
  /Events/App/Log/CBB:
    mappings:
      cbb_log:
        eventClassKey: cbb_log
        sequence: 7
    zProperties:
      zEventAction: status
  /Events/App/Log/CRT:
    mappings:
      crt_log:
        eventClassKey: crt_log
        sequence: 7
        zProperties:
          zEventAction: status
  /Events/App/Log/Common:
    mappings:
      common_log:
        eventClassKey: common_log
        sequence: 7
    zProperties:
      zEventAction: status
  /Events/App/Log/DER:
    mappings:
      der_log:
        eventClassKey: der_log
        sequence: 7
    zProperties:
      zEventAction: status
  /Events/App/Log/EAI:
    mappings:
      eai_log:
        eventClassKey: eai_log
        sequence: 7
    zProperties:
      zEventAction: status
  /Events/App/Log/Edepot:
    mappings:
      edepot_log:
        eventClassKey: edepot_log
        sequence: 7
    zProperties:
      zEventAction: status
  /Events/App/Log/Enterprises:
    mappings:
      enterprises_log:
        eventClassKey: enterprises_log
        sequence: 7
    zProperties:
      zEventAction: status
  /Events/App/Log/ExposedWS:
    mappings:
      exposedws_log:
        eventClassKey: exposedws_log
        sequence: 7
    zProperties:
      zEventAction: status
  /Events/App/Log/Notaclick:
    mappings:
      notaclick_log:
        eventClassKey: notaclick_log
        sequence: 7
    zProperties:
      zEventAction: status
  /Events/App/Log/Password:
    mappings:
      password_log:
        eventClassKey: password_log
        sequence: 7
    zProperties:
      zEventAction: status
  /Events/App/Log/RVV:
    mappings:
      rvv_log:
        eventClassKey: rvv_log
        sequence: 7
    zProperties:
      zEventAction: status
  /Events/App/Log/SSN:
    mappings:
      ssn_log:
        eventClassKey: ssn_log
        sequence: 7
    zProperties:
      zEventAction: status
  /Events/App/Log/VGP:
    mappings:
      vgp_log:
        eventClassKey: vgp_log
        sequence: 7
    zProperties:
      zEventAction: status
  /Events/App/MySQL: {}
  /Events/App/Print:
    mappings:
      Print_10:
        eventClassKey: Print_10
        example: 'Document 199, Microsoft Word - May_4[1]._2006.doc owned by ed2 was
          printed on ED7 via port IP_10.120.36.202. Size in bytes: 4945300; pages
          printed: 2'
        zProperties:
          zEventSeverity: 1
      Print_13:
        eventClassKey: Print_13
        example: Document 116, Remote Downlevel Document owned by fnigrin was deleted
          on BARUB1.
      Print_15:
        eventClassKey: Print_15
        example: Form 8x13 was added.
        zProperties:
          zEventSeverity: 1
      Print_42:
        eventClassKey: Print_42
        example: Printer HP DeskJet 830C/832C (from IT-LAPT-A098) in session 1 was
          successfully unpublished.
      Print_47:
        eventClassKey: Print_47
        example: 'The Printer represented by PrintQueue LDAP://CN=Kyocera Mita KM-5035
          KX,CN=COMPUTER,CN=Computers,DC=dc4,DC=com cannot be found: 709.'
      Print_9:
        eventClassKey: Print_9
        example: Printer printername/Session 2 was set.
        zProperties:
          zEventSeverity: 2
  /Events/App/Reload:
    mappings:
      postfix:
        eventClassKey: postfix
        example: succeeded
        regex: succeeded
  /Events/App/Rendition:
    transform: "if 'queues_rendition_queue' in evt.eventKey:\n    msg = 'Rendition\
      \ Queue contains {:d} messages'.format(int(float(evt.current)))\n    evt.message\
      \ = msg\n    evt.summary = msg\n"
  /Events/App/SP25Error:
    transform: "if 'SP25Error' in evt.eventKey:\n    msg = 'SP25 Queue contains {:d}\
      \ errors'.format(int(float(evt.current)))\n    evt.message = msg\n    evt.summary\
      \ = msg\n"
  /Events/App/SP25Queue:
    transform: "if 'SP25Queue' in evt.eventKey:\n    msg = 'SP25 Queue contains {:d}\
      \ messages'.format(int(float(evt.current)))\n    evt.message = msg\n    evt.summary\
      \ = msg\n"
  /Events/App/Splunk: {}
  /Events/App/Start:
    mappings:
      FileMaker Server 7_408:
        eventClassKey: FileMaker Server 7_408
        example: FileMaker Database Engine started.
        zProperties:
          zEventSeverity: 0
      FileMaker Server 7_418:
        eventClassKey: FileMaker Server 7_418
        example: Opening database "DATABASENAME"...
        zProperties:
          zEventSeverity: 0
      FileMaker Server 7_486:
        eventClassKey: FileMaker Server 7_486
        example: FileMaker Server started.
        zProperties:
          zEventSeverity: 0
      SNMP Informant_0:
        eventClassKey: SNMP Informant_0
        example: SNMP Informant Standard SNMP agent started
        zProperties:
          zEventSeverity: 2
      ntsyslog:
        eventClassKey: ntsyslog_0
        example: Service started.
        regex: Service started.
        sequence: 1
    zProperties:
      zEventClearClasses:
      - /App/Stop
      zEventSeverity: 0
  /Events/App/Stop:
    mappings:
      FileMaker Server 7_140:
        eventClassKey: FileMaker Server 7_140
        example: Closing database "DATABASENAME"...
        zProperties:
          zEventSeverity: 4
      FileMaker Server 7_168:
        eventClassKey: FileMaker Server 7_168
        example: Database "DATABASENAME" closed.
        zProperties:
          zEventSeverity: 4
      FileMaker Server 7_412:
        eventClassKey: FileMaker Server 7_412
        example: FileMaker Database Engine stopped.
        zProperties:
          zEventSeverity: 4
      FileMaker Server 7_490:
        eventClassKey: FileMaker Server 7_490
        example: FileMaker Server stopped.
        zProperties:
          zEventSeverity: 4
      Service Control Manager_7034:
        eventClassKey: Service Control Manager_7034
        zProperties:
          zEventSeverity: 3
      ntsyslog:
        eventClassKey: ntsyslog_0
        example: Service shutdown.
        regex: Service shutdown.
    zProperties:
      zEventSeverity: 2
  /Events/App/Tomcat: {}
  /Events/App/Tomcat/Openfiles:
    transform: 'import re

      m = re.search("(.+?)\|", evt.eventKey)

      evt.message = m.groups()[0] + " " + evt.message

      evt.summary = evt.message

      '
  /Events/App/VNC:
    mappings:
      WinVNC4_1:
        eventClassKey: WinVNC4_1
        example: 'SConnection: Assuming compatibility with version 3.3'
  /Events/App/Zenoss:
    mappings:
      zenpython-datasources-disabled:
        eventClassKey: zenpython-datasources-disabled
        example: 'Some monitoring for this device has been disabled due to problems
          detected in the following datasources: TemplateName/datasourceName'
      zenpython-timeout:
        eventClassKey: zenpython-timeout
        example: timeout collecting example datasource for multiple components
        zProperties:
          zEventSeverity: 2
    transform: "# Nice RAM Commitment Threshold breach event summary\nif evt.severity\
      \ > 0:\n  import re\n  match = re.match(r'threshold of RAM Commitment exceeded:\
      \ current value ([\\d\\.]+)', evt.summary)\n  if match and component and hasattr(component,\
      \ 'RAMCommitment'):\n    memused = float(match.groups()[0])\n    ramCommitment\
      \ = float(component.RAMCommitment)\n    percent_used = (memused / ramCommitment)\
      \ * 100\n    \n    evt.summary = 'Memory Utilization (%s) is higher than RAMCommitment\
      \ (%3.0f%% of %s)' % (convToUnits(memused), percent_used, convToUnits(ramCommitment))\n\
      \    evt.message = evt.summary"
  /Events/Archive:
    mappings:
      defaultmapping:
        evaluation: Archive Eventlog events that have severity == debug(1)
        eventClassKey: defaultmapping
        rule: getattr(evt, 'agent', '') == 'zeneventlog' and getattr(evt, 'severity',0)
          == 1
      defaultmapping_FileMaker:
        evaluation: By Default map all FileMaker events to Archive and set severity
          = 2
        eventClassKey: defaultmapping
        rule: getattr(evt,"component",False)=="FileMaker Server 7"
        sequence: 10
        zProperties:
          zEventSeverity: 2
    zProperties:
      zEventAction: history
  /Events/AuthenticationTrap:
    mappings:
      authenticationFailure:
        eventClassKey: authenticationFailure
        example: snmp trap authenticationFailure
        sequence: 7
        transform: 'msg = ''Authentication Failure''


          evt.message = msg

          evt.summary = msg

          '
    zProperties:
      zEventSeverity: 2
  /Events/BIG-IP:
    mappings:
      Drop_Unwanted_Syslogs:
        eventClassKey: defaultmapping
        rule: (evt.DeviceClass == "/Network/BIG-IP" and evt.eventGroup == "syslog")
          and (evt.severity == 2 or evt.message.find("EAI_certAuth") >= 0 or evt.message.find("PROPFIND
          /extranet/Handler") >= 0 or evt.message.find("monitor status") >= 0 or evt.message.find("CS_AUDIT")
          >= 0 or evt.message.find("DEBUG") >= 0) or (evt.device == "ethanol-public.in.credoc.be")
          or evt.message.find("Monitor instance") >= 0 or evt.message.find("No enabled
          pool") >= 0 or evt.message.find("No nodes up") >= 0 or evt.message.find("members
          available") >= 0 or evt.message.find("available members") >= 0
        sequence: 12
        transform: evt._action = "drop"
      bigipNotifyObjMsg:
        eventClassKey: defaultmapping
        rule: ('snmp trap bigipNotifications' in evt.message or 'snmp trap bigipService'
          in evt.message or 'snmp trap bigipNotifyObjMsg' in evt.message)
        sequence: 15
        transform: "todrop=['snmp trap bigipNotifications.53','snmp trap bigipNotifications.52','snmp\
          \ trap bigipNotifications.60','snmp trap bigipNotifications.61','snmp trap\
          \ bigipNotifications.40','snmp trap bigipNotifications.41','snmp trap bigipServiceUp','snmp\
          \ trap bigipServiceDown','snmp trap bigipNotifications.135','snmp trap bigipNotifications.136']\n\
          \nif evt.summary in todrop:\n   evt._action = \"drop\"\nelse:\n   evt.message=evt.bigipNotifyObjMsg\n\
          \   evt.summary=evt.bigipNotifyObjMsg\n"
      dcc:
        eventClassKey: dcc
        sequence: 17
        transform: "evt.severity = 2\nif evt.message.find(\"Illegal URL\") >= 0:\n\
          \    evt._action = \"drop\"\nif evt.message.find(\"monitor status\") >=\
          \ 0:\n    evt._action = \"drop\"\nif evt.message.find(\"Request violations:\
          \ Illegal method. HTTP protocol compliance sub violations\") >=0:\n    evt.summary\
          \ = \"Request violations: Illegal method. HTTP protocol compliance sub violations\"\
          \n    evt.message = \"Request violations: Illegal method. HTTP protocol\
          \ compliance sub violations\"\n"
      drop_unwanted_gtmd:
        eventClassKey: gtmd
        sequence: 1
        transform: "todrop=['SNMP_TRAP: Pool','SNMP_TRAP: VS','joined sync group','left\
          \ sync group']\n\nif evt.summary in todrop:\n   evt._action = \"drop\"\n"
        zProperties:
          zEventSeverity: 0
      gtmd:
        eventClassKey: gtmd
        sequence: 6
      httpd:
        eventClassKey: defaultmapping
        rule: ('httpd' in evt.eventClassKey)
        sequence: 16
        transform: "evt.severity = 2\nif evt.message.find(\"monitor status\") >= 0:\n\
          \    evt._action = \"drop\"\n"
      mcpd:
        eventClassKey: mcpd
        sequence: 2
        transform: "evt.severity = 2\nif evt.message.find(\"monitor status\") >= 0\
          \ or evt.message.find(\"has become\") >= 0:\n    evt._action = \"drop\"\n"
      monitor_instance_down:
        eventClassKey: gtmd
        example: '011ae0f2:1: Monitor instance bigip 204.11.50.138:80 UP --> DOWN
          from 204.11.51.61 (DOWN)'
        regex: Monitor instance [^ ]+ [^ ]+ UP --> DOWN from [^ ]+
        sequence: 3
        transform: 'evt.summary = evt.summary.split(":", 2)[-1].strip()

          evt.eventKey = evt.summary.split()[3] + "-" + evt.summary.split()[8]'
      monitor_instance_up:
        eventClassKey: gtmd
        example: '011ae0f2:1: Monitor instance bigip 204.11.50.138:80 DOWN --> UP
          from 204.11.51.61 (UP)'
        regex: Monitor instance [^ ]+ [^ ]+ DOWN --> UP from [^ ]+
        transform: 'evt.summary = evt.summary.split(":", 2)[-1].strip()

          evt.eventKey = evt.summary.split()[3] + "-" + evt.summary.split()[8]'
        zProperties:
          zEventSeverity: 0
      pendsect:
        eventClassKey: pendsect
        example: 'pendsect: /dev/sda no Pending Sectors detected'
        sequence: 1002
        transform: "if 'no Pending Sectors detected' in evt.message:\n    evt.severity=0\n"
      pool_member_down:
        eventClassKey: mcpd
        example: '01070638:5: Pool member 172.16.3.20:80 monitor status down.'
        regex: Pool member [^ ]+ monitor status down
        sequence: 1
        transform: 'evt.summary = evt.summary.split(":", 2)[-1].strip()

          evt.eventKey = summary.split()[2]'
      pool_member_up:
        eventClassKey: mcpd
        example: '01070727:5: Pool member 172.16.3.20:80 monitor status up.'
        regex: Pool member [^ ]+ monitor status up
        transform: 'evt.summary = evt.summary.split(":", 2)[-1].strip()

          evt.eventKey = summary.split()[2]'
        zProperties:
          zEventSeverity: 0
      state_change_down:
        eventClassKey: gtmd
        example: '011a6006:1: SNMP_TRAP: VS dynamic.boingboing.net (ip:port=204.11.50.138:80)
          (Server gtm1.tor) state change green --> red (VS dynamic.boingboing.net:
          No nodes up)'
        regex: state change [a-z]+ --> [a-z]+
        sequence: 5
        transform: 'evt.summary = evt.summary.split(":", 3)[-1].strip()

          evt.eventKey = evt.summary.split()[1] + "-" + evt.summary.split()[4].rstrip(")")'
      state_change_up:
        eventClassKey: gtmd
        example: '011a6005:1: SNMP_TRAP: VS dynamic.boingboing.net (ip:port=204.11.50.138:80)
          (Server gtm1.tor) state change red --> green'
        regex: state change [a-z]+ --> green
        sequence: 2
        transform: 'evt.summary = evt.summary.split(":", 3)[-1].strip()

          evt.eventKey = evt.summary.split()[1] + "-" + evt.summary.split()[4].rstrip(")")'
        zProperties:
          zEventSeverity: 0
      sync_group_joined:
        eventClassKey: gtmd
        example: '011a5008:1: SNMP_TRAP: BIG-IP GTM gtm1.tor (204.11.51.61) joined
          sync group fmpub'
        regex: \([^ ]+\) joined sync group .+
        sequence: 1
        transform: 'evt.summary = evt.summary.split(":", 3)[-1].strip()

          evt.eventKey = evt.summary.split()[3].strip("()") + "-" + evt.summary.split()[-1]'
        zProperties:
          zEventSeverity: 0
      sync_group_left:
        eventClassKey: gtmd
        example: '011a5009:1: SNMP_TRAP: BIG-IP GTM gtm1.tor (204.11.51.61) left sync
          group fmpub'
        regex: \([^ ]+\) left sync group .+
        sequence: 4
        transform: 'evt.summary = evt.summary.split(":", 3)[-1].strip()

          evt.eventKey = evt.summary.split()[3].strip("()") + "-" + evt.summary.split()[-1]'
      tmm:
        eventClassKey: defaultmapping
        rule: ('tmm' in evt.eventClassKey)
        sequence: 17
        transform: '#evt.severity = 2

          evt._action = ''drop''

          '
    transform: "from transaction import commit\nimport re\n\nif evt.component.startswith('tmm'):\n\
      \    evt.component = 'tmm'\n\nif  'ltmPoolStatus_ltmPoolStatus|PoolStatus_Red'\
      \ in evt.eventKey:\n   d=dmd.Devices.getOrganizer('Network/BIG-IP')\n   for\
      \ devices in d.getSubDevices():\n      if devices.id == device.id:\n       \
      \  for pools in devices.loadbalancerpools():\n            if pools.id == evt.component:\n\
      \               dedupfields = [evt.device, pools.id, evt.eventClass]\n     \
      \          dedupfields += [evt.eventKey, evt.severity]\n               fingerprint='|'.join(map(str,\
      \ dedupfields))\n               debug_text = fingerprint\n               if\
      \ pools.monitor == False:\n                  zep = getFacade('zep')\n      \
      \            evt_filter = zep.createEventFilter(status=(0,1,2),fingerprint=fingerprint)\n\
      \                  try:\n                      summaries = zep.getEventSummaries(0,\
      \ limit=1, filter=evt_filter)\n                  except:\n                 \
      \     summaries = {'total': 0}                  \n                  if summaries['total']:\n\
      \                     zep.closeEventSummaries(eventFilter=evt_filter)\n    \
      \              evt._action = \"drop\"\n               else:\n              \
      \    zep = getFacade('zep')\n                  evt_filter = zep.createEventFilter(status=(0,1,2),fingerprint=fingerprint)\n\
      \                  summaries = zep.getEventSummaries(0, limit=1, filter=evt_filter)\n\
      \                  events = list(summaries['events'])\n                  if\
      \ summaries['total']:\n                     import time\n                  \
      \   first_time = events[0]['first_seen_time'] / 1000.0\n                   \
      \  if first_time < time.time() - 259200:\n                        pools.monitor\
      \ = False\n                        commit()\n\nif 'ltmPoolMemberStatus_ltmPoolMemberStatus|PoolMemberStatus_Offline'\
      \ in evt.eventKey or 'ltmPoolMemberStatus_ltmPoolMemberStatus|PoolMemberStatus_Unknown'\
      \ in evt.eventKey:\n   p = re.search('(.*)\\-[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\\
      .[0-9]{1,3}\\-', evt.component)\n   p_title = 'pool-' + p.groups(0)[0]\n\n \
      \  d=dmd.Devices.getOrganizer('Network/BIG-IP')\n   for devices in d.getSubDevices():\n\
      \      if devices.id == device.id:\n         for pools in devices.loadbalancerpools():\n\
      \            if pools.id == p_title:\n               for members in pools.members():\n\
      \                  if members.id == evt.component:\n                     dedupfields\
      \ = [evt.device, members.id, evt.eventClass]\n                     dedupfields\
      \ += [evt.eventKey, evt.severity]\n                     fingerprint='|'.join(map(str,\
      \ dedupfields))\n                     if members.monitor == False:\n       \
      \                 zep = getFacade('zep')\n                        evt_filter\
      \ = zep.createEventFilter(status=(0,1,2),fingerprint=fingerprint)\n        \
      \                summaries = zep.getEventSummaries(0, limit=1, filter=evt_filter)\n\
      \                        if summaries['total']:\n                          \
      \ zep.closeEventSummaries(eventFilter=evt_filter)\n                        evt._action\
      \ = \"drop\"\n                     else:\n                        zep = getFacade('zep')\n\
      \                        evt_filter = zep.createEventFilter(status=(0,1,2),fingerprint=fingerprint)\n\
      \                        summaries = zep.getEventSummaries(0, limit=1, filter=evt_filter)\n\
      \                        events = list(summaries['events'])\n              \
      \          if summaries['total']:\n                           import time\n\
      \                           first_time = events[0]['first_seen_time'] / 1000.0\n\
      \                           if first_time < time.time() - 259200:\n        \
      \                      members.monitor = False\n                           \
      \   commit()\n\nif 'PoolMemberStatus_Offline' in evt.eventKey:\n    evt.message\
      \ = \"Pool Member {} status is offline\".format(evt.component)\n    evt.summary\
      \ = \"Pool Member {} status is offline\".format(evt.component)\nelif 'PoolMemberStatus_Unknown'\
      \ in evt.eventKey:\n    evt.message = \"Pool Member {} status is unknown\".format(evt.component)\n\
      \    evt.summary = \"Pool Member {} status is unknown\".format(evt.component)\n\
      elif 'PoolMemberStatus_Error' in evt.eventKey:\n    evt.message = \"Pool Member\
      \ {} status is in error\".format(evt.component)\n    evt.summary = \"Pool Member\
      \ {} status is in error\".format(evt.component)\n\n\nif 'PoolStatus_Red' in\
      \ evt.eventKey:\n    evt.summary = \"Pool {} status is offline\".format(evt.component)\n\
      \    evt.message = debug_text"
  /Events/Backup: {}
  /Events/Backup/BackupApplianceError:
    zProperties:
      zEventSeverity: 5
  /Events/Backup/BackupApplianceSizeChange:
    zProperties:
      zEventSeverity: 5
  /Events/Backup/BackupNode: {}
  /Events/Backup/BackupNode/Backup402:
    zProperties:
      zEventSeverity: 5
  /Events/Backup/BackupNode/BackupCritical:
    transform: 'eventkey=evt.eventKey

      summary=evt.summary

      backuped_device=eventkey.split("_")[1]

      treshold=summary.split(":")[1]

      errorcode=treshold.split(" ")[3]

      evt.summary="Backup of %s has failed with errorcode %s" %(backuped_device, errorcode)

      evt.component="Backup: %s" %backuped_device

      '
    zProperties:
      zEventSeverity: 5
  /Events/Backup/BackupNode/BackupError:
    transform: 'eventkey=evt.eventKey

      summary=evt.summary

      backuped_device=eventkey.split("_")[1]

      treshold=summary.split(":")[1]

      errorcode=treshold.split(" ")[3]

      evt.summary="Backup of %s has failed with errorcode %s" %(backuped_device, errorcode)

      evt.component="Backup: %s" %backuped_device

      '
    zProperties:
      zEventSeverity: 4
  /Events/Backup/BackupNode/BackupMissed:
    transform: 'eventkey=evt.eventKey

      summary=evt.summary

      backuped_device=eventkey.split("_")[1]

      treshold=summary.split(":")[1]

      errorcode=treshold.split(" ")[3]

      evt.summary="Missed backup of %s (%s)" %(backuped_device, errorcode)

      evt.component="Backup: %s" %backuped_device

      '
    zProperties:
      zEventSeverity: 5
  /Events/Backup/BackupNode/BackupWarning:
    transform: 'eventkey=evt.eventKey

      summary=evt.summary

      backuped_device=eventkey.split("_")[1]

      treshold=summary.split(":")[1]

      errorcode=treshold.split(" ")[3]

      evt.summary="Backup of %s has failed with errorcode %s" %(backuped_device, errorcode)

      evt.component="Backup: %s" %backuped_device

      '
    zProperties:
      zEventSeverity: 3
  /Events/Backup/BackupPath: {}
  /Events/Backup/BackupPath/BackupPathOffline: {}
  /Events/Backup/BackupRanOnAllNodes: {}
  /Events/Backup/BackupScratch: {}
  /Events/Backup/BackupScratch/BackupScratch01: {}
  /Events/Backup/BackupScratch/BackupScratch05: {}
  /Events/Backup/BackupScratch/BackupScratch10: {}
  /Events/Backup/BackupStoragePool: {}
  /Events/Backup/BackupStoragePool/PrimaryDiskPoolFull: {}
  /Events/Backup/BackupTSMDB: {}
  /Events/Backup/BackupTSMDB/BackupNoDBBackup: {}
  /Events/Backup/BackupTSMDB/BackupNoRecord: {}
  /Events/Backup/TapeLibraryDoorChange:
    mappings:
      ieDoorStatusChange:
        eventClassKey: ieDoorStatusChange
        example: snmp trap ieDoorStatusChange
        sequence: 7
    zProperties:
      zEventSeverity: 2
  /Events/Backup/TapeLibraryMediaStatusChange:
    mappings:
      mediaStatusChange:
        eventClassKey: mediaStatusChange
        example: snmp trap mediaStatusChange
        sequence: 7
  /Events/Backup/TapeLibraryOperatorNeeded:
    mappings:
      operatorInterventionRequired:
        eventClassKey: operatorInterventionRequired
        example: snmp trap operatorInterventionRequired
        sequence: 7
  /Events/CRL: {}
  /Events/CRL/CAError:
    transform: 'crl_line = evt.eventKey

      crl = crl_line.split(''|'')[1]


      evt.summary = "Error fetching CRL: %s" %crl

      evt.component = "CRL Error"

      '
  /Events/CRL/Change: {}
  /Events/CRL/Error: {}
  /Events/CRL/FetchError:
    transform: 'crl_line = evt.eventKey

      crl = crl_line.split(''|'')[1]


      evt.summary = "Error fetching CRL: %s" %crl

      evt.component = "CRL Error"

      '
  /Events/CRL/Outdated:
    transform: 'crl_line = evt.eventKey

      crl = crl_line.split(''|'')[1]


      evt.summary = "Error fetching CRL: %s" %crl

      evt.component = "CRL Error"

      '
  /Events/Capacity: {}
  /Events/Capacity/CPU: {}
  /Events/Capacity/Memory: {}
  /Events/Capacity/Network: {}
  /Events/Capacity/Storage: {}
  /Events/Certificate: {}
  /Events/Certificate/Certificate10days:
    transform: "import os\n\nhascomponent = True\ndaysleft = evt.current\n\nif evt.component.startswith(\"\
      External Certificate\"):\n    cmd = \"/usr/bin/ssh {} 'cat /tmp/{}_certificate_external'\
      \ 2> /dev/null\".format(evt.manager, evt.device)\nelif evt.component.startswith(\"\
      Credoc CA Certificate\"):\n    cmd = \"/usr/bin/ssh {} 'cat /tmp/{}_certificate_credocca'\
      \ 2> /dev/null\".format(evt.manager, evt.device)\nelif evt.component.startswith(\"\
      3rd Party Certificate\"):\n    cmd = \"/usr/bin/ssh {} 'cat /tmp/{}_certificate_3rdparties'\
      \ 2> /dev/null\".format(evt.manager, evt.device)\nelse:\n    hascomponent =\
      \ False\n\nif hascomponent:\n    try:\n        cmd_output = str(os.popen(cmd).read())\n\
      \        certificate = cmd_output.split(\" \")[0]\n        msg = 'Certificate\
      \ {} will expire in {} days'.format(certificate, int(float(daysleft)))\n   \
      \     evt.summary =  msg\n        evt.message =  msg\n        evt.component\
      \ = \"{}: {}\".format(evt.component, certificate)\n    except Exception, e:\n\
      \        evt.component = \"Transform Error\"\n        evt.summary = \"%s\" %e\n\
      else:\n    evt.summary = \"Certificate will expire in {} days\".format(daysleft)\n"
  /Events/Certificate/Certificate30days:
    transform: "import os\n\nhascomponent = True\ndaysleft = evt.current\n\nif evt.component.startswith(\"\
      External Certificate\"):\n    cmd = \"/usr/bin/ssh {} 'cat /tmp/{}_certificate_external'\
      \ 2> /dev/null\".format(evt.manager, evt.device)\nelif evt.component.startswith(\"\
      Credoc CA Certificate\"):\n    cmd = \"/usr/bin/ssh {} 'cat /tmp/{}_certificate_credocca'\
      \ 2> /dev/null\".format(evt.manager, evt.device)\nelif evt.component.startswith(\"\
      3rd Party Certificate\"):\n    cmd = \"/usr/bin/ssh {} 'cat /tmp/{}_certificate_3rdparties'\
      \ 2> /dev/null\".format(evt.manager, evt.device)\nelse:\n    hascomponent =\
      \ False\n\nif hascomponent:\n    try:\n        cmd_output = str(os.popen(cmd).read())\n\
      \        certificate = cmd_output.split(\" \")[0]\n        msg = 'Certificate\
      \ {} will expire in {} days'.format(certificate, int(float(daysleft)))\n   \
      \     evt.summary =  msg\n        evt.message =  msg\n        evt.component\
      \ = \"{}: {}\".format(evt.component, certificate)\n    except Exception, e:\n\
      \        evt.component = \"Transform Error\"\n        evt.summary = \"%s\" %e\n\
      else:\n    evt.summary = \"Certificate will expire in {} days\".format(daysleft)\n"
  /Events/Certificate/Certificate60days:
    transform: "import os\n\nhascomponent = True\ndaysleft = evt.current\n\nif evt.component.startswith(\"\
      External Certificate\"):\n    cmd = \"/usr/bin/ssh {} 'cat /tmp/{}_certificate_external'\
      \ 2> /dev/null\".format(evt.manager, evt.device)\nelif evt.component.startswith(\"\
      Credoc CA Certificate\"):\n    cmd = \"/usr/bin/ssh {} 'cat /tmp/{}_certificate_credocca'\
      \ 2> /dev/null\".format(evt.manager, evt.device)\nelif evt.component.startswith(\"\
      3rd Party Certificate\"):\n    cmd = \"/usr/bin/ssh {} 'cat /tmp/{}_certificate_3rdparties'\
      \ 2> /dev/null\".format(evt.manager, evt.device)\nelse:\n    hascomponent =\
      \ False\n\nif hascomponent:\n    try:\n        cmd_output = str(os.popen(cmd).read())\n\
      \        certificate = cmd_output.split(\" \")[0]\n        msg = 'Certificate\
      \ {} will expire in {} days'.format(certificate, int(float(daysleft)))\n   \
      \     evt.summary =  msg\n        evt.message =  msg\n        evt.component\
      \ = \"{}: {}\".format(evt.component, certificate)\n    except Exception, e:\n\
      \        evt.component = \"Transform Error\"\n        evt.summary = \"%s\" %e\n\
      else:\n    evt.summary = \"Certificate will expire in {} days\".format(daysleft)\n"
  /Events/Certificate/CertificateBelgiumChange: {}
  /Events/Certificate/CertificateBelgiumError: {}
  /Events/Certificate/CertificateError:
    transform: "'''\nimport os\n\nhascomponent = True\ndaysleft = evt.current\n\n\
      if evt.component.startswith(\"External Certificate\"):\n    cmd = \"/usr/bin/ssh\
      \ {} 'cat /tmp/{}_certificate_external' 2> /dev/null\".format(evt.manager, evt.device)\n\
      elif evt.component.startswith(\"Credoc CA Certificate\"):\n    cmd = \"/usr/bin/ssh\
      \ {} 'cat /tmp/{}_certificate_credocca' 2> /dev/null\".format(evt.manager, evt.device)\n\
      elif evt.component.startswith(\"3rd Party Certificate\"):\n    cmd = \"/usr/bin/ssh\
      \ {} 'cat /tmp/{}_certificate_3rdparties' 2> /dev/null\".format(evt.manager,\
      \ evt.device)\nelse:\n    hascomponent = False\n\nif hascomponent:\n    try:\n\
      \        cmd_output = str(os.popen(cmd).read())\n        certificate = cmd_output.split(\"\
      \ \")[0]\n        msg = 'Certificate {} will expire in {} days'.format(certificate,\
      \ int(float(daysleft)))\n        evt.summary =  msg\n        evt.message = \
      \ msg\n        evt.component = \"{}: {}\".format(evt.component, certificate)\n\
      \    except Exception, e:\n        evt.component = \"Transform Error\"\n   \
      \     evt.summary = \"{}\".format(e)\nelse:\n    evt.summary = \"Certificate\
      \ will expire in {} days\".format(daysleft)\n'''"
  /Events/Certificate/CertificateExpired:
    transform: "import os\n\nhascomponent = True\ndaysleft = evt.current\n\nif evt.component.startswith(\"\
      External Certificate\"):\n    cmd = \"/usr/bin/ssh {} 'cat /tmp/{}_certificate_external'\
      \ 2> /dev/null\".format(evt.manager, evt.device)\nelif evt.component.startswith(\"\
      Credoc CA Certificate\"):\n    cmd = \"/usr/bin/ssh {} 'cat /tmp/{}_certificate_credocca'\
      \ 2> /dev/null\".format(evt.manager, evt.device)\nelif evt.component.startswith(\"\
      3rd Party Certificate\"):\n    cmd = \"/usr/bin/ssh {} 'cat /tmp/{}_certificate_3rdparties'\
      \ 2> /dev/null\".format(evt.manager, evt.device)\nelse:\n    hascomponent =\
      \ False\n\nif hascomponent:\n    try:\n        cmd_output = str(os.popen(cmd).read())\n\
      \        certificate = cmd_output.split(\" \")[0]\n        msg = 'Certificate\
      \ {} will expire in {} days'.format(certificate, int(float(daysleft)))\n   \
      \     evt.summary =  msg\n        evt.message =  msg\n        evt.component\
      \ = \"{}: {}\".format(evt.component, certificate)\n    except Exception, e:\n\
      \        evt.component = \"Transform Error\"\n        evt.summary = \"%s\" %e\n\
      else:\n    evt.summary = \"Certificate will expire in {} days\".format(daysleft)\n"
  /Events/Change:
    mappings:
      cHsrpStateChange:
        eventClassKey: cHsrpStateChange
        example: snmp trap cHsrpStateChange
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      ccmCLIRunningConfigChanged:
        eventClassKey: ccmCLIRunningConfigChanged
        example: snmp trap ccmCLIRunningConfigChanged
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      cefcFanTrayStatusChange:
        eventClassKey: cefcFanTrayStatusChange
        example: snmp trap cefcFanTrayStatusChange
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      cefcModuleStatusChange:
        eventClassKey: cefcModuleStatusChange
        example: snmp trap cefcModuleStatusChange
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      cefcPowerSupplyOutputChange:
        eventClassKey: cefcPowerSupplyOutputChange
        example: snmp trap cefcPowerSupplyOutputChange
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      cefcUnrecognizedFRU:
        eventClassKey: cefcUnrecognizedFRU
        example: snmp trap cefcUnrecognizedFRU
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      cesRealServerStateChangeRev1:
        eventClassKey: cesRealServerStateChangeRev1
        example: snmp trap cesRealServerStateChangeRev1
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      cflIfStatusChangeNotif:
        eventClassKey: cflIfStatusChangeNotif
        example: snmp trap cflIfStatusChangeNotif
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      ciscoConfigManEvent:
        eventClassKey: ciscoConfigManEvent
        example: snmp trap ciscoConfigManEvent from router.mydomain.com
        zProperties:
          zEventAction: status
          zEventSeverity: 2
      ciscoEnvMonFanNotification:
        eventClassKey: ciscoEnvMonFanNotification
        example: snmp trap ciscoEnvMonFanNotification
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      ciscoEnvMonFanStatusChangeNotif:
        eventClassKey: ciscoEnvMonFanStatusChangeNotif
        example: snmp trap ciscoEnvMonFanStatusChangeNotif
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      ciscoEnvMonRedundantSupplyNotification:
        eventClassKey: ciscoEnvMonRedundantSupplyNotification
        example: snmp trap ciscoEnvMonRedundantSupplyNotification
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      ciscoEnvMonShutdownNotification:
        eventClassKey: ciscoEnvMonShutdownNotification
        example: snmp trap ciscoEnvMonShutdownNotification
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      ciscoEnvMonSuppStatusChangeNotif:
        eventClassKey: ciscoEnvMonSuppStatusChangeNotif
        example: snmp trap ciscoEnvMonSuppStatusChangeNotif
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      ciscoEnvMonTempStatusChangeNotif:
        eventClassKey: ciscoEnvMonTempStatusChangeNotif
        example: snmp trap ciscoEnvMonTempStatusChangeNotif
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      ciscoEnvMonTemperatureNotification:
        eventClassKey: ciscoEnvMonTemperatureNotification
        example: snmp trap ciscoEnvMonTemperatureNotification
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      ciscoSlbExtMIBConform:
        eventClassKey: ciscoSlbExtMIBConform
        example: snmp trap ciscoSlbExtMIBConform
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      ciscoSlbVServerStateChange:
        eventClassKey: ciscoSlbVServerStateChange
        example: snmp trap ciscoSlbVServerStateChange
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      ciscoSystemClockChanged:
        eventClassKey: ciscoSystemClockChanged
        example: snmp trap ciscoSystemClockChanged
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      clemHighThresholdExceeded:
        eventClassKey: clemHighThresholdExceeded
        example: snmp trap clemHighThresholdExceeded
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      clemLowThresholdExceeded:
        eventClassKey: clemLowThresholdExceeded
        example: snmp trap clemLowThresholdExceeded
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      clmLicenseExpiryNotify:
        eventClassKey: clmLicenseExpiryNotify
        example: snmp trap clmLicenseExpiryNotify
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      clmLicenseExpiryWarningNotify:
        eventClassKey: clmLicenseExpiryWarningNotify
        example: snmp trap clmLicenseExpiryWarningNotify
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      cltcTunnelDropThresholdExceeded:
        eventClassKey: cltcTunnelDropThresholdExceeded
        example: snmp trap cltcTunnelDropThresholdExceeded
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      cltcTunnelShutdownThresholdExceeded:
        eventClassKey: cltcTunnelShutdownThresholdExceeded
        example: snmp trap cltcTunnelShutdownThresholdExceeded
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      cmasModuleAutoShutdown:
        eventClassKey: cmasModuleAutoShutdown
        example: snmp trap cmasModuleAutoShutdown
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      cmnMacChangedNotification:
        eventClassKey: cmnMacChangedNotification
        example: snmp trap cmnMacChangedNotification
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      cmnMacMoveNotification:
        eventClassKey: cmnMacMoveNotification
        example: snmp trap cmnMacMoveNotification
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      cmnMacThresholdExceedNotif:
        eventClassKey: cmnMacThresholdExceedNotif
        example: snmp trap cmnMacThresholdExceedNotif
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      cpmCPUFallingThreshold:
        eventClassKey: cpmCPUFallingThreshold
        example: snmp trap cpmCPUFallingThreshold
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
        zProperties:
          zEventAction: status
      cpmCPURisingThreshold:
        eventClassKey: cpmCPURisingThreshold
        example: snmp trap cpmCPURisingThreshold
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      csilLoggingFailNotif:
        eventClassKey: csilLoggingFailNotif
        example: snmp trap csilLoggingFailNotif
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      entConfigChange:
        eventClassKey: entConfigChange
        example: snmp trap entConfigChange
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
        zProperties:
          zEventAction: status
      entSensorThresholdNotification:
        eventClassKey: entSensorThresholdNotification
        example: snmp trap entSensorThresholdNotification
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      fallingAlarm:
        eventClassKey: fallingAlarm
        example: snmp trap fallingAlarm
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      hcFallingAlarm:
        eventClassKey: hcFallingAlarm
        example: snmp trap hcFallingAlarm
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      hcRisingAlarm:
        eventClassKey: hcRisingAlarm
        example: snmp trap hcRisingAlarm
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      ldomStateChange:
        eventClassKey: ldomStateChange
        example: snmp trap ldomStateChange
        transform: 'from ZenPacks.zenoss.SolarisMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)

          '
      ldomVCpuChange:
        eventClassKey: ldomVCpuChange
        example: snmp trap ldomVCpuChange
        transform: 'from ZenPacks.zenoss.SolarisMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)

          '
      ldomVccChange:
        eventClassKey: ldomVccChange
        example: snmp trap ldomVccChange
        transform: 'from ZenPacks.zenoss.SolarisMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)

          '
      ldomVconsChange:
        eventClassKey: ldomVconsChange
        example: snmp trap ldomVconsChange
        transform: 'from ZenPacks.zenoss.SolarisMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)

          '
      ldomVdiskChange:
        eventClassKey: ldomVdiskChange
        example: snmp trap ldomVdiskChange
        transform: 'from ZenPacks.zenoss.SolarisMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)

          '
      ldomVdsChange:
        eventClassKey: ldomVdsChange
        example: snmp trap ldomVdsChange
        transform: 'from ZenPacks.zenoss.SolarisMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)

          '
      ldomVmemChange:
        eventClassKey: ldomVmemChange
        example: snmp trap ldomVmemChange
        transform: 'from ZenPacks.zenoss.SolarisMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)

          '
      ldomVnetChange:
        eventClassKey: ldomVnetChange
        example: snmp trap ldomVnetChange
        transform: 'from ZenPacks.zenoss.SolarisMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)

          '
      ldomVswChange:
        eventClassKey: ldomVswChange
        example: snmp trap ldomVswChange
        transform: 'from ZenPacks.zenoss.SolarisMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)

          '
        zProperties:
          zEventSeverity: -1
      risingAlarm:
        eventClassKey: risingAlarm
        example: snmp trap risingAlarm
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      stpxInconsistencyUpdate:
        eventClassKey: stpxInconsistencyUpdate
        example: snmp trap stpxInconsistencyUpdate
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      stpxLoopInconsistencyUpdate:
        eventClassKey: stpxLoopInconsistencyUpdate
        example: snmp trap stpxLoopInconsistencyUpdate
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      stpxRootInconsistencyUpdate:
        eventClassKey: stpxRootInconsistencyUpdate
        example: snmp trap stpxRootInconsistencyUpdate
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      topologyChange:
        eventClassKey: topologyChange
        example: snmp trap topologyChange
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      vlanTrunkPortDynamicStatusChange:
        eventClassKey: vlanTrunkPortDynamicStatusChange
        example: snmp trap vlanTrunkPortDynamicStatusChange
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      vmVmpsChange:
        eventClassKey: vmVmpsChange
        example: snmp trap vmVmpsChange
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      vtpConfigDigestError:
        eventClassKey: vtpConfigDigestError
        example: snmp trap vtpConfigDigestError
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      vtpConfigRevNumberError:
        eventClassKey: vtpConfigRevNumberError
        example: snmp trap vtpConfigRevNumberError
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      vtpLocalModeChanged:
        eventClassKey: vtpLocalModeChanged
        example: snmp trap vtpLocalModeChanged
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      vtpServerDisabled:
        eventClassKey: vtpServerDisabled
        example: snmp trap vtpServerDisabled
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      vtpVersionInUseChanged:
        eventClassKey: vtpVersionInUseChanged
        example: snmp trap vtpVersionInUseChanged
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      vtpVersionOneDeviceDetected:
        eventClassKey: vtpVersionOneDeviceDetected
        example: snmp trap vtpVersionOneDeviceDetected
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
    zProperties:
      zEventAction: history
  /Events/Change/Add:
    mappings:
      ldomCreate:
        eventClassKey: ldomCreate
        example: snmp trap ldomCreate
        transform: 'from ZenPacks.zenoss.SolarisMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)

          '
      newRoot:
        eventClassKey: newRoot
        example: snmp trap newRoot
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      vtpVlanCreated:
        eventClassKey: vtpVlanCreated
        example: snmp trap vtpVlanCreated
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
  /Events/Change/Add/Blocked: {}
  /Events/Change/Remove:
    mappings:
      ldomDestroy:
        eventClassKey: ldomDestroy
        example: snmp trap ldomDestroy
        transform: 'from ZenPacks.zenoss.SolarisMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)

          '
  /Events/Change/Remove/Blocked: {}
  /Events/Change/Set: {}
  /Events/Change/Set/Blocked: {}
  /Events/Change/Set/Status:
    transform: "if evt.firstTime == evt.lastTime and hasattr(evt, 'compClass'):\n\
      \     for comp in device.getMonitoredComponents(type=evt.compClass):\n     \
      \   if comp.id != evt.component: continue\n        comp.status = int(evt.compStatus)\n\
      \        from transaction import commit\n        commit()\n        break\n"
    zProperties:
      zEventAction: status
  /Events/Change/Set/UCS:
    transform: "if component is not None:\n    if hasattr(component, 'operState')\
      \ and evt.operState != component.operState:\n        @transact\n        def\
      \ updateDb():\n            component.operState = evt.operState\n        updateDb()\n"
    zProperties:
      zEventAction: status
  /Events/CheckPoint: {}
  /Events/CheckPoint/VSX: {}
  /Events/CheckPoint/VSX/Connections:
    transform: "if 'vsxCountersConnNum' in evt.eventKey:\n  ha_state = component.HAState\n\
      \  if not ha_state == 'Active':\n    evt.severity = 2\n  msg = 'There are {}\
      \ connections on {}'.format(evt.current, component.title)\n  evt.message = msg\n\
      \  evt.summary = msg\n"
  /Events/Cisco:
    mappings:
      LINK-2-BADVCALL:
        eventClassKey: LINK-2-BADVCALL
        example: Interface FastEthernet3/6, undefined entry point
        regex: Interface (?P<component>\S+), undefined entry point
      ciscoConfigManEvent:
        eventClassKey: ciscoConfigManEvent
        example: snmp trap ciscoConfigManEvent
        sequence: 7
      newRoot:
        eventClassKey: newRoot
        example: snmp trap newRoot
        zProperties:
          zEventSeverity: 2
  /Events/Cisco APIC:
    mappings:
      Cisco APIC Fault Default Mapping:
        eventClassKey: defaultmapping
        example: 'TCA: eqptIngrDropPkts5min errorRate value 19 raised above  threshold
          10'
        rule: (getattr(evt, 'eventClassKey', '') or '').startswith('cisco-apic-')
        sequence: 11
        transform: "import re\n\neventKey = getattr(evt, 'eventKey', None)\nif eventKey:\n\
          \    match = re.search(r'^topology/pod-\\d+/node-\\d+/sys/phys-', eventKey)\n\
          \    if match:\n        if not component or component.__class__.__name__\
          \ == 'FabricNode':\n            evt._action = 'drop'"
  /Events/Cisco/FW:
    mappings:
      defaultmapping:
        eventClassKey: defaultmapping
        example: 1313851 03/30/2006 14:01:28.540 SEV=3 SNMP/6 RPT=1026 10.1.2.3 Received
          SNMP request with unsupported community string 'public'
        regex: \d+ \S+ \S+ SEV=\d+ (?P<component>\S+) RPT=\d+ \S+ (?P<summary>Received
          SNMP .*)
        sequence: 2
  /Events/Cisco/NCS: {}
  /Events/Cisco/NCS/WirelessMOStatusNotification:
    mappings:
      ciscoWirelessMOStatusNotification:
        eventClassKey: ciscoWirelessMOStatusNotification
        example: snmp trap ciscoWirelessMOStatusNotification
        sequence: 7
        transform: 'import struct, datetime


          mapping = dict({8:''>HBBBBBB'', 11:''>HBBBBBBcBB''})


          rdate = evt.cWNotificationTimestamp


          (year, month,  day , hour, minute, second, deciseconds, offset, ohours,
          omins) =  struct.unpack(mapping[len(rdate)], rdate)


          evt.cWNotificationTimestamp = "%s:%s:%s %s/%s/%s" %(hour,minute,second,day,month,year)

          '
        zProperties:
          zEventSeverity: 2
  /Events/CiscoUCS:
    mappings:
      LOCAL0-3-SYSTEM_MSG:
        eventClassKey: '%LOCAL0-3-SYSTEM_MSG'
        example: '[F0374][major][equipment-inoperable][sys/switch-A/psu-1] Power supply
          1 in fabric interconnect A operability: inoperable - svc_sam_dme[3274]'
        regex: \[(?P<ucs_faultCode>\S+)\]\[(?P<ucs_severity>\S+)\]\[(?P<ucs_reason>\S+)\]\[(?P<component>\S+)\]
          (?P<summary>.*)
        transform: "SEVERITY_MAP = {\n    'critical': 5,\n    'major': 4,\n    'minor':\
          \ 3,\n    'cleared': 0,\n    }\n\n# Map UCS severity to Zenoss severity.\
          \ Default to Informational.\nevt.severity = SEVERITY_MAP.get(evt.ucs_severity,\
          \ 2)\n\n# Combine UCS faultCode and reason for the eventKey. This makes\
          \ deduplication\n# and auto-clearing work appropriately.\nevt.eventKey =\
          \ '|'.join([evt.ucs_faultCode, evt.ucs_reason])\n"
      LOCAL0-3-SYSTEM_MSG_1:
        eventClassKey: LOCAL0-3-SYSTEM_MSG
        example: '[F0374][major][equipment-inoperable][sys/switch-A/psu-1] Power supply
          1 in fabric interconnect A operability: inoperable - svc_sam_dme[3274]'
        regex: \[(?P<ucs_faultCode>\S+)\]\[(?P<ucs_severity>\S+)\]\[(?P<ucs_reason>\S+)\]\[(?P<component>\S+)\]
          (?P<summary>.*)
        transform: "SEVERITY_MAP = {\n    'critical': 5,\n    'major': 4,\n    'minor':\
          \ 3,\n    'cleared': 0,\n    }\n\n# Map UCS severity to Zenoss severity.\
          \ Default to Informational.\nevt.severity = SEVERITY_MAP.get(evt.ucs_severity,\
          \ 2)\n\n# Combine UCS faultCode and reason for the eventKey. This makes\
          \ deduplication\n# and auto-clearing work appropriately.\nevt.eventKey =\
          \ '|'.join([evt.ucs_faultCode, evt.ucs_reason])\n"
    transform: "# Translate UCS event event components when they come from syslogs\
      \ and have not\n# been pre-normalized by zenucsevents.\nif '/' in evt.component:\n\
      \    from Products.ZenUtils.Utils import prepId\n    evt.component = prepId(evt.component)\n"
  /Events/CiscoUCS/Event:
    mappings:
      UCS Events Default:
        eventClassKey: defaultmapping
        rule: (getattr(evt, 'eventClassKey', '') or '').startswith('ucs|E')
        sequence: 8
        zProperties:
          zEventAction: history
  /Events/CiscoUCS/Fault:
    mappings:
      UCS Faults Default:
        eventClassKey: defaultmapping
        rule: (getattr(evt, 'eventClassKey', '') or '').startswith('ucs|F')
        sequence: 9
        transform: "# ZEN-17539: Associate a chassis slot fault with a blade server.\n\
          ucs_code = getattr(evt, 'ucs-code', '')\nif ucs_code in ('F16519',):\n \
          \   import re\n    match = re.search('fabric_server_chassis-(?P<chassis_id>\\\
          d+)_slot-(?P<slot_id>\\d+)', evt.component)\n    if match:\n        chassis_id\
          \ = match.group('chassis_id')\n        slot_id = match.group('slot_id')\n\
          \        setattr(evt, 'original-component', evt.component)\n        setattr(evt,\
          \ 'original-ucs-dn', getattr(evt, 'ucs-dn', ''))\n        setattr(evt, 'component',\
          \ 'sys_chassis-{}_blade-{}'.format(chassis_id, slot_id))\n        setattr(evt,\
          \ 'ucs-dn', 'sys/chassis-{}/blade-{}/fault-{}'.format(chassis_id, slot_id,\
          \ ucs_code))\n"
  /Events/Cluster:
    mappings:
      ClusSvc_1135:
        eventClassKey: ClusSvc_1135
        example: 'Cluster node CFEMARCL1 was removed from the active server cluster
          membership.

          Cluster service may have been stopped on the node, the node may have

          failed, or the node may have lost communication with the other active

          server cluster nodes.'
        zProperties:
          zEventSeverity: 4
  /Events/Cluster/CRM: {}
  /Events/Cluster/CRM/ServiceNotRunning:
    transform: 'parts = evt.summary.split('' '')

      service = parts[2]


      evt.component = "CRM service %s" %service

      '
    zProperties:
      zEventSeverity: 5
  /Events/Cluster/Heartbeat:
    mappings:
      ClusSvc_1125:
        eventClassKey: ClusSvc_1125
        example: The interface for cluster node 'CFEMARCL2' on network 'Private' is
          operational (up).  The node can communicate with all other available cluster
          nodes on the network.
        zProperties:
          zEventSeverity: 0
      ClusSvc_1126:
        eventClassKey: ClusSvc_1126
        example: 'The interface for cluster node ''CFEMARCL2'' on network ''Private''
          is unreachable by

          at least one other cluster node attached to the network. the server cluster
          was

          not able to determine the location of the failure. Look for additional

          entries in the system event log indicating which other nodes

          have lost communication with node CFEMARCL2. If the condition persists,
          check

          the cable connecting the node to the network. Next, check for hardware or

          software errors in the node''s network adapter. Finally, check for failures

          in any other network components to which the node is connected such as

          hubs, switches, or bridges.'
        zProperties:
          zEventSeverity: 4
      ClusSvc_1128:
        eventClassKey: ClusSvc_1128
        example: 'Cluster network ''Private'' is operational (up). All available server
          cluster nodes

          attached to the network can communicate using it.'
        zProperties:
          zEventSeverity: 0
      ClusSvc_1130:
        eventClassKey: ClusSvc_1130
        example: 'Cluster network ''Private'' is down. None of the available nodes
          can communicate

          using this network. If the condition persists, check for failures in any

          network components to which the nodes are connected such as hubs, switches,

          or bridges. Next, check the cables connecting the nodes to the network.

          Finally, check for hardware or software errors in the adapters that attach

          the nodes to the network.'
        zProperties:
          zEventSeverity: 4
  /Events/Cluster/ResourceDegraded:
    mappings:
      cpqClusterResourceDegraded:
        eventClassKey: cpqClusterResourceDegraded
        example: snmp trap cpqClusterResourceDegraded
        sequence: 1
        transform: "clusterRes = []\n\nfor attr in evt.details._map:\n    if attr.startswith('cpqClusterResourceName'):\n\
          \        clusterRes.append(getattr(evt, attr, ''))\n\ncomp = clusterRes[0]\n\
          msg = 'Cluster Resource Degraded'\nevt.summary = msg\nevt.message = '{}\\\
          r\\n{}'.format(msg, ','.join(clusterRes))\n\n\n\n\n"
      cpqClusterResourceFailed:
        eventClassKey: cpqClusterResourceFailed
        example: snmp trap cpqClusterResourceFailed
        sequence: 1
  /Events/Cmd:
    mappings:
      cisco_ace_poll_failure:
        eventClassKey: cisco_ace_poll_failure
        example: connection timed out
        sequence: 1000
      cmd_failure_netapp:
        eventClassKey: cmd_failure_netapp
        sequence: 7
      cmd_parse_error:
        eventClassKey: cmd_parse_error
        sequence: 7
  /Events/Cmd/Fail:
    transform: "if evt.summary == 'Remote command execution failed: Traceback (most\
      \ recent call last):':\n    if evt.eventKey:\n        evt.summary = 'Command\
      \ failed %s' %evt.eventKey\n"
  /Events/Cmd/Ok: {}
  /Events/Config:
    mappings:
      SYS-5-CONFIG_I:
        eventClassKey: SYS-5-CONFIG_I
        example: Configured from console by username onvty1 (1.1.1.1)
        regex: Configured from console by (?P<username>\S+) \S+ ((?P<remoteIp>\S+))
      sendmail:
        eventClassKey: sendmail
        example: unable to qualify my own domain name (MisysReports) -- using short
          name
        sequence: 1
        zProperties:
          zEventSeverity: 3
    zProperties:
      zEventAction: history
      zEventSeverity: 2
  /Events/Conn: {}
  /Events/Conn/Fail: {}
  /Events/DB:
    mappings:
      MSSQLSERVER_17052:
        evaluation: Fatal DB Error
        eventClassKey: MSSQLSERVER_17052
        example: 'Error: 0, Severity: 19, State: 0 language_exec: Process 54 generated
          an access violation. SQL Server is terminating this process.'
  /Events/DB/Filemaker:
    mappings:
      FileMaker Server 7_190:
        eventClassKey: FileMaker Server 7_190
        example: Client "COMPUTER" opening a connection from "10.1.2.3".
        zProperties:
          zEventAction: history
          zEventSeverity: 3
      FileMaker Server 7_22:
        eventClassKey: FileMaker Server 7_22
        example: Client "CLIENTNAME" closing a connection.
        zProperties:
          zEventAction: history
      FileMaker Server 7_601:
        eventClassKey: FileMaker Server 7_601
        example: Client "CLIENTNAME" opening database "DATABASENAME" as "USERNAME".
        zProperties:
          zEventAction: history
      FileMaker Server 7_98:
        eventClassKey: FileMaker Server 7_98
        example: Client "CLIENTNAME" closing database "DATABASENAME" as "USERNAME".
        zProperties:
          zEventAction: history
    zProperties:
      zEventSeverity: 2
  /Events/DB/Portal: {}
  /Events/DataPower:
    mappings:
      DPWR_Syslog:
        eventClassKey: defaultmapping
        example: 'trans(431): Certificate ''CC-SP25-2.02.03-OUT-SUPPLIER-RESP'' in
          domain ''production'' is about to expire at ''2017-06-23T11:00:36Z''

          '
        rule: 'evt.agent==''zensyslog'' and evt.manager==''prb-monlogcol-s01.in.credoc.be''
          and evt.message.startswith(''trans(431): Certificate '')'
        sequence: 19
        transform: evt.component = 'Datapower'
      Drop_Unwanted_Syslogs:
        eventClassKey: defaultmapping
        rule: 'evt.message.find("from URL: 10.4.20.5") >= 0 or evt.message.find("from
          URL: 10.4.20.6") >= 0 or evt.message.find("Cannot insert duplicate") >=
          0 or evt.message.find("exceeded for Probe") >= 0 or evt.message.find("DEBUG_DBSP
          - Inserting") >= 0 or evt.message.find("UniqueId") >= 0 or evt.message.find("Database")
          >= 0 or evt.message.find("MIME conformance violation") >= 0 or evt.component.find("gtid")
          >= 0 or evt.component.find("WAMT_Manager") >= 0'
        sequence: 13
        transform: evt._action = "drop"
      Map_to_MPG:
        eventClassKey: defaultmapping
        rule: (evt.component.split('_')[0].find('dpwr') > -1 and evt.eventGroup ==
          "syslog")
        sequence: 14
        transform: "import re\n\nif evt.component.find('KBO_BCE') > -1:\n    dp_dev,\
          \ dp_tags, dp_comp, trail = evt.component.split('_')[:4]\n    dp_comp =\
          \ dp_comp + '_' + trail\nelse:\n    dp_dev, dp_tags, dp_comp = evt.component.split('_')[:3]\n\
          \nis_device = False\nfor device in dmd.Devices.Server.Datapower.Datapower_MPG.getSubDevices():\n\
          \    if dp_comp.find(device.id) > -1:\n        is_device = True\n      \
          \  evt.device = device.id\n\nif evt.device.find('RIC-1.00.00-IN-CLIENT')\
          \ > -1:\n    threshold_count = 10\nelse:\n    threshold_count = 5\n\nif\
          \ not is_device:\n    evt.device = dp_dev\n\nm = re.search('(?:\\[[a-z\\\
          -]+\\])?(\\[[a-z\\-]+\\])(\\[[a-z]+\\])', dp_tags)\nevt.component = m.groups(0)[0]\n\
          \nsummary = evt.summary\nif summary.find('Message monitor') > -1:\n    evt.summary\
          \ = 'Message monitor tiggered' + ' Severity: ' + str(evt.severity)\n   \
          \ evt.message = 'Message monitor tiggered' + ' Severity: ' + str(evt.severity)\n\
          \    evt.severity = 2\nelif summary.find('Error in stream') > -1:\n    evt.summary\
          \ = 'Error in stream' + ' Severity: ' + str(evt.severity)\n    evt.message\
          \ = 'Error in stream' + ' Severity: ' + str(evt.severity)\n    evt.severity\
          \ = 2\nelif summary.find('Timestamp expiration') > -1:\n    evt.summary\
          \ = 'Timestamp expiration' + ' Severity: ' + str(evt.severity)\n    evt.message\
          \ = 'Timestamp expiration' + ' Severity: ' + str(evt.severity)\n    evt.severity\
          \ = 2\nelif summary.find('error occured on socket') > -1:\n    evt.summary\
          \ = 'Error occured on socket' + ' Severity: ' + str(evt.severity)\n    evt.message\
          \ = 'Error occured on socket' + ' Severity: ' + str(evt.severity)\n    evt.severity\
          \ = 2\nelif summary.find('certificate') > -1:\n    evt.summary = 'Certificate\
          \ problem' + ' Severity: ' + str(evt.severity)\n    evt.message = 'Certificate\
          \ problem' + ' Severity: ' + str(evt.severity)\n    evt.severity = 2\nelif\
          \ summary.find('signature') > -1:\n    evt.summary = 'Signature problem'\
          \ + ' Severity: ' + str(evt.severity)\n    evt.message = 'Signature problem'\
          \ + ' Severity: ' + str(evt.severity)\n    evt.severity = 2\nelif summary.find('Rejected\
          \ by policy') > -1:\n    evt.summary = 'Rejected by policy' + ' Severity:\
          \ ' + str(evt.severity)\n    evt.message = 'Rejected by policy' + ' Severity:\
          \ ' + str(evt.severity)\n    evt.severity = 2\nelif summary.find('Network\
          \ Error') > -1:\n    evt.summary = 'Network Error' + ' Severity: ' + str(evt.severity)\n\
          \    evt.message = 'Network Error' + ' Severity: ' + str(evt.severity)\n\
          \    evt.severity = 2\nelif summary.find('response header') > -1:\n    evt.summary\
          \ = 'Failed to process response headers' + ' Severity: ' + str(evt.severity)\n\
          \    evt.message = 'Failed to process response headers' + ' Severity: '\
          \ + str(evt.severity)\n    evt.severity = 2\nelif summary.find('Processing\
          \ of') > -1:\n    evt.summary = 'Processing of XSLT or XSD problem' + '\
          \ Severity: ' + str(evt.severity)\n    evt.message = 'Processing of XSLT\
          \ or XSD problem' + ' Severity: ' + str(evt.severity)\n    evt.severity\
          \ = 2\nelif summary.find('Soapfault') > -1:\n    evt.summary = 'Soapfault'\
          \ + ' Severity: ' + str(evt.severity)\n    evt.message = 'Soapfault' + '\
          \ Severity: ' + str(evt.severity)\n    evt.severity = 2\nelif summary.find('rule')\
          \ > -1:\n    evt.summary = 'Rule failed' + ' Severity: ' + str(evt.severity)\n\
          \    evt.message = 'Rule failed' + ' Severity: ' + str(evt.severity)\n \
          \   evt.severity = 2\nelif summary.find('connecting to URL') > -1:\n   \
          \ evt.summary = 'Connecting to URL problem' + ' Severity: ' + str(evt.severity)\n\
          \    evt.message = 'Connecting to URL problem' + ' Severity: ' + str(evt.severity)\n\
          \    evt.severity = 2\nelif summary.find('xform') > -1:\n    evt.summary\
          \ = 'Transform issue' + ' Severity: ' + str(evt.severity)\n    evt.message\
          \ = 'Transform issue' + ' Severity: ' + str(evt.severity)\n    evt.severity\
          \ = 2\nelif summary.find('markup') > -1:\n    evt.summary = 'Markup problem'\
          \ + ' Severity: ' + str(evt.severity)\n    evt.message = 'Markup problem'\
          \ + ' Severity: ' + str(evt.severity)\n    evt.severity = 2\nelif summary.find('connection')\
          \ > -1:\n    evt.summary = 'Connection problem' + ' Severity: ' + str(evt.severity)\n\
          \    evt.message = 'Connection problem' + ' Severity: ' + str(evt.severity)\n\
          \    evt.severity = 2\nelif summary.find('Schema Validation Error') > -1:\n\
          \    evt.summary = 'Schema Validation Error' + ' Severity: ' + str(evt.severity)\n\
          \    evt.message = 'Schema Validation Error' + ' Severity: ' + str(evt.severity)\n\
          \    evt.severity = 2\nelif summary.find('XML parser limits') > -1:\n  \
          \  evt.summary = 'XML parser limits' + ' Severity: ' + str(evt.severity)\n\
          \    evt.message = 'XML parser limits' + ' Severity: ' + str(evt.severity)\n\
          \    evt.severity = 2\nelif summary.find('invalid character reference')\
          \ > -1:\n    evt.summary = 'invalid character reference' + ' Severity: '\
          \ + str(evt.severity)\n    evt.message = 'invalid character reference' +\
          \ ' Severity: ' + str(evt.severity)\n    evt.severity = 2\nelif summary.find('Authentication\
          \ Failure') > -1:\n    evt.summary = 'Authentication Failure' + ' Severity:\
          \ ' + str(evt.severity)\n    evt.message = 'Authentication Failure' + '\
          \ Severity: ' + str(evt.severity)\n    evt.severity = 2\nelif summary.find('Authorization\
          \ Failure') > -1:\n    evt.summary = 'Authorization Failure' + ' Severity:\
          \ ' + str(evt.severity)\n    evt.message = 'Authorization Failure' + ' Severity:\
          \ ' + str(evt.severity)\n    evt.severity = 2\nelif summary.find('timed\
          \ out') > -1:\n    evt.summary = 'Backend timeout issue' + ' Severity: '\
          \ + str(evt.severity)\n    evt.message = 'Backend timeout issue' + ' Severity:\
          \ ' + str(evt.severity)\n    evt.severity = 2\nelif summary.find('Parse\
          \ error') > -1:\n    evt.summary = 'Parse error' + ' Severity: ' + str(evt.severity)\n\
          \    evt.message = 'Parse error' + ' Severity: ' + str(evt.severity)\n \
          \   evt.severity = 2\nelse:\n    evt.summary = 'Miscellaneous issue' + '\
          \ Severity: ' + str(evt.severity)\n    evt.message = 'Miscellaneous issue'\
          \ + ' Severity: ' + str(evt.severity)\n    evt.severity = 2\ndedupfields\
          \ = [evt.device, evt.component, evt.eventClass]\ndedupfields += [evt.severity,\
          \ evt.summary]\nzep = getFacade('zep')\nevt_filter = zep.createEventFilter(\n\
          \    status=(0,1,2),\n    fingerprint='|'.join(map(str, dedupfields)))\n\
          \nsummaries = zep.getEventSummaries(0, limit=1, filter=evt_filter)\n\nevents\
          \ = list(summaries['events'])\n\nif summaries['total']:\n    import time\n\
          \n    existing_count = events[0]['count']\n    first_time = events[0]['first_seen_time']\
          \ / 1000.0\n\n    # Close the existing event if it was first seen more than\
          \ an hour ago.\n    if first_time < time.time() - 300:\n\n        # We close\
          \ based on what amounts to the auto-clear fingerprint so that\n        #\
          \ the escalated and non-escalated events all get cleared.\n        try:\n\
          \            zep.closeEventSummaries(\n                eventFilter=zep.createEventFilter(\n\
          \                    element_identifier=evt.device,\n                  \
          \  element_sub_identifier=evt.component,\n                    event_class=evt.eventClass,\n\
          \                    event_key=evt.eventKey))\n        except:\n       \
          \             evt.message += 'Exception while closing events'\n    # Otherwise,\
          \ increase the severity to CRITICAL if the count is > 3\n    elif existing_count\
          \ > (threshold_count - 1):\n        evt.severity = 5\n"
      dpLogNotification:
        eventClassKey: dpLogNotification
        example: snmp trap dpLogNotification
        sequence: 7
        transform: 'evt.component = "DATAPOWER"

          evt.summary = "Domain (%s): %s" %(evt.dpNotificationDomain , evt.dpNotificationText)

          '
    transform: "if evt.summary.startswith('trans(431): Certificate'):\n    evt.device\
      \ = 'prb-dpwr-l01-mgt.in.credoc.be'\n    evt.ipAddress = '10.4.100.213'\n"
  /Events/DataPower/DPWRLog:
    mappings:
      dpLogInternalNotification:
        eventClassKey: dpLogInternalNotification
        example: snmp trap dpLogInternalNotification
        sequence: 7
      dpLogInternalNotification_01:
        eventClassKey: dpLogInternalNotification
        example: snmp trap dpLogInternalNotification
        sequence: 7
  /Events/Dictao: {}
  /Events/Dictao/OCSPFailed: {}
  /Events/Environ:
    mappings:
      diagnostic-alarm-trap-node:
        eventClassKey: diagnostic-alarm-trap-node
        example: snmp trap diagnostic-alarm-trap-node from 10.1.2.3
        transform: evt.eventKey=getattr(evt,"ims-trap-chan","")
        zProperties:
          zEventSeverity: 3
      environment-alarm-trap-major:
        eventClassKey: environment-alarm-trap-major
        example: snmp trap environment-alarm-trap-major from 10.1.2.3
        transform: 'evt.eventKey = getattr(evt, ''ims-trap-chan'') + " " + getattr(evt,
          ''ims-trap-env-type'')

          evt.summary = evt.eventKey + " " + getattr(evt, ''ims-trap-status'')'
        zProperties:
          zEventSeverity: 5
      environment-alarm-trap-normal:
        evaluation: These traps dedup on ims4000 channel name plus sensor type.  There
          are only two mappings one for bad (this one) and one for good (normal).
        eventClassKey: environment-alarm-trap-normal
        example: Burk DataCenter Temperature 73.0
        transform: 'evt.eventKey = getattr(evt, ''ims-trap-chan'') + " " + getattr(evt,
          ''ims-trap-env-type'')

          evt.summary = evt.eventKey + " " + getattr(evt, ''ims-trap-status'')'
        zProperties:
          zEventSeverity: 0
      externalSensorStateChange:
        eventClassKey: externalSensorStateChange
        example: snmp trap externalSensorStateChange
        sequence: 1002
        zProperties:
          zEventSeverity: 2
  /Events/Firewall:
    mappings:
      fwTrap:
        eventClassKey: fwTrap
        example: snmp trap fwTrap
        sequence: 7
        transform: "if \"SmartDefense\" in evt.fwEvent:\n    evt.eventClass=\"/Firewall/IPS\"\
          \n    evt.component = \"Firewall\"\n    evtdetails = evt.fwEvent.split(\"\
          ;\")\n    protection_id = evtdetails[3].split(\":\")[1].strip()\n    evt.message\
          \ = \"IPS: %s attack detected\" %protection_id\n    evt.summary = \"IPS:\
          \ %s attack detected\" %protection_id\n\nif \"rule_uid\" in evt.fwEvent:\n\
          \    evt.eventClass=\"/Firewall/Rules\"\n    evt.component = \"Firewall\"\
          \n    evtdetails = evt.fwEvent.split(\";\")\n    service = evtdetails[2].split(\"\
          :\")[1].strip()\n    source = evtdetails[3].split(\":\")[1].strip()\n  \
          \  destination = evtdetails[4].split(\":\")[1].strip()\n    evt.message\
          \ = \"Rule hit: %s -> %s (%s)\" %(source,destination,service)\n    evt.summary\
          \ = \"Rule hit: %s -> %s (%s)\" %(source,destination,service)\n"
  /Events/Firewall/Connections:
    transform: 'conns = evt.current


      msg = "There are {} connections on {}".format(conns, str(evt.device))

      evt.message = msg

      evt.summary = msg

      '
  /Events/Firewall/IPS: {}
  /Events/Firewall/Rules: {}
  /Events/HP: {}
  /Events/HP/ClusterNodeDegraded:
    mappings:
      cpqClusterNodeDegraded:
        eventClassKey: cpqClusterNodeDegraded
        example: snmp trap cpqClusterNodeDegraded
        sequence: 1
      cpqClusterNodeDegraded_01:
        eventClassKey: cpqClusterNodeDegraded
        example: snmp trap cpqClusterNodeDegraded
        sequence: 2
    transform: "from ConfigParser import SafeConfigParser\n\nparser = SafeConfigParser()\n\
      parser.read(\"/opt/zenoss/zenoss/etc/clusters.conf\")\n\ndomain=parser.get('sql-legprd','domain')\n\
      \nnodeline \t= parser.get('sql-legprd','nodes')\nnodes \t= nodeline.split(',')\n\
      iloline \t= parser.get('sql-legprd','ilos')\nilos\t\t= iloline.split(',')\n\
      fibreswline = parser.get('sql-legprd','fibresw')\nfibresws \t= fibreswline.split(',')\n\
      dependency_summaries_line = parser.get('sql-legprd','depsum')\ndependency_sumarries\
      \ = dependency_summaries_line.split(',')\n\nallitems = nodes + ilos + fibresws\
      \ + dependency_sumarries\n\nfor item in allitems:\n    evt.message +=  \"-\"\
      \ + item + \"-\"\n\ndependentdevices = nodes + ilos + fibresws\n\nfor dev in\
      \ dependentdevices:\n    evt.message += \"Device: %s\" %dev\n    events = dmd.ZenEventManager.getEventList(where=\"\
      device='%s.%s'\" %(dev,domain))\n    for event in events:\n        evt.message\
      \ += \"-- Event: %s\" %event.summary\n        if event.summary in dependency_sumarries:\n\
      \            evt.severity = 0\n        else:\n            evt.component = \"\
      HP Cluster Node\"\n            evt.summary = \"HP Cluster Node Degraded\"\n\
      \            evt.severity = 5\n"
  /Events/HP/ClusterNodeFailed:
    mappings:
      cpqClusterNodeFailed:
        eventClassKey: cpqClusterNodeFailed
        example: snmp trap cpqClusterNodeFailed
        sequence: 1
      cpqClusterNodeFailed_01:
        eventClassKey: cpqClusterNodeFailed
        example: snmp trap cpqClusterNodeFailed
        sequence: 2
      cpqClusterNodeFailed_01_02:
        eventClassKey: cpqClusterNodeFailed
        example: snmp trap cpqClusterNodeFailed
        sequence: 3
      cpqClusterNodeFailed_01_02_03:
        eventClassKey: cpqClusterNodeFailed
        example: snmp trap cpqClusterNodeFailed
        sequence: 4
      cpqClusterNodeFailed_01_02_03_04:
        eventClassKey: cpqClusterNodeFailed
        example: snmp trap cpqClusterNodeFailed
        sequence: 5
      cpqClusterNodeFailed_01_02_03_04_05:
        eventClassKey: cpqClusterNodeFailed
        example: snmp trap cpqClusterNodeFailed
        sequence: 6
    transform: "from ConfigParser import SafeConfigParser\n\nparser = SafeConfigParser()\n\
      parser.read(\"/opt/zenoss/zenoss/etc/clusters.conf\")\n\ndomain=parser.get('sql-legprd','domain')\n\
      \nnodeline \t= parser.get('sql-legprd','nodes')\nnodes \t= nodeline.split(',')\n\
      iloline \t= parser.get('sql-legprd','ilos')\nilos\t\t= iloline.split(',')\n\
      fibreswline = parser.get('sql-legprd','fibresw')\nfibresws \t= fibreswline.split(',')\n\
      dependency_summaries_line = parser.get('sql-legprd','depsum')\ndependency_sumarries\
      \ = dependency_summaries_line.split(',')\n\nallitems = nodes + ilos + fibresws\
      \ + dependency_sumarries\n\nfor item in allitems:\n    evt.message +=  \"-\"\
      \ + item + \"-\"\n\ndependentdevices = nodes + ilos + fibresws\n\nfor dev in\
      \ dependentdevices:\n    evt.message += \"Device: %s\" %dev\n    events = dmd.ZenEventManager.getEventList(where=\"\
      device='%s.%s'\" %(dev,domain))\n    for event in events:\n        evt.message\
      \ += \"-- Event: %s\" %event.summary\n        if event.summary in dependency_sumarries:\n\
      \            evt.severity = 0\n        else:\n            evt.component = \"\
      HP Cluster Node\"\n            evt.summary = \"HP Cluster Node Failed\"\n  \
      \          evt.severity = 5\n"
  /Events/HP/EVA: {}
  /Events/HP/EVA/CellMgmtChanged:
    mappings:
      mngmtAgentTrap-8097:
        eventClassKey: mngmtAgentTrap-8097
        example: snmp trap mngmtAgentTrap-8097
        sequence: 7
    zProperties:
      zEventSeverity: 2
  /Events/HP/EVA/CommandViewCommunicationLost:
    mappings:
      mngmtAgentTrap-8099:
        eventClassKey: mngmtAgentTrap-8099
        example: snmp trap mngmtAgentTrap-8099
        sequence: 7
    zProperties:
      zEventSeverity: 2
  /Events/HP/EVA/StorageAlmostFull:
    mappings:
      mngmtAgentTrap_1002:
        eventClassKey: mngmtAgentTrap_1002
        example: snmp trap mngmtAgentTrap_1002
        sequence: 7
  /Events/HP/ServerPowerOutage:
    mappings:
      cpqSm2ServerPowerOutage:
        eventClassKey: cpqSm2ServerPowerOutage
        example: snmp trap cpqSm2ServerPowerOutage
        sequence: 1
    transform: "from ConfigParser import SafeConfigParser\n\nparser = SafeConfigParser()\n\
      parser.read(\"/opt/zenoss/etc/clusters.conf\")\n\ndomain=parser.get('sql-legprd','domain')\n\
      \nnodeline \t= parser.get('sql-legprd','nodes')\nnodes \t= nodeline.split(',')\n\
      iloline \t= parser.get('sql-legprd','ilos')\nilos\t\t= iloline.split(',')\n\
      fibreswline = parser.get('sql-legprd','fibresw')\nfibresws \t= fibreswline.split(',')\n\
      dependency_summaries_line = parser.get('sql-legprd','depsum')\ndependency_sumarries\
      \ = dependency_summaries_line.split(',')\n\nallitems = nodes + ilos + fibresws\
      \ + dependency_sumarries\n\nfor item in allitems:\n    evt.message +=  \"-\"\
      \ + item + \"-\"\n\ndependentdevices = nodes + ilos + fibresws\n\nfor dev in\
      \ dependentdevices:\n    evt.message += \"Device: %s\" %dev\n    #events = dmd.ZenEventManager.getEventList(where=\"\
      device='%s.%s'\" %(dev,domain))             # deprecated in Zenoss 4\n    events\
      \ = []\n    for event in events:\n        evt.message += \"-- Event: %s\" %event.summary\n\
      \        if event.summary in dependency_sumarries:\n            evt.severity\
      \ = 0\n        else:\n            evt.summary = \"HP Server Power Outage\"\n\
      \            evt.component = \"HP Server (Check Cluster!)\"\n            evt.severity\
      \ = 5\n"
  /Events/HP/ServerReset:
    mappings:
      cpqSm2ServerReset:
        eventClassKey: cpqSm2ServerReset
        example: snmp trap cpqSm2ServerReset
        sequence: 1
        transform: 'evt.message = ''Server Reset Detected.''

          evt.summary = ''Server Reset Detected.''

          '
    transform: "from ConfigParser import SafeConfigParser\n\nparser = SafeConfigParser()\n\
      parser.read(\"/opt/zenoss/etc/clusters.conf\")\n\ndomain=parser.get('sql-legprd','domain')\n\
      \nnodeline \t= parser.get('sql-legprd','nodes')\nnodes \t= nodeline.split(',')\n\
      iloline \t= parser.get('sql-legprd','ilos')\nilos\t\t= iloline.split(',')\n\
      fibreswline = parser.get('sql-legprd','fibresw')\nfibresws \t= fibreswline.split(',')\n\
      dependency_summaries_line = parser.get('sql-legprd','depsum')\ndependency_sumarries\
      \ = dependency_summaries_line.split(',')\n\nallitems = nodes + ilos + fibresws\
      \ + dependency_sumarries\n\nfor item in allitems:\n    evt.message +=  \"-\"\
      \ + item + \"-\"\n\ndependentdevices = nodes + ilos + fibresws\n\nfor dev in\
      \ dependentdevices:\n    evt.message += \"Device: %s\" %dev\n    #events = dmd.ZenEventManager.getEventList(where=\"\
      device='%s.%s'\" %(dev,domain))      # deprecated since Zenoss 4, see -- zep\
      \ = getFacade('zep') -- events = zep.getEventSummariesGenerator()\n    events\
      \ = []\n    for event in events:\n        evt.message += \"-- Event: %s\" %event.summary\n\
      \        if event.summary in dependency_sumarries:\n            evt.severity\
      \ = 0\n        else:\n            evt.summary = \"HP Server Reset\"\n      \
      \      evt.component = \"HP Server (Check Cluster!)\"\n            evt.severity\
      \ = 5\n"
  /Events/HP/SoftwareUpdate:
    mappings:
      cpqHoCriticalSoftwareUpdateTrap:
        eventClassKey: cpqHoCriticalSoftwareUpdateTrap
        example: snmp trap cpqHoCriticalSoftwareUpdateTrap
        sequence: 1
      cpqHoCriticalSoftwareUpdateTrap_01:
        eventClassKey: cpqHoCriticalSoftwareUpdateTrap
        example: snmp trap cpqHoCriticalSoftwareUpdateTrap
        sequence: 2
  /Events/HP/VCM: {}
  /Events/HP/VCM/StatusChange: {}
  /Events/HP/VCM/StatusChange/cpqHoSWRunningState:
    mappings:
      cpqHoSWRunningStatusChangeTrap:
        eventClassKey: cpqHoSWRunningStatusChangeTrap
        example: 'snmp trap cpqHoSWRunningStatusChangeTrap


          '
        sequence: 1
        transform: "lookup_RunningStatus = [ '', 'unknown', 'normal', 'warning', 'minor',\
          \ 'major', 'critical', 'disabled']\n\nfor attr in evt.details._map:\n  \
          \  if attr.startswith('cpqHoSWRunningDesc'):\n        idx = attr.split('.')[1]\n\
          \        comp = getattr(evt, attr, '')\n        break\ncpqHoSWRunningStatus\
          \ = int(getattr(evt, 'cpqHoSWRunningStatus.'+idx, ''))\nif cpqHoSWRunningStatus\
          \ == 2:\n   evt.severity = 0\ntry:\n    runningStatus = lookup_RunningStatus[cpqHoSWRunningStatus]\n\
          except:\n    runningStatus = 'unknown'\nevt.component = comp\nmsg = 'Software\
          \ {} changed status to {}'.format(comp, runningStatus)\n\nevt.message =\
          \ msg\nevt.summary = msg\n"
  /Events/HP/VCM/StatusChange/vcEnclosureManaged:
    mappings:
      vcEnclosureManagedStatusChange:
        eventClassKey: vcEnclosureManagedStatusChange
        example: snmp trap vcEnclosureManagedStatusChange
        sequence: 7
  /Events/HP/VCM/StatusChange/vcEnetNetworkManaged:
    mappings:
      vcEnetNetworkManagedStatusChange:
        eventClassKey: vcEnetNetworkManagedStatusChange
        example: snmp trap vcEnetNetworkManagedStatusChange
        sequence: 7
  /Events/HP/VCM/StatusChange/vcModuleManaged:
    mappings:
      vcModuleManagedStatusChange:
        eventClassKey: vcModuleManagedStatusChange
        example: snmp trap vcModuleManagedStatusChange
        sequence: 7
  /Events/HP/VCM/StatusChange/vcPhysicalServerManaged:
    mappings:
      vcPhysicalServerManagedStatusChange:
        eventClassKey: vcPhysicalServerManagedStatusChange
        example: snmp trap vcPhysicalServerManagedStatusChange
        sequence: 7
  /Events/HP/VCM/StatusChange/vcProfileManaged:
    mappings:
      vcProfileManagedStatusChange:
        eventClassKey: vcProfileManagedStatusChange
        example: snmp trap vcProfileManagedStatusChange
        sequence: 7
  /Events/HW:
    mappings:
      Server Administrator_1306:
        eventClassKey: Server Administrator_1306
      Server Agents_1090:
        eventClassKey: Server Agents_1090
        example: 'System Information Agent: Health: The server

          is operational again.  The server has previously been shutdown by the

          Automatic Server Recovery (ASR) feature and has just become operational

          again.


          [SNMP TRAP: 6025 in CPQHLTH.MIB]'
        zProperties:
          zEventSeverity: 3
  /Events/HW/Backup:
    mappings:
      avrd:
        eventClassKey: avrd
        example: '[ID 243332 daemon.error] log sense failed on Drive2 (device 2, /dev/rmt/2cbn):
          No such file or directory (2)'
        regex: daemon.error
      avrd_drop:
        eventClassKey: avrd
        sequence: 1
        zProperties:
          zEventAction: drop
      bptm_drop:
        eventClassKey: bptm
        sequence: 1
        zProperties:
          zEventAction: drop
      ltid_drop:
        eventClassKey: ltid
        sequence: 1
        zProperties:
          zEventAction: drop
      tldcd_drop:
        eventClassKey: tldcd
        sequence: 2
        zProperties:
          zEventAction: drop
      vmd:
        evaluation: PROBLEM REGEX (was empty) -- limit this to just error events
        eventClassKey: vmd
        example: '[ID 575278 daemon.error] terminating - the query with time failed
          because a limit was reached (184)'
        regex: daemon.error
        zProperties:
          zEventSeverity: 4
      vmd_drop:
        eventClassKey: vmd
        sequence: 1
        zProperties:
          zEventAction: drop
    zProperties:
      zEventSeverity: 3
  /Events/HW/Backup/Robot:
    mappings:
      cpqDa2TapeLibraryStatusChange:
        evaluation: 'Tape Library Status Change.

          This trap signifies that the agent has detected a change in

          the status of a tape library.  The variable

          cpqDaTapeLibraryStatus indicates the current tape library

          status.  The variable cpqDaTapeLibraryScsiTarget indicates

          the SCSI ID of the tape library.

          '
        eventClassKey: cpqDa2TapeLibraryStatusChange
        example: Status is now 2 for the tape library.
        resolution: 'If the tape library is failed, check the tape

          library front panel.

          '
        sequence: 1
        transform: "evt.summary = \"Status is now %d for the tape library.\"  %(evt.cpqDaTapeLibraryStatus)\n\
          snmpindex = \"%d.%d.%d.%d\" %(evt.cpqDaTapeLibraryCntlrIndex, evt.cpqDaTapeLibraryScsiBus,\
          \ evt.cpqDaTapeLibraryScsiTarget, evt.cpqDaTapeLibraryScsiLun)\nfor comp\
          \ in device.getMonitoredComponents(type=\"TapeLibrary\"):\n    if comp.__class__.__name__\
          \ != \"cpqDaTapeLibrary\": continue\n    if comp.snmpindex != snmpindex:\
          \ continue\n    comp.status = evt.cpqDaTapeLibraryStatus\n    evt.component\
          \ = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqDa6TapeLibraryDoorStatusChange:
        evaluation: 'Tape Library Door Status Change.

          This trap signifies that the agent has detected a change in

          the door status of a tape library.  The variable

          cpqDaTapeLibraryDoorStatus indicates the current tape library

          door status.  The variable cpqDaTapeLibraryScsiTarget indicates

          the the SCSI ID of the tape library.

          '
        eventClassKey: cpqDa6TapeLibraryDoorStatusChange
        example: The door is 2 for tape library.
        resolution: 'If the tape library door is open, close the tape

          library door.

          '
        sequence: 1
        transform: "evt.summary = \"The door is %d for tape library.\"  %(evt.cpqDaTapeLibraryDoorStatus)\n\
          snmpindex = \"%d.%d.%d.%d\" %(evt.cpqDaTapeLibraryCntlrIndex, evt.cpqDaTapeLibraryScsiBus,\
          \ evt.cpqDaTapeLibraryScsiTarget, evt.cpqDaTapeLibraryScsiLun)\nfor comp\
          \ in device.getMonitoredComponents(type=\"TapeLibrary\"):\n    if comp.__class__.__name__\
          \ != \"cpqDaTapeLibrary\": continue\n    if comp.snmpindex != snmpindex:\
          \ continue\n    evt.component = comp.id\n    break\n"
      cpqDa6TapeLibraryStatusChange:
        evaluation: 'Tape Library Status Change.

          This trap signifies that the agent has detected a change in

          the status of a tape library.  The variable

          cpqDaTapeLibraryStatus indicates the current tape library

          status.  The variable cpqDaTapeLibraryScsiTarget indicates

          the SCSI ID of the tape library.

          '
        eventClassKey: cpqDa6TapeLibraryStatusChange
        example: Status is now 2 for the tape library.
        resolution: 'If the tape library is failed, check the tape

          library front panel.

          '
        sequence: 1
        transform: "evt.summary = \"Status is now %d for the tape library.\"  %(evt.cpqDaTapeLibraryStatus)\n\
          snmpindex = \"%d.%d.%d.%d\" %(evt.cpqDaTapeLibraryCntlrIndex, evt.cpqDaTapeLibraryScsiBus,\
          \ evt.cpqDaTapeLibraryScsiTarget, evt.cpqDaTapeLibraryScsiLun)\nfor comp\
          \ in device.getMonitoredComponents(type=\"TapeLibrary\"):\n    if comp.__class__.__name__\
          \ != \"cpqDaTapeLibrary\": continue\n    if comp.snmpindex != snmpindex:\
          \ continue\n    comp.status = evt.cpqDaTapeLibraryStatus\n    evt.component\
          \ = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqDaTapeLibraryDoorStatusChange:
        evaluation: 'Tape Library Door Status Change.

          This trap signifies that the agent has detected a change in

          the door status of a tape library.  The variable

          cpqDaTapeLibraryDoorStatus indicates the current tape library

          door status.  The variable cpqDaTapeLibraryScsiTarget indicates

          the the SCSI ID of the tape library.

          '
        eventClassKey: cpqDaTapeLibraryDoorStatusChange
        example: The door is 2 for tape library.
        resolution: 'If the tape library door is open, close the tape

          library door.

          '
        sequence: 1
        transform: "evt.summary = \"The door is %d for tape library.\"  %(evt.cpqDaTapeLibraryDoorStatus)\n\
          snmpindex = \"%d.%d.%d.%d\" %(evt.cpqDaTapeLibraryCntlrIndex, evt.cpqDaTapeLibraryScsiBus,\
          \ evt.cpqDaTapeLibraryScsiTarget, evt.cpqDaTapeLibraryScsiLun)\nfor comp\
          \ in device.getMonitoredComponents(type=\"TapeLibrary\"):\n    if comp.__class__.__name__\
          \ != \"cpqDaTapeLibrary\": continue\n    if comp.snmpindex != snmpindex:\
          \ continue\n    evt.component = comp.id\n    break\n"
      cpqDaTapeLibraryStatusChange:
        evaluation: 'Tape Library Status Change.

          This trap signifies that the agent has detected a change in

          the status of a tape library.  The variable

          cpqDaTapeLibraryStatus indicates the current tape library

          status.  The variable cpqDaTapeLibraryScsiTarget indicates

          the SCSI ID of the tape library.

          '
        eventClassKey: cpqDaTapeLibraryStatusChange
        example: Status is now 2 for the tape library.
        resolution: 'If the tape library is failed, check the tape

          library front panel.

          '
        sequence: 1
        transform: "evt.summary = \"Status is now %d for the tape library.\"  %(evt.cpqDaTapeLibraryStatus)\n\
          snmpindex = \"%d.%d.%d.%d\" %(evt.cpqDaTapeLibraryCntlrIndex, evt.cpqDaTapeLibraryScsiBus,\
          \ evt.cpqDaTapeLibraryScsiTarget, evt.cpqDaTapeLibraryScsiLun)\nfor comp\
          \ in device.getMonitoredComponents(type=\"TapeLibrary\"):\n    if comp.__class__.__name__\
          \ != \"cpqDaTapeLibrary\": continue\n    if comp.snmpindex != snmpindex:\
          \ continue\n    comp.status = evt.cpqDaTapeLibraryStatus\n    evt.component\
          \ = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqExtTapeLibraryDoorStatusChange:
        evaluation: 'External Tape Library Door Status Change.

          This trap signifies that the agent has detected a change

          in the door status of an External Tape library.  The variable

          cpqFcTapeLibraryDoorStatus indicates the current tape library

          door status.

          '
        eventClassKey: cpqExtTapeLibraryDoorStatusChange
        example: The door is 2 for tape library.
        resolution: 'If the tape library door is open, close the

          tape library door.

          '
        sequence: 1
        transform: "evt.summary = \"The door is %d for tape library.\"  %(evt.cpqFcTapeLibraryDoorStatus)\n\
          snmpindex = \"%d.%d.%d.%d\" % (evt.cpqFcTapeDriveCntlrIndex, evt.cpqFcTapeLibraryScsiBus,\
          \ evt.cpqFcTapeLibraryScsiTarget, evt.cpqFcTapeLibraryScsiLun)\nfor comp\
          \ in device.getMonitoredComponents(type=\"TapeLibrary\"):\n    if comp.__class__.__name__\
          \ != \"cpqFcTapeLibrary\": continue\n    if comp.snmpindex != snmpindex:\
          \ continue\n    comp.status = 3\n    evt.component = comp.id\n    evt.severity\
          \ = comp.statusSeverity(comp.status)\n    txnCommit()\n    break\n"
      cpqExtTapeLibraryStatusChange:
        evaluation: 'External Tape Library Status Change.

          This trap signifies that the agent has detected a change in

          the status of an External Tape library.  The variable

          cpqFcTapeLibraryStatus indicates the current tape library

          status.

          '
        eventClassKey: cpqExtTapeLibraryStatusChange
        example: Status is now 2 for the tape library.
        resolution: 'If the tape library is failed or offline, check

          the tape library front panel and all connections.

          '
        sequence: 1
        transform: "evt.summary = \"Status is now %d for the tape library.\"  %(evt.cpqFcTapeLibraryStatus)\n\
          snmpindex = \"%d.%d.%d.%d\" % (evt.cpqFcTapeDriveCntlrIndex, evt.cpqFcTapeLibraryScsiBus,\
          \ evt.cpqFcTapeLibraryScsiTarget, evt.cpqFcTapeLibraryScsiLun)\nfor comp\
          \ in device.getMonitoredComponents(type=\"TapeLibrary\"):\n    if comp.__class__.__name__\
          \ != \"cpqFcTapeLibrary\": continue\n    if comp.snmpindex != snmpindex:\
          \ continue\n    comp.status = evt.cpqFcTapeLibraryStatus\n    evt.component\
          \ = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqFcTapeCntlrStatusChange:
        evaluation: 'Fibre Channel Tape Controller Status Change.

          This trap signifies that the agent has detected a change in the

          status of a Fiber Channel Tape Controller.  The variable

          cpqFcTapeCntlrStatus indicates the current tape controller

          status.  The variable cpqFcTapeCntlrWWN indicates the unique

          tape controller world wide name associated with this controller.

          '
        eventClassKey: cpqFcTapeCntlrStatusChange
        example: Status is now 2 for tape controller %s.
        resolution: 'If the tape controller status is offline, access to

          the tape library and tapes has been lost.  Check the tape library

          and all Fibre connections for problems.

          '
        sequence: 1
        transform: "evt.summary = \"Status is now %d for tape controller %s.\"  %(evt.cpqFcTapeCntlrStatus,\
          \ evt.cpqFcTapeCntlrWWN)\nfor comp in device.getMonitoredComponents(type=\"\
          ExpansionCard\"):\n    if comp.__class__.__name__ != \"cpqFcTapeCntlr\"\
          : continue\n    if comp.wwn != evt.cpqFcTapeCntlrWWN: continue\n    comp.status\
          \ = evt.cpqFcTapeCntlrStatus\n    evt.component = comp.id\n    evt.severity\
          \ = comp.statusSeverity(comp.status)\n    txnCommit()\n    break\n"
      cpqFcTapeLibraryDoorStatusChange:
        evaluation: 'Fibre Channel Tape Library Door Status Change.

          This trap signifies that the agent has detected a change in the

          door status of a Fiber Channel Tape library.  The variable

          cpqFcTapeLibraryDoorStatus indicates the current tape library

          door status.  The variable cpqFcTapeLibraryScsiTarget indicates

          the the SCSI ID of the tape library.

          '
        eventClassKey: cpqFcTapeLibraryDoorStatusChange
        example: The door is 2 for tape library.
        resolution: 'If the tape library door is open, close the tape

          library door.

          '
        sequence: 1
        transform: "evt.summary = \"The door is %d for tape library.\"  %(evt.cpqFcTapeLibraryDoorStatus)\n\
          snmpindex = ''\nfor comp in device.getMonitoredComponents(type=\"ExpansionCard\"\
          ):\n    if comp.__class__.__name__ != \"cpqFcTapeCntlr\": continue\n   \
          \ if comp.wwn != evt.cpqFcTapeCntlrWWN: continue\n    snmpindex = \"%s.%d.%d.%d\"\
          \ % (comp.snmpindex, evt.cpqFcTapeLibraryScsiBus, evt.cpqFcTapeLibraryScsiTarget,\
          \ evt.cpqFcTapeLibraryScsiLun)\nfor comp in device.getMonitoredComponents(type=\"\
          TapeLibrary\"):\n    if comp.__class__.__name__ != \"cpqFcTapeLibrary\"\
          : continue\n    if comp.snmpindex != snmpindex: continue\n    comp.status\
          \ = 3\n    evt.component = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n\
          \    txnCommit()\n    break\n"
      cpqFcTapeLibraryStatusChange:
        evaluation: 'Fibre Channel Tape Library Status Change.

          This trap signifies that the agent has detected a change in the

          status of a Fiber Channel Tape library.  The variable

          cpqFcTapeLibraryStatus indicates the current tape library

          status.  The variable cpqFcTapeLibraryScsiTarget indicates the

          SCSI ID of the tape library.

          '
        eventClassKey: cpqFcTapeLibraryStatusChange
        example: Status is now 2 for the tape library.
        resolution: 'If the tape library is failed or offline, check the tape

          library front panel and all fibre channel connections.

          '
        sequence: 1
        transform: "evt.summary = \"Status is now %d for the tape library.\"  %(evt.cpqFcTapeLibraryStatus)\n\
          snmpindex = ''\nfor comp in device.getMonitoredComponents(type=\"ExpansionCard\"\
          ):\n    if comp.__class__.__name__ != \"cpqFcTapeCntlr\": continue\n   \
          \ if comp.wwn != evt.cpqFcTapeCntlrWWN: continue\n    snmpindex = \"%s.%d.%d.%d\"\
          \ % (comp.snmpindex, evt.cpqFcTapeLibraryScsiBus, evt.cpqFcTapeLibraryScsiTarget,\
          \ evt.cpqFcTapeLibraryScsiLun)\nfor comp in device.getMonitoredComponents(type=\"\
          TapeLibrary\"):\n    if comp.__class__.__name__ != \"cpqFcTapeLibrary\"\
          : continue\n    if comp.snmpindex != snmpindex: continue\n    comp.status\
          \ = evt.cpqFcTapeLibraryStatus\n    evt.component = comp.id\n    evt.severity\
          \ = comp.statusSeverity(comp.status)\n    txnCommit()\n    break\n"
      cpqTape3LibraryDegraded:
        evaluation: 'Tape Library Degraded

          The agent has detected that an autoloader unit is

          in a degraded condition.

          '
        eventClassKey: cpqTape3LibraryDegraded
        example: Tape library %s is in a degraded condition.
        sequence: 1
        transform: evt.summary = "Tape library %s is in a degraded condition."  %(evt.cpqTapeLibrarySerialNumber)
      cpqTape3LibraryDoorClosed:
        evaluation: 'Tape Library Door Closed

          The agent has detected that the door on a an autoloader

          has closed.

          '
        eventClassKey: cpqTape3LibraryDoorClosed
        example: Tape library %s door closed
        sequence: 1
        transform: evt.summary = "Tape library %s door closed"  %(evt.cpqTapeLibrarySerialNumber)
      cpqTape3LibraryDoorOpen:
        evaluation: 'Tape Library Door Open

          The agent has detected that the door on an autoloader

          is open so the unit is not operational.

          '
        eventClassKey: cpqTape3LibraryDoorOpen
        example: Tape library %s door opened
        sequence: 1
        transform: evt.summary = "Tape library %s door opened"  %(evt.cpqTapeLibrarySerialNumber)
      cpqTape3LibraryFailed:
        evaluation: 'Tape Library Error

          The agent has detected that an autoloader unit has

          an encountered an error.

          '
        eventClassKey: cpqTape3LibraryFailed
        example: Tape library %s is not operational.
        sequence: 1
        transform: evt.summary = "Tape library %s is not operational."  %(evt.cpqTapeLibrarySerialNumber)
      cpqTape3LibraryOkay:
        evaluation: 'Tape Library Okay

          The agent has detected that an autoloader unit has

          recovered from errors.

          '
        eventClassKey: cpqTape3LibraryOkay
        example: Tape Library %s Recovered
        sequence: 1
        transform: evt.summary = "Tape Library %s Recovered"  %(evt.cpqTapeLibrarySerialNumber)
      cpqTapeLibraryStatusChange:
        evaluation: 'Tape Library Status Change

          The Storage Agent has detected a change in the status of a

          tape library.  The current tape library status is

          indicated in the cpqTapeLibraryState variable.

          '
        eventClassKey: cpqTapeLibraryStatusChange
        example: Status is now 2.
        sequence: 1
        transform: "evt.summary = \"Status is now %d.\"  %(evt.cpqTapeLibraryState)\n\
          snmpindex = \"%d.%d.%d.%d\" %(evt.cpqTapeLibraryCntlrIndex, evt.cpqTapeLibraryBusIndex,\
          \ evt.cpqTapeLibraryScsiIdIndex, evt.cpqTapeLibraryLunIndex)\nfor comp in\
          \ device.getMonitoredComponents(type=\"TapeLibrary\"):\n    if comp.__class__.__name__\
          \ != \"cpqTapeLibrary\": continue\n    if comp.snmpindex != snmpindex: continue\n\
          \    comp.status = evt.cpqTapeLibraryState\n    evt.component = comp.id\n\
          \    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      tapeLibraryMIBNotificationOnlyData.105:
        eventClassKey: tapeLibraryMIBNotificationOnlyData.105
        example: snmp trap tapeLibraryMIBNotificationOnlyData.105
        sequence: 7
      tldcd:
        eventClassKey: tldcd
        example: '[ID 719803 daemon.error] TLD(0) Move_medium error'
        regex: daemon.error
        sequence: 1
        zProperties:
          zEventSeverity: 4
      tldd:
        eventClassKey: tldd
        example: '[ID 923197 daemon.error] TLD(0) drive 1 (device 0) is being DOWNED,
          status: Robotic dismount failure'
        regex: daemon.error
        sequence: 1
        zProperties:
          zEventSeverity: 4
  /Events/HW/Backup/SCSI:
    mappings:
      bptm:
        eventClassKey: bptm
        example: '[ID 832037 daemon.error] scsi command failed, may be timeout, scsi_pkt.us_reason
          = 5'
        regex: daemon.error
        zProperties:
          zEventSeverity: 4
  /Events/HW/Backup/Tape Drive:
    mappings:
      cpqDa2TapeDriveStatusChange:
        evaluation: 'Tape Drive Status Change.

          This trap signifies that the agent has detected a change in

          the status of a tape drive.  The variable cpqDaTapeDrvStatus

          indicates the current tape status.  The variable

          cpqDaTapeDrvScsiIdIndex indicates the the SCSI ID of the tape

          drive.

          '
        eventClassKey: cpqDa2TapeDriveStatusChange
        example: Status is now 2 for a tape drive.
        resolution: 'If the tape is failed, check the tape and

          all SCSI connections.

          '
        sequence: 1
        transform: "evt.summary = \"Status is now %d for a tape drive.\"  %(evt.cpqDaTapeDrvStatus)\n\
          snmpindex = \"%d.%d.%d.%d\" %(evt.cpqDaTapeDrvCntlrIndex, evt.cpqDaTapeDrvBusIndex,\
          \ evt.cpqDaTapeDrvScsiIdIndex, evt.cpqDaTapeDrvLunIndex)\nfor comp in device.getMonitoredComponents(type=\"\
          TapeDrive\"):\n    if comp.__class__.__name__ != \"cpqDaTapeDrv\": continue\n\
          \    if comp.snmpindex != snmpindex: continue\n    comp.status = evt.cpqDaTapeDrvStatus\n\
          \    evt.component = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n\
          \    txnCommit()\n    break\n"
      cpqDa6TapeDriveCleaningRequired:
        evaluation: 'Tape Drive Cleaning Required trap.

          The agent has detected a tape drive that needs to have a

          cleaning tape inserted and run.  This will cause the tape

          drive heads to be cleaned.

          '
        eventClassKey: cpqDa6TapeDriveCleaningRequired
        example: Cleaning is needed for the tape drive.
        sequence: 1
        transform: "evt.summary = \"Cleaning is needed for the tape drive.\"\nsnmpindex\
          \ = \"%d.%d.%d.%d\" %(evt.cpqDaTapeDrvCntlrIndex, evt.cpqDaTapeDrvBusIndex,\
          \ evt.cpqDaTapeDrvScsiIdIndex, evt.cpqDaTapeDrvLunIndex)\nfor comp in device.getMonitoredComponents(type=\"\
          TapeDrive\"):\n    if comp.__class__.__name__ != \"cpqDaTapeDrv\": continue\n\
          \    if comp.snmpindex != snmpindex: continue\n    comp.status = 3\n   \
          \ evt.component = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n\
          \    txnCommit()\n    break\n"
      cpqDa6TapeDriveStatusChange:
        evaluation: 'Tape Drive Status Change.

          This trap signifies that the agent has detected a change in

          the status of a tape drive.  The variable cpqDaTapeDrvStatus

          indicates the current tape status.  The variable

          cpqDaTapeDrvScsiIdIndex indicates the the SCSI ID of the tape

          drive.

          '
        eventClassKey: cpqDa6TapeDriveStatusChange
        example: Status is now 2 for a tape drive.
        resolution: 'If the tape is failed, check the tape and

          all SCSI connections.

          '
        sequence: 1
        transform: "evt.summary = \"Status is now %d for a tape drive.\"  %(evt.cpqDaTapeDrvStatus)\n\
          snmpindex = \"%d.%d.%d.%d\" %(evt.cpqDaTapeDrvCntlrIndex, evt.cpqDaTapeDrvBusIndex,\
          \ evt.cpqDaTapeDrvScsiIdIndex, evt.cpqDaTapeDrvLunIndex)\nfor comp in device.getMonitoredComponents(type=\"\
          TapeDrive\"):\n    if comp.__class__.__name__ != \"cpqDaTapeDrv\": continue\n\
          \    if comp.snmpindex != snmpindex: continue\n    comp.status = evt.cpqDaTapeDrvStatus\n\
          \    evt.component = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n\
          \    txnCommit()\n    break\n"
      cpqDaTapeDriveCleaningRequired:
        evaluation: 'Tape Drive Cleaning Required trap.

          The agent has detected a tape drive that needs to have a

          cleaning tape inserted and run.  This will cause the tape

          drive heads to be cleaned.

          '
        eventClassKey: cpqDaTapeDriveCleaningRequired
        example: Cleaning is needed for the tape drive.
        sequence: 1
        transform: "evt.summary = \"Cleaning is needed for the tape drive.\"\nsnmpindex\
          \ = \"%d.%d.%d.%d\" %(evt.cpqDaTapeDrvCntlrIndex, evt.cpqDaTapeDrvBusIndex,\
          \ evt.cpqDaTapeDrvScsiIdIndex, evt.cpqDaTapeDrvLunIndex)\nfor comp in device.getMonitoredComponents(type=\"\
          TapeDrive\"):\n    if comp.__class__.__name__ != \"cpqDaTapeDrv\": continue\n\
          \    if comp.snmpindex != snmpindex: continue\n    comp.status = 3\n   \
          \ evt.component = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n\
          \    txnCommit()\n    break\n"
      cpqDaTapeDriveStatusChange:
        evaluation: 'Tape Drive Status Change.

          This trap signifies that the agent has detected a change in

          the status of a tape drive.  The variable cpqDaTapeDrvStatus

          indicates the current tape status.  The variable

          cpqDaTapeDrvScsiIdIndex indicates the the SCSI ID of the tape

          drive.

          '
        eventClassKey: cpqDaTapeDriveStatusChange
        example: Status is now 2 for a tape drive.
        resolution: 'If the tape is failed, check the tape and

          all SCSI connections.

          '
        sequence: 1
        transform: "evt.summary = \"Status is now %d for a tape drive.\"  %(evt.cpqDaTapeDrvStatus)\n\
          snmpindex = \"%d.%d.%d.%d\" %(evt.cpqDaTapeDrvCntlrIndex, evt.cpqDaTapeDrvBusIndex,\
          \ evt.cpqDaTapeDrvScsiIdIndex, evt.cpqDaTapeDrvLunIndex)\nfor comp in device.getMonitoredComponents(type=\"\
          TapeDrive\"):\n    if comp.__class__.__name__ != \"cpqDaTapeDrv\": continue\n\
          \    if comp.snmpindex != snmpindex: continue\n    comp.status = evt.cpqDaTapeDrvStatus\n\
          \    evt.component = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n\
          \    txnCommit()\n    break\n"
      cpqExtTapeDriveCleaningRequired:
        evaluation: 'External Tape Drive Cleaning Required.

          The agent has detected a tape drive that needs to have a

          cleaning tape inserted and run.  This will cause the tape drive

          heads to be cleaned.

          '
        eventClassKey: cpqExtTapeDriveCleaningRequired
        example: Cleaning is needed for tape drive.
        sequence: 1
        transform: "evt.summary = \"Cleaning is needed for tape drive.\"\nsnmpindex\
          \ = \"%d.%d.%d.%d\" % (evt.cpqFcTapeDriveCntlrIndex, evt.cpqFcTapeLibraryScsiBus,\
          \ evt.cpqFcTapeLibraryScsiTarget, evt.cpqFcTapeLibraryScsiLun)\nfor comp\
          \ in device.getMonitoredComponents(type=\"TapeDrive\"):\n    if comp.__class__.__name__\
          \ != \"cpqFcTapeDrv\": continue\n    if comp.snmpindex != snmpindex: continue\n\
          \    comp.status = 3\n    evt.component = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n\
          \    txnCommit()\n    break\n"
      cpqExtTapeDriveStatusChange:
        evaluation: 'External Tape Drive Status Change.

          This trap signifies that the agent has detected a change in the

          status of an External Tape Drive.  The variable

          cpqFcTapeDriveStatus indicates the current tape status.

          '
        eventClassKey: cpqExtTapeDriveStatusChange
        example: Status is now 2 for a tape drive.
        resolution: 'If the tape is failed or offline, check the tape

          and all connections.

          '
        sequence: 1
        transform: "evt.summary = \"Status is now %d for a tape drive.\"  %(evt.cpqFcTapeDriveStatus)\n\
          snmpindex = \"%d.%d.%d.%d\" % (evt.cpqFcTapeDriveCntlrIndex, evt.cpqFcTapeLibraryScsiBus,\
          \ evt.cpqFcTapeLibraryScsiTarget, evt.cpqFcTapeLibraryScsiLun)\nfor comp\
          \ in device.getMonitoredComponents(type=\"TapeDrive\"):\n    if comp.__class__.__name__\
          \ != \"cpqFcTapeDrv\": continue\n    if comp.snmpindex != snmpindex: continue\n\
          \    comp.status = evt.cpqFcTapeDriveStatus\n    evt.component = comp.id\n\
          \    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqFcTapeDriveCleaningRequired:
        evaluation: 'Fibre Channel Tape Drive Cleaning Required trap.

          The agent has detected a tape drive that needs to have a

          cleaning tape inserted and run.  This will cause the tape drive

          heads to be cleaned.

          '
        eventClassKey: cpqFcTapeDriveCleaningRequired
        example: Cleaning is needed for tape drive.
        sequence: 1
        transform: "evt.summary = \"Cleaning is needed for tape drive.\"\nsnmpindex\
          \ = ''\nfor comp in device.getMonitoredComponents(type=\"ExpansionCard\"\
          ):\n    if comp.__class__.__name__ != \"cpqFcTapeCntlr\": continue\n   \
          \ if comp.wwn != evt.cpqFcTapeCntlrWWN: continue\n    snmpindex = \"%s.%d.%d.%d\"\
          \ % (comp.snmpindex, evt.cpqFcTapeLibraryScsiBus, evt.cpqFcTapeLibraryScsiTarget,\
          \ evt.cpqFcTapeLibraryScsiLun)\nfor comp in device.getMonitoredComponents(type=\"\
          TapeDrive\"):\n    if comp.__class__.__name__ != \"cpqFcTapeDrv\": continue\n\
          \    if comp.snmpindex != snmpindex: continue\n    comp.status = 3\n   \
          \ evt.component = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n\
          \    txnCommit()\n    break\n"
      cpqFcTapeDriveStatusChange:
        evaluation: 'Fibre Channel Tape Drive Status Change.

          This trap signifies that the agent has detected a change in the

          status of a Fiber Channel Tape Drive.  The variable

          cpqFcTapeDriveStatus indicates the current tape status.  The

          variable cpqFcTapeDriveScsiTarget indicates the the SCSI ID of

          the tape drive.

          '
        eventClassKey: cpqFcTapeDriveStatusChange
        example: Status is now 2 for a tape drive.
        resolution: 'If the tape is failed or offline, check the tape

          and all fibre channel connections.

          '
        sequence: 1
        transform: "evt.summary = \"Status is now %d for a tape drive.\"  %(evt.cpqFcTapeDriveStatus)\n\
          snmpindex = ''\nfor comp in device.getMonitoredComponents(type=\"ExpansionCard\"\
          ):\n    if comp.__class__.__name__ != \"cpqFcTapeCntlr\": continue\n   \
          \ if comp.wwn != evt.cpqFcTapeCntlrWWN: continue\n    snmpindex = \"%s.%d.%d.%d\"\
          \ % (comp.snmpindex, evt.cpqFcTapeLibraryScsiBus, evt.cpqFcTapeLibraryScsiTarget,\
          \ evt.cpqFcTapeLibraryScsiLun)\nfor comp in device.getMonitoredComponents(type=\"\
          TapeDrive\"):\n    if comp.__class__.__name__ != \"cpqFcTapeDrv\": continue\n\
          \    if comp.snmpindex != snmpindex: continue\n    comp.status = evt.cpqFcTapeDriveStatus\n\
          \    evt.component = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n\
          \    txnCommit()\n    break\n"
      cpqSas2TapeDrvStatusChange:
        evaluation: 'SAS Tape Drive Status Change.

          The Storage Agent has detected a change in the status of a

          SAS tape drive.  The current tape drive status is

          indicated in the cpqSasTapeDrvStatus variable.

          '
        eventClassKey: cpqSas2TapeDrvStatusChange
        example: Status is now 2.
        sequence: 1
        transform: "evt.summary = \"Status is now %d.\"  %(evt.cpqSasTapeDrvStatus)\n\
          snmpindex = \"%d.%d\" %(evt.cpqSasTapeDrvHbaIndex, evt.cpqSasTapeDrvIndex)\n\
          for comp in device.getMonitoredComponents(type=\"TapeDrive\"):\n    if comp.__class__.__name__\
          \ != \"cpqSasTapeDrv\": continue\n    if comp.snmpindex != snmpindex: continue\n\
          \    comp.status = evt.cpqSasTapeDrvStatus\n    evt.component = comp.id\n\
          \    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqTape3PhyDrvCleaningRequired:
        evaluation: 'Tape Drive Cleaning Required trap.

          The agent has detected a tape drive that needs to have

          a cleaning tape inserted and run.  This will cause the tape drive

          heads to be cleaned.

          '
        eventClassKey: cpqTape3PhyDrvCleaningRequired
        example: Status is now 2.
        sequence: 1
        transform: evt.summary = "Status is now %d."  %(evt.cpqTapePhyDrvCondition)
      cpqTape3PhyDrvStatusChange:
        evaluation: 'Tape Drive Status Change.

          The agent has detected a change in the status of a

          Tape drive.  The current physical drive status is

          indicated in the cpqTapePhyDrvCondition variable.

          '
        eventClassKey: cpqTape3PhyDrvStatusChange
        example: Status is now 2.
        sequence: 1
        transform: evt.summary = "Status is now %d."  %(evt.cpqTapePhyDrvCondition)
      cpqTape4PhyDrvStatusChange:
        evaluation: 'Tape Drive Status Change.

          The Storage Agent has detected a change in the status of a

          Tape drive.  The current physical drive status is

          indicated in the cpqTapePhyDrvStatus variable.

          '
        eventClassKey: cpqTape4PhyDrvStatusChange
        example: Status is now 2.
        sequence: 1
        transform: "evt.summary = \"Status is now %d.\"  %(evt.cpqTapePhyDrvStatus)\n\
          snmpindex = \"%d.%d.%d\" %(evt.cpqTapePhyDrvCntlrIndex, evt.cpqTapePhyDrvBusIndex,\
          \ evt.cpqTapePhyDrvScsiIdIndex)\nfor comp in device.getMonitoredComponents(type=\"\
          TapeDrive\"):\n    if comp.__class__.__name__ != \"cpqTapePhyDrv\": continue\n\
          \    if comp.snmpindex != snmpindex: continue\n    comp.status = evt.cpqTapePhyDrvStatus\n\
          \    evt.component = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n\
          \    txnCommit()\n    break\n"
      cpqTape5PhyDrvStatusChange:
        evaluation: 'Tape Drive Status Change.

          The Storage Agent has detected a change in the status of a

          tape drive.  The current physical drive status is

          indicated in the cpqTapePhyDrvStatus variable.

          '
        eventClassKey: cpqTape5PhyDrvStatusChange
        example: Status is now 2.
        sequence: 1
        transform: "evt.summary = \"Status is now %d.\"  %(evt.cpqTapePhyDrvStatus)\n\
          snmpindex = \"%d.%d.%d.%d\" %(evt.cpqTapePhyDrvCntlrIndex, evt.cpqTapePhyDrvBusIndex,\
          \ evt.cpqTapePhyDrvScsiIdIndex, evt.cpqTapePhyDrvLunIndex)\nfor comp in\
          \ device.getMonitoredComponents(type=\"TapeDrive\"):\n    if comp.__class__.__name__\
          \ != \"cpqTapePhyDrv\": continue\n    if comp.snmpindex != snmpindex: continue\n\
          \    comp.status = evt.cpqTapePhyDrvStatus\n    evt.component = comp.id\n\
          \    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqTapePhyDrvStatusChange:
        evaluation: 'Tape Drive Status Change.

          The agent has detected a change in the status of a

          Tape drive.  The current physical drive status is

          indicated in the cpqTapePhyDrvCondition variable.

          '
        eventClassKey: cpqTapePhyDrvStatusChange
        example: Status is now 2.
        sequence: 1
        transform: evt.summary = "Status is now %d."  %(evt.cpqTapePhyDrvCondition)
      ltid:
        eventClassKey: ltid
        example: '[ID 579043 daemon.error] Request for media ID MHS005 is being rejected
          because it is in a DOWN drive'
        regex: daemon.error
        zProperties:
          zEventSeverity: 4
  /Events/HW/Backup/Tape Media:
    mappings:
      cpqDa6TapeDriveCleanTapeReplace:
        evaluation: 'Tape Drive Cleaning Tape Needs Replacing.

          The agent has detected that an autoloader tape unit has a

          cleaning tape that has been fully used and therefore needs to

          be replaced with a new cleaning tape.

          '
        eventClassKey: cpqDa6TapeDriveCleanTapeReplace
        example: Cleaning tape needs replacing
        sequence: 1
        transform: "evt.summary = \"Cleaning tape needs replacing\"\nsnmpindex = \"\
          %d.%d.%d.%d\" %(evt.cpqDaTapeDrvCntlrIndex, evt.cpqDaTapeDrvBusIndex, evt.cpqDaTapeDrvScsiIdIndex,\
          \ evt.cpqDaTapeDrvLunIndex)\nfor comp in device.getMonitoredComponents(type=\"\
          TapeDriveLun\"):\n    if comp.__class__.__name__ != \"cpqDaTapeDrvLun\"\
          : continue\n    if comp.snmpindex != snmpindex: continue\n    comp.status\
          \ = 3\n    evt.component = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n\
          \    txnCommit()\n    break\n"
      cpqDaTapeDriveCleanTapeReplace:
        evaluation: 'Tape Drive Cleaning Tape Needs Replacing.

          The agent has detected that an autoloader tape unit has a

          cleaning tape that has been fully used and therefore needs to

          be replaced with a new cleaning tape.

          '
        eventClassKey: cpqDaTapeDriveCleanTapeReplace
        example: Cleaning tape needs replacing
        sequence: 1
        transform: "evt.summary = \"Cleaning tape needs replacing\"\nsnmpindex = \"\
          %d.%d.%d.%d\" %(evt.cpqDaTapeDrvCntlrIndex, evt.cpqDaTapeDrvBusIndex, evt.cpqDaTapeDrvScsiIdIndex,\
          \ evt.cpqDaTapeDrvLunIndex)\nfor comp in device.getMonitoredComponents(type=\"\
          TapeDriveLun\"):\n    if comp.__class__.__name__ != \"cpqDaTapeDrvLun\"\
          : continue\n    if comp.snmpindex != snmpindex: continue\n    comp.status\
          \ = 3\n    evt.component = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n\
          \    txnCommit()\n    break\n"
      cpqExtTapeDriveCleanTapeReplace:
        evaluation: 'External Tape Drive Cleaning Tape Needs Replacing.

          The agent has detected that an autoloader tape unit has a

          cleaning tape that has been fully used and therefore needs to be

          replaced with a new cleaning tape.

          '
        eventClassKey: cpqExtTapeDriveCleanTapeReplace
        example: Cleaning tape needs replacing
        sequence: 1
        transform: "evt.summary = \"Cleaning tape needs replacing\"\nsnmpindex = \"\
          %d.%d.%d.%d\" % (evt.cpqFcTapeDriveCntlrIndex, evt.cpqFcTapeLibraryScsiBus,\
          \ evt.cpqFcTapeLibraryScsiTarget, evt.cpqFcTapeLibraryScsiLun)\nfor comp\
          \ in device.getMonitoredComponents(type=\"TapeDrive\"):\n    if comp.__class__.__name__\
          \ != \"cpqFcTapeDrive\": continue\n    if comp.snmpindex != snmpindex: continue\n\
          \    comp.status = 3\n    evt.component = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n\
          \    txnCommit()\n    break\n"
      cpqFcTapeDriveCleanTapeReplace:
        evaluation: 'Fibre Channel Tape Drive Cleaning Tape Needs Replacing.

          The agent has detected that an autoloader tape unit has a

          cleaning tape that has been fully used and therefore needs to be

          replaced with a new cleaning tape.

          '
        eventClassKey: cpqFcTapeDriveCleanTapeReplace
        example: Cleaning tape needs replacing
        sequence: 1
        transform: "evt.summary = \"Cleaning tape needs replacing\"\nsnmpindex = ''\n\
          for comp in device.getMonitoredComponents(type=\"ExpansionCard\"):\n   \
          \ if comp.__class__.__name__ != \"cpqFcTapeCntlr\": continue\n    if comp.wwn\
          \ != evt.cpqFcTapeCntlrWWN: continue\n    snmpindex = \"%d.%d.%d.%d\" %\
          \ (comp.snmpindex, evt.cpqFcTapeLibraryScsiBus, evt.cpqFcTapeLibraryScsiTarget,\
          \ evt.cpqFcTapeLibraryScsiLun)\nfor comp in device.getMonitoredComponents(type=\"\
          TapeDrive\"):\n    if comp.__class__.__name__ != \"cpqFcTapeDrive\": continue\n\
          \    if comp.snmpindex != snmpindex: continue\n    comp.status = 3\n   \
          \ evt.component = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n\
          \    txnCommit()\n    break\n"
      cpqTape3PhyDrvCleanTapeReplace:
        evaluation: 'Tape Drive Cleaning Tape Needs Replacing.

          The agent has detected that an autoloader tape unit has

          a cleaning tape that has been fully used and therefore needs to

          be replaced with a new cleaning tape.

          '
        eventClassKey: cpqTape3PhyDrvCleanTapeReplace
        example: Cleaning tape needs replacing
        sequence: 1
        transform: evt.summary = "Cleaning tape needs replacing"
      tldcd:
        eventClassKey: tldcd
        example: '[ID 183166 daemon.error] TLD(0) key = 0x5, asc = 0x3a, ascq = 0x0,
          MEDIUM NOT PRESENT'
        regex: daemon.error.*MEDIUM NOT PRESENT
        zProperties:
          zEventSeverity: 4
  /Events/HW/Blade:
    mappings:
      alertDrscAuthError:
        eventClassKey: alertDrscAuthError
        example: 'Message: Web login fail.'
        transform: evt.summary=evt.drsAlertMessage
        zProperties:
          zEventSeverity: 3
      alertDrscSEL80percentFull:
        eventClassKey: alertDrscSEL80percentFull
        example: 'Message: The DRAC/MC system event log is 80% full.'
        transform: evt.summary=evt.drsAlertMessage
        zProperties:
          zEventSeverity: 4
      alertDrscSELCritical:
        eventClassKey: alertDrscSELCritical
        example: DRAC/MC-2 module sensor detected a nonrecoverable event.
        transform: 'evt.summary=evt.drsAlertMessage

          evt.component=evt.split()[0]

          '
        zProperties:
          zEventSeverity: 5
      alertDrscSELNormal:
        eventClassKey: alertDrscSELNormal
        example: DRAC/MC-2 module sensor presence was detected.
        transform: 'evt.summary=evt.drsAlertMessage

          evt.component=evt.split()[0]

          '
        zProperties:
          zEventSeverity: 0
      alertDrscSELWarning:
        eventClassKey: alertDrscSELWarning
        example: Server-10 module sensor was removed.
        transform: 'evt.summary=evt.drsAlertMessage

          evt.component=evt.split()[0]

          '
        zProperties:
          zEventSeverity: 4
  /Events/HW/Humidity:
    transform: "try:\n    comp = evt.component.name()\nexcept:\n    comp = evt.component\n\
      \nhumid_val = float(evt.current)\n\nmsg = 'Humidity on {} is {:.1f}%'.format(comp,\
      \ humid_val)\nevt.message = msg\nevt.summary = msg\n"
  /Events/HW/Management:
    mappings:
      Dell - System Update_6049:
        eventClassKey: Dell - System Update_6049
        example: 'Update failed

          Package:  RAC_FRMW_WIN_R112124.EXE

          Description:  Dell Remote Access Controller - DRAC 4/I, Remote Access Controller
          - DRAC 4/P, v.1.35, A01

          Log file:  C:\Dell\UpdatePackage\log\RAC_FRMW_WIN_R112124.txt

          Exit code = 1 (Failure)

          '
        zProperties:
          zEventSeverity: 3
      cpqHe3AsrConfirmation:
        evaluation: 'The server is operational again.

          The server has previously been shutdown by the

          Automatic Server Recovery (ASR) feature and has just

          become operational again.

          '
        eventClassKey: cpqHe3AsrConfirmation
        example: Server is operational again after ASR shutdown.
        sequence: 1
        transform: evt.summary = "Server is operational again after ASR shutdown."
      cpqHe3CacheAccelParityError:
        evaluation: 'A cache accelerator parity error indicates a cache module

          needs to be replaced.

          The error information is reported in the variable

          cpqHeEventLogErrorDesc.

          '
        eventClassKey: cpqHe3CacheAccelParityError
        example: Cache Accelerator errors may require a replacement module.
        sequence: 1
        transform: evt.summary = "Cache Accelerator errors may require a replacement
          module."
      cpqHe3PostError:
        evaluation: 'One or more POST errors occurred.

          Power On Self-Test (POST) errors occur during the server

          restart process. Details of the POST error messages can

          be found in Integrated Management Log

          '
        eventClassKey: cpqHe3PostError
        example: Errors occurred during server restart.
        sequence: 1
        transform: 'evt.summary = "Errors occurred during server restart."

          evt.message = "Errors occurred during server restart."

          '
      cpqHeAsrConfirmation:
        evaluation: 'The server is operational again.

          The server has previously been shutdown by the

          Automatic Server Recovery (ASR) feature and has just

          become operational again.

          '
        eventClassKey: cpqHeAsrConfirmation
        example: Server is operational again after ASR shutdown.
        sequence: 1
        transform: evt.summary = "Server is operational again after ASR shutdown."
      cpqHeEventOccurred:
        evaluation: An event has occurred.
        eventClassKey: cpqHeEventOccurred
        example: Event %s has occurred, Severity 2
        resolution: None.
        sequence: 1
        transform: evt.summary = "Event %s has occurred, Severity %d "  %(evt.cpqHeEventLogErrorDesc,
          evt.cpqHeEventLogEntrySeverity)
      cpqHeManagementProcFailedReset:
        evaluation: 'The Management processor failed reset

          The management processor was not successfully reset and is not

          operational.

          User action: Reset the management procesessor again or re-flash

          the management processor firmware.

          '
        eventClassKey: cpqHeManagementProcFailedReset
        example: The Management processor failed reset.
        sequence: 1
        transform: evt.summary = "The Management processor failed reset."
      cpqHeManagementProcInReset:
        evaluation: 'The Management processor is currently in reset

          The management processor is currently in the process of being reset

          because of a firmware update or some other event.

          User action: None

          '
        eventClassKey: cpqHeManagementProcInReset
        example: The Management processor is in the process of being reset.
        sequence: 1
        transform: evt.summary = "The Management processor is in the process of being
          reset."
      cpqHeManagementProcReady:
        evaluation: 'The Management processor is ready

          The management processor has successfully reset and is now available

          again.

          User action: None

          '
        eventClassKey: cpqHeManagementProcReady
        example: The Management processor is ready after a successfull reset.
        sequence: 1
        transform: evt.summary = "The Management processor is ready after a successfull
          reset."
      cpqHePostError:
        evaluation: 'One or more POST errors occurred.

          Power On Self-Test (POST) errors occur during the server

          restart process.

          '
        eventClassKey: cpqHePostError
        example: Errors occurred during server restart.
        sequence: 1
        transform: evt.summary = "Errors occurred during server restart."
      hplopts_5:
        eventClassKey: hplopts_5
        example: iLO interface not responding. Restarting interface.
        zProperties:
          zEventSeverity: 3
  /Events/HW/Memory:
    mappings:
      Server Administrator_1404:
        eventClassKey: Server Administrator_1404
        example: 'Memory device status is critical

          Memory device location: DIMM2_B

          Possible memory module event cause:Single bit error logging disabled

          '
        zProperties:
          zEventSeverity: 4
      cpqHe2CorrectableMemoryError:
        evaluation: 'A correctable memory error occurred.

          The error has been corrected.  The current number of correctable

          memory errors is reported in the variable cpqHeCorrMemTotalErrs.

          '
        eventClassKey: cpqHe2CorrectableMemoryError
        example: Total correctable errors = 2.
        sequence: 1
        transform: evt.summary = "Total correctable errors = %d."  %(evt.cpqHeCorrMemTotalErrs)
      cpqHe2CorrectableMemoryLogDisabled:
        evaluation: 'Correctable memory error tracking disabled.

          The frequency of errors is so high that the error tracking

          logic has been temporarily disabled.  The cpqHeCorrMemLogStatus

          variable indicated the current tracking status.

          '
        eventClassKey: cpqHe2CorrectableMemoryLogDisabled
        example: Too many memory errors - tracking now disabled.
        sequence: 1
        transform: evt.summary = "Too many memory errors - tracking now disabled."
      cpqHe3CorrMemReplaceMemModule:
        evaluation: 'A correctable memory log entry indicates a memory module needs

          to be replaced.

          The errors have been corrected, but the memory module should be

          replaced.  The error information is reported in the variable

          cpqHeCorrMemErrDesc.

          '
        eventClassKey: cpqHe3CorrMemReplaceMemModule
        example: Correctable memory errs require a replacement memory module.
        sequence: 1
        transform: evt.summary = "Correctable memory errs require a replacement memory
          module."
      cpqHe3CorrectableMemoryError:
        evaluation: 'A correctable memory error occurred.

          The error has been corrected.  The current number of correctable

          memory errors is reported in the variable cpqHeCorrMemTotalErrs.

          '
        eventClassKey: cpqHe3CorrectableMemoryError
        example: Total correctable errors = 2.
        sequence: 1
        transform: evt.summary = "Total correctable errors = %d."  %(evt.cpqHeCorrMemTotalErrs)
      cpqHe3CorrectableMemoryLogDisabled:
        evaluation: 'Correctable memory error tracking disabled.

          The frequency of errors is so high that the error tracking

          logic has been temporarily disabled.  The cpqHeCorrMemLogStatus

          variable indicated the current tracking status.

          '
        eventClassKey: cpqHe3CorrectableMemoryLogDisabled
        example: Too many memory errors - tracking now disabled.
        sequence: 1
        transform: evt.summary = "Too many memory errors - tracking now disabled."
      cpqHe4CorrMemReplaceMemModule:
        evaluation: 'Corrected Memory Errors Detected

          The errors have been corrected, but the memory module should be

          replaced.

          '
        eventClassKey: cpqHe4CorrMemReplaceMemModule
        example: Correctable memory errors require a replacement of the memory module
          in slot 2, socket 2.
        sequence: 1
        transform: "evt.summary = \"Correctable memory errors require a replacement\
          \ of the memory module in slot %d, socket %d.\"  %(evt.cpqHeResMemBoardIndex,\
          \ evt.cpqHeResMemModuleIndex)\nsnmpindex = \"%d.%d\" %(evt.cpqHeResMemBoardIndex,\
          \ evt.cpqHeResMemModuleIndex)\nfor comp in device.getMonitoredComponents(type=\"\
          MemoryModule\"):\n    if comp.__class__.__name__ != \"cpqSiMemModule\":\
          \ continue\n    if comp.snmpindex != snmpindex: continue\n    comp.status\
          \ = 11\n    evt.component = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n\
          \    txnCommit()\n    break\n"
      cpqHe5CorrMemReplaceMemModule:
        evaluation: 'Corrected Memory Errors Detected.

          The errors have been corrected, but the memory module should be replaced.

          '
        eventClassKey: cpqHe5CorrMemReplaceMemModule
        example: Correctable memory errors require a replacement of the memory module
          in slot 2, socket 2.
        resolution: Memory module should be replaced.
        sequence: 1
        transform: "evt.summary = \"Correctable memory errors require a replacement\
          \ of the memory module in slot %d, socket %d.\"  %(evt.cpqHeResMem2BoardNum,\
          \ evt.cpqHeResMem2ModuleNum)\nsnmpindex = evt.oid.rsplit('.', 1)[-1]\nfor\
          \ comp in device.getMonitoredComponents(type=\"MemoryModule\"):\n    if\
          \ comp.__class__.__name__ != \"cpqHeResMem2Module\": continue\n    if comp.snmpindex\
          \ != snmpindex: continue\n    comp.status = 11\n    evt.component = comp.id\n\
          \    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqHe5ResMemBoardBusError:
        evaluation: 'Memory board or cartridge bus error detected.

          An Advanced Memory Protection sub-system board or cartridge

          bus error has been detected.

          '
        eventClassKey: cpqHe5ResMemBoardBusError
        example: Memory Board or Cartridge Bus Error Detected in Slot 2.
        resolution: Replace the indicated board or cartridge.
        sequence: 1
        transform: evt.summary = "Memory Board or Cartridge Bus Error Detected in
          Slot %d."  %(evt.cpqHeResMem2BoardSlotNum)
      cpqHe5ResMemBoardInserted:
        evaluation: Memory board or cartridge inserted. An Advanced Memory Protection
          sub-system board or cartridge has been inserted into the system.
        eventClassKey: cpqHe5ResMemBoardInserted
        example: Memory Board or Cartridge Inserted into Slot 2.
        sequence: 1
        transform: evt.summary = "Memory Board or Cartridge Inserted into Slot %d."  %(evt.cpqHeResMem2BoardSlotNum)
      cpqHe5ResMemBoardRemoved:
        evaluation: Memory board or cartridge removed. An Advanced Memory Protection
          sub-system board or cartridge has been removed from the system.
        eventClassKey: cpqHe5ResMemBoardRemoved
        example: Memory Board or Cartridge Removed from Slot 2.
        resolution: Insure the board or cartridge has memory correctly installed and
          re-insert the memory board or cartridge back into the system.
        sequence: 1
        transform: evt.summary = "Memory Board or Cartridge Removed from Slot %d."  %(evt.cpqHeResMem2BoardSlotNum)
      cpqHeCorrectableMemoryError:
        evaluation: 'A correctable memory error occurred.

          The error has been corrected.  The current number of correctable

          memory errors is reported in the variable cpqHeCorrMemTotalErrs.

          '
        eventClassKey: cpqHeCorrectableMemoryError
        example: Total correctable errors = 2.
        sequence: 1
        transform: evt.summary = "Total correctable errors = %d."  %(evt.cpqHeCorrMemTotalErrs)
      cpqHeCorrectableMemoryLogDisabled:
        evaluation: 'Correctable memory error tracking disabled.

          The frequency of errors is so high that the error tracking

          logic has been temporarily disabled.  The cpqHeCorrMemLogStatus

          variable indicated the current tracking status.

          '
        eventClassKey: cpqHeCorrectableMemoryLogDisabled
        example: Too many memory errors - tracking now disabled.
        sequence: 1
        transform: evt.summary = "Too many memory errors - tracking now disabled."
      cpqHeResMemBoardBusError:
        evaluation: 'Memory board or cartridge bus error detected.

          An Advanced Memory Protection sub-system board or cartridge

          bus error has been detected.

          '
        eventClassKey: cpqHeResMemBoardBusError
        example: Memory Board or Cartridge Bus Error Detected in Slot 2.
        resolution: Replace the indicated board or cartridge.
        sequence: 1
        transform: evt.summary = "Memory Board or Cartridge Bus Error Detected in
          Slot %d."  %(evt.cpqHeResMemBoardSlotIndex)
      cpqHeResMemBoardInserted:
        evaluation: 'Memory board or cartridge inserted.

          An Advanced Memory Protection sub-system board or cartridge has

          been inserted into the system.

          '
        eventClassKey: cpqHeResMemBoardInserted
        example: Memory Board or Cartridge Inserted into Slot 2.
        resolution: None.
        sequence: 1
        transform: evt.summary = "Memory Board or Cartridge Inserted into Slot %d."  %(evt.cpqHeResMemBoardSlotIndex)
      cpqHeResMemBoardRemoved:
        evaluation: 'Memory board or cartridge removed.

          An Advanced Memory Protection sub-system board or cartridge has

          been removed from the system.

          '
        eventClassKey: cpqHeResMemBoardRemoved
        example: Memory Board or Cartridge Removed from Slot 2.
        resolution: 'Insure the board or cartridge has memory correctly

          installed and re-insert the memory board or cartridge back into

          the system.

          '
        sequence: 1
        transform: evt.summary = "Memory Board or Cartridge Removed from Slot %d."  %(evt.cpqHeResMemBoardSlotIndex)
      cpqHeResilientAdvancedECCMemoryEngaged:
        evaluation: 'Advanced Memory Protection Advanced ECC Memory Engaged.

          The Advanced Memory Protection subsystem has detected a memory

          fault. Advanced ECC has been activated.

          '
        eventClassKey: cpqHeResilientAdvancedECCMemoryEngaged
        example: The Advanced Memory Protection subsystem has engaged the advanced
          ECC memory.
        resolution: Replace the faulty memory.
        sequence: 1
        transform: evt.summary = "The Advanced Memory Protection subsystem has engaged
          the advanced ECC memory."
      cpqHeResilientMemLockStepMemoryEngaged:
        evaluation: The Advanced Memory Protection subsystem has detected a memory
          fault. The LockStep engine has been activated.
        eventClassKey: cpqHeResilientMemLockStepMemoryEngaged
        example: Advanced Memory Protection LockStep Engine Memory Engaged.
        resolution: Replace the faulty memory.
        sequence: 1
        transform: evt.summary = "Advanced Memory Protection LockStep Engine Memory
          Engaged."
      cpqHeResilientMemMirroredMemoryEngaged:
        evaluation: 'Advanced Memory Protection Mirrored Memory Engaged.

          The Advanced Memory Protection subsystem has detected a memory

          fault. Mirrored Memory has been activated.

          '
        eventClassKey: cpqHeResilientMemMirroredMemoryEngaged
        example: The Advanced Memory Protection subsystem has engaged the online spare
          memory.
        resolution: Replace the faulty memory.
        sequence: 1
        transform: evt.summary = "The Advanced Memory Protection subsystem has engaged
          the online spare memory."
      cpqHeResilientMemOnlineSpareEngaged:
        evaluation: 'Advanced Memory Protection Online Spare Engaged.

          The Advanced Memory Protection subsystem has detected a memory

          fault. The Online Spare Memory has been activated.

          '
        eventClassKey: cpqHeResilientMemOnlineSpareEngaged
        example: The Advanced Memory Protection subsystem has engaged the online spare
          memory.
        resolution: 'Schedule server down-time to replace the faulty

          memory.

          '
        sequence: 1
        transform: evt.summary = "The Advanced Memory Protection subsystem has engaged
          the online spare memory."
      cpqHeResilientMemXorMemoryEngaged:
        evaluation: 'Advanced Memory Protection XOR Engine Memory Engaged.

          The Advanced Memory Protection subsystem has detected a memory

          fault. The XOR engine has been activated.

          '
        eventClassKey: cpqHeResilientMemXorMemoryEngaged
        example: The Advanced Memory Protection subsystem has engaged the XOR memory.
        resolution: Replace the faulty memory.
        sequence: 1
        transform: evt.summary = "The Advanced Memory Protection subsystem has engaged
          the XOR memory."
  /Events/HW/Network:
    mappings:
      cpqNic2ConnectivityRestored:
        evaluation: 'This trap will be sent any time connectivity is restored

          to a logical adapter.  This occurs when the physical

          adapter in a single adapter configuration returns to

          the OK condition or at least one physical adapter

          in a logical adapter group returns to the OK condition.

          This can be caused by replacement of a faulty cable

          or re-attaching a cable that was unplugged.

          '
        eventClassKey: cpqNic2ConnectivityRestored
        example: Connectivity is restored for adapter in slot 2, port 2.
        resolution: None required.
        sequence: 1
        transform: "evt.summary = \"Connectivity is restored for adapter in slot %d,\
          \ port %d.\"  %(evt.cpqNicIfPhysAdapterSlot, evt.cpqNicIfPhysAdapterPort)\n\
          for comp in device.getMonitoredComponents(type=\"ExpansionCard\"):\n   \
          \ if comp.__class__.__name__ != \"cpqNicIfPhysAdapter\": continue\n    if\
          \ comp.slot != evt.cpqNicIfPhysAdapterSlot or comp.port != evt.cpqNicIfPhysAdapterPort:\
          \ continue\n    comp.status = evt.cpqNicIfPhysAdapterStatus\n    evt.component\
          \ = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqNic2RedundancyIncreased:
        evaluation: 'This trap will be sent any time a previously failed physical

          adapter in a connected logical adapter group returns to the OK

          condition.  This trap is not sent when a logical adapter

          group has connectivity restored from a Failed condition.  The

          cpqNicConnectivityRestored trap is sent instead.

          This can be caused by replacement of a faulty cable

          or re-attaching a cable that was unplugged.

          '
        eventClassKey: cpqNic2RedundancyIncreased
        example: Redundancy increased by adapter in slot 2, port 2.
        resolution: None required.
        sequence: 1
        transform: "evt.summary = \"Redundancy increased by adapter in slot %d, port\
          \ %d.\"  %(evt.cpqNicIfPhysAdapterSlot, evt.cpqNicIfPhysAdapterPort)\nfor\
          \ comp in device.getMonitoredComponents(type=\"ExpansionCard\"):\n    if\
          \ comp.__class__.__name__ != \"cpqNicIfPhysAdapter\": continue\n    if comp.slot\
          \ != evt.cpqNicIfPhysAdapterSlot or comp.port != evt.cpqNicIfPhysAdapterPort:\
          \ continue\n    comp.status = evt.cpqNicIfPhysAdapterStatus\n    evt.component\
          \ = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqNic3ConnectivityRestored:
        evaluation: 'This trap will be sent any time connectivity is restored

          to a logical adapter.  This occurs when the physical

          adapter in a single adapter configuration returns to

          the OK condition or at least one physical adapter

          in a logical adapter group returns to the OK condition.

          This can be caused by replacement of a faulty cable

          or re-attaching a cable that was unplugged.

          '
        eventClassKey: cpqNic3ConnectivityRestored
        example: Connectivity is restored for adapter in slot 2, port 2.
        resolution: None required.
        sequence: 1
        transform: "evt.summary = \"Connectivity is restored for adapter in slot %d,\
          \ port %d.\"  %(evt.cpqNicIfPhysAdapterSlot, evt.cpqNicIfPhysAdapterPort)\n\
          for comp in device.getMonitoredComponents(type=\"ExpansionCard\"):\n   \
          \ if comp.__class__.__name__ != \"cpqNicIfPhysAdapter\": continue\n    if\
          \ comp.slot != evt.cpqNicIfPhysAdapterSlot or comp.port != evt.cpqNicIfPhysAdapterPort:\
          \ continue\n    comp.status = evt.cpqNicIfPhysAdapterStatus\n    evt.component\
          \ = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqNic3RedundancyIncreased:
        evaluation: 'This trap will be sent any time a previously failed physical

          adapter in a connected logical adapter group returns to the OK

          condition.  This trap is not sent when a logical adapter

          group has connectivity restored from a Failed condition.  The

          cpqNicConnectivityRestored trap is sent instead.

          This can be caused by replacement of a faulty cable

          or re-attaching a cable that was unplugged.

          '
        eventClassKey: cpqNic3RedundancyIncreased
        example: Redundancy increased by adapter in slot 2, port 2.
        resolution: None required.
        sequence: 1
        transform: "evt.summary = \"Redundancy increased by adapter in slot %d, port\
          \ %d.\"  %(evt.cpqNicIfPhysAdapterSlot, evt.cpqNicIfPhysAdapterPort)\nfor\
          \ comp in device.getMonitoredComponents(type=\"ExpansionCard\"):\n    if\
          \ comp.__class__.__name__ != \"cpqNicIfPhysAdapter\": continue\n    if comp.slot\
          \ != evt.cpqNicIfPhysAdapterSlot or comp.port != evt.cpqNicIfPhysAdapterPort:\
          \ continue\n    comp.status = evt.cpqNicIfPhysAdapterStatus\n    evt.component\
          \ = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqNicConnectivityRestored:
        evaluation: 'This trap will be sent any time connectivity is restored

          to a logical adapter.  This occurs when the physical

          adapter in a single adapter configuration returns to

          the OK condition or at least one physical adapter

          in a logical adapter group returns to the OK condition.

          This can be caused by replacement of a faulty cable

          or re-attaching a cable that was unplugged.

          '
        eventClassKey: cpqNicConnectivityRestored
        example: Connectivity is restored for adapter in slot 2, port 2.
        resolution: None required.
        sequence: 1
        transform: "evt.summary = \"Connectivity is restored for adapter in slot %d,\
          \ port %d.\"  %(evt.cpqNicIfPhysAdapterSlot, evt.cpqNicIfPhysAdapterPort)\n\
          for comp in device.getMonitoredComponents(type=\"ExpansionCard\"):\n   \
          \ if comp.__class__.__name__ != \"cpqNicIfPhysAdapter\": continue\n    if\
          \ comp.slot != evt.cpqNicIfPhysAdapterSlot or comp.port != evt.cpqNicIfPhysAdapterPort:\
          \ continue\n    comp.status = 2\n    evt.component = comp.id\n    evt.severity\
          \ = comp.statusSeverity(comp.status)\n    txnCommit()\n    break\n"
      cpqNicRedundancyIncreased:
        evaluation: 'This trap will be sent any time a previously failed physical

          adapter in a connected logical adapter group returns to the OK

          condition.  This trap is not sent when a logical adapter

          group has connectivity restored from a Failed condition.  The

          cpqNicConnectivityRestored trap is sent instead.

          This can be caused by replacement of a faulty cable

          or re-attaching a cable that was unplugged.

          '
        eventClassKey: cpqNicRedundancyIncreased
        example: Redundancy increased by adapter in slot 2, port 2.
        resolution: None required.
        sequence: 1
        transform: "evt.summary = \"Redundancy increased by adapter in slot %d, port\
          \ %d.\"  %(evt.cpqNicIfPhysAdapterSlot, evt.cpqNicIfPhysAdapterPort)\nfor\
          \ comp in device.getMonitoredComponents(type=\"ExpansionCard\"):\n    if\
          \ comp.__class__.__name__ != \"cpqNicIfPhysAdapter\": continue\n    if comp.slot\
          \ != evt.cpqNicIfPhysAdapterSlot or comp.port != evt.cpqNicIfPhysAdapterPort:\
          \ continue\n    comp.status = evt.cpqNicIfPhysAdapterStatus\n    evt.component\
          \ = 2\n    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqNicVirusLikeActivityDetected:
        evaluation: 'This trap will be sent when the Virus Throttle Filter

          Driver detects virus like activity.

          '
        eventClassKey: cpqNicVirusLikeActivityDetected
        example: Virus-like activity detected
        resolution: 'The system reporting this trap requires

          immediate attention.

          '
        sequence: 1
        transform: evt.summary = "Virus-like activity detected"
      cpqNicVirusLikeActivityStopped:
        evaluation: 'This trap will be sent when the Virus Throttle Filter

          Driver no longer detects virus like activity.

          '
        eventClassKey: cpqNicVirusLikeActivityStopped
        example: Virus-like activity no longer detected
        resolution: None required.
        sequence: 1
        transform: evt.summary = "Virus-like activity no longer detected"
      iANSMiniport_22:
        eventClassKey: iANSMiniport_22
        example: 'Primary Adapter does not sense any Probes: Intel(R) PRO/1000 MT
          Network Connection . Possible reason: partitioned Team.'
        zProperties:
          zEventSeverity: 3
      iANSMiniport_42:
        eventClassKey: iANSMiniport_42
        example: 'Intel(R) PRO/1000 MB Dual Port Network Connection is improperly
          configured.

          The adapter cannot process the remote management features and be a member
          of a network team at the same time.

          '
        zProperties:
          zEventSeverity: 3
      kernel:
        eventClassKey: kernel
        example: 'mtrr: type mismatch for f0000000,1000000 old: write-back new: write-combining'
        sequence: 2
      system-config-network:
        eventClassKey: system-config-network
        example: ln //etc/sysconfig/networking/devices//ifcfg-eth1 //etc/sysconfig/networking/profiles//default/ifcfg-eth1
        zProperties:
          zEventSeverity: 3
  /Events/HW/Network/AdapterDown:
    mappings:
      CPQTeamMP_434:
        eventClassKey: CPQTeamMP_434
        example: 'HP Network Team #1: PROBLEM: A non-Primary Network Link is not receiving.
          Receive-path validation has been enabled for this

          Team by selecting the Enable receive-path validation Heartbeat Setting.

          ACTION: Please check your cabling to the link partner. Check the switch
          port status, including verifying that the

          switch

          port is not configured as a Switch-assist Channel. Generate Broadcast traffic

          on the network to test whether these are being received. Also make sure
          all teamed NICs are on the same broadcast

          domain. Run diagnostics to test card. Drop the NIC from the team, determine
          whether it is receiving broadcast traffic

          in that configuration.

          '
        zProperties:
          zEventSeverity: 4
      CPQTeamMP_436:
        eventClassKey: CPQTeamMP_436
        example: 'HP Network Team #1: A previously failed Network Link''s receive
          status has been restored.'
        zProperties:
          zEventSeverity: 0
      cpqNic2RedundancyReduced:
        evaluation: 'This trap will be sent any time a physical adapter in a

          logical adapter group changes to the Failed condition, but

          at least one physical adapter remains in the OK condition..

          This can be caused by loss of link due to a cable being

          removed from the adapter or the Hub or Switch.  Internal

          adapter, Hub, or Switch failures can also cause this

          condition.

          '
        eventClassKey: cpqNic2RedundancyReduced
        example: Redundancy decreased by adapter in slot 2, port 2.
        resolution: 'Check the cables to the adapter and the Hub or

          Switch.  If no cable problems are found, the adapter, Hub,

          or Switch may need replacement.

          '
        sequence: 1
        transform: "evt.summary = \"Redundancy decreased by adapter in slot %d, port\
          \ %d.\"  %(evt.cpqNicIfPhysAdapterSlot, evt.cpqNicIfPhysAdapterPort)\nfor\
          \ comp in device.getMonitoredComponents(type=\"ExpansionCard\"):\n    if\
          \ comp.__class__.__name__ != \"cpqNicIfPhysAdapter\": continue\n    if comp.slot\
          \ != evt.cpqNicIfPhysAdapterSlot or comp.port != evt.cpqNicIfPhysAdapterPort:\
          \ continue\n    comp.status = evt.cpqNicIfPhysAdapterStatus\n    evt.component\
          \ = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqNic3RedundancyReduced:
        evaluation: 'This trap will be sent any time a physical adapter in a logical
          adapter group changes to the Failed condition, but at least one physical
          adapter remains in the OK condition.. This can be caused by loss of link
          due to a cable being removed from the adapter or the Hub or Switch. Internal
          adapter, Hub, or Switch failures can also cause this condition.

          Resolution

          '
        eventClassKey: cpqNic3RedundancyReduced
        example: Redundancy decreased by adapter in slot 2, port 2.
        resolution: Check the cables to the adapter and the Hub or Switch. If no cable
          problems are found, the adapter, Hub, or Switch may need replacement.
        sequence: 1
        transform: "evt.summary = \"Redundancy decreased by adapter in slot %d, port\
          \ %d.\"  %(evt.cpqNicIfPhysAdapterSlot, evt.cpqNicIfPhysAdapterPort)\nfor\
          \ comp in device.getMonitoredComponents(type=\"ExpansionCard\"):\n    if\
          \ comp.__class__.__name__ != \"cpqNicIfPhysAdapter\": continue\n    if comp.slot\
          \ != evt.cpqNicIfPhysAdapterSlot or comp.port != evt.cpqNicIfPhysAdapterPort:\
          \ continue\n    comp.status = evt.cpqNicIfPhysAdapterStatus\n    evt.component\
          \ = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqNicRedundancyReduced:
        evaluation: 'This trap will be sent any time a physical adapter in a

          logical adapter group changes to the Failed condition, but

          at least one physical adapter remains in the OK condition..

          This can be caused by loss of link due to a cable being

          removed from the adapter or the Hub or Switch.  Internal

          adapter, Hub, or Switch failures can also cause this

          condition.

          '
        eventClassKey: cpqNicRedundancyReduced
        example: Redundancy decreased by adapter in slot 2, port 2.
        resolution: 'Check the cables to the adapter and the Hub or

          Switch.  If no cable problems are found, the adapter, Hub,

          or Switch may need replacement.

          '
        sequence: 1
        transform: "evt.summary = \"Redundancy decreased by adapter in slot %d, port\
          \ %d.\"  %(evt.cpqNicIfPhysAdapterSlot, evt.cpqNicIfPhysAdapterPort)\nfor\
          \ comp in device.getMonitoredComponents(type=\"ExpansionCard\"):\n    if\
          \ comp.__class__.__name__ != \"cpqNicIfPhysAdapter\": continue\n    if comp.slot\
          \ != evt.cpqNicIfPhysAdapterSlot or comp.port != evt.cpqNicIfPhysAdapterPort:\
          \ continue\n    comp.status = 3\n    evt.component = comp.id\n    evt.severity\
          \ = comp.statusSeverity(comp.status)\n    txnCommit()\n    break\n"
      iANSMiniport_11:
        eventClassKey: iANSMiniport_11
        example: 'Adapter link down: Intel(R) PRO/1000 MB Dual Port Network Connection'
        zProperties:
          zEventSeverity: 4
      iANSMiniport_13:
        eventClassKey: iANSMiniport_13
        example: The Intel(R) PRO/1000 MB Dual Port Network Connectio... has been
          deactivated from the team.
        zProperties:
          zEventSeverity: 4
      iANSMiniport_14:
        eventClassKey: iANSMiniport_14
        example: 'Secondary Adapter has rejoined the Team: Intel(R) PRO/1000 MT Network
          Connection #2'
        zProperties:
          zEventSeverity: 0
      iANSMiniport_15:
        eventClassKey: iANSMiniport_15
        example: 'Adapter link up: Intel(R) PRO/1000 MB Dual Port Network Connection'
        zProperties:
          zEventSeverity: 0
  /Events/HW/Network/TeamDown:
    mappings:
      cpqNic2ConnectivityLost:
        evaluation: 'This trap will be sent any time the status of a logical

          adapter changes to the Failed condition.  This occurs

          when the adapter in a single adapter configuration fails,

          or when the last adapter in a redundant configuration fails.

          This can be caused by loss of link due to a cable being

          removed from the adapter or the Hub or Switch.  Internal

          adapter, Hub, or Switch failures can also cause this

          condition.

          '
        eventClassKey: cpqNic2ConnectivityLost
        example: Connectivity lost for adapter in slot 2, port 2.
        resolution: 'Check the cables to the adapter and the Hub or

          Switch.  If no cable problems are found, the adapter, Hub,

          or Switch may need replacement.

          '
        sequence: 1
        transform: "evt.summary = \"Connectivity lost for adapter in slot %d, port\
          \ %d.\"  %(evt.cpqNicIfPhysAdapterSlot, evt.cpqNicIfPhysAdapterPort)\nfor\
          \ comp in device.getMonitoredComponents(type=\"ExpansionCard\"):\n    if\
          \ comp.__class__.__name__ != \"cpqNicIfPhysAdapter\": continue\n    if comp.slot\
          \ != evt.cpqNicIfPhysAdapterSlot or comp.port != evt.cpqNicIfPhysAdapterPort:\
          \ continue\n    comp.status = evt.cpqNicIfPhysAdapterStatus\n    evt.component\
          \ = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqNic3ConnectivityLost:
        evaluation: 'This trap will be sent any time the status of a logical

          adapter changes to the Failed condition.  This occurs

          when the adapter in a single adapter configuration fails,

          or when the last adapter in a redundant configuration fails.

          This can be caused by loss of link due to a cable being

          removed from the adapter or the Hub or Switch.  Internal

          adapter, Hub, or Switch failures can also cause this

          condition.

          '
        eventClassKey: cpqNic3ConnectivityLost
        example: Connectivity lost for adapter in slot 2, port 2.
        resolution: 'Check the cables to the adapter and the Hub or

          Switch.  If no cable problems are found, the adapter, Hub,

          or Switch may need replacement.

          '
        sequence: 1
        transform: "\nfor attr in evt.details._map:\n    if attr.startswith('cpqNicIfPhysAdapterSlot'):\n\
          \        PhysAdapterSlot = getattr(evt, attr, '')\n    elif attr.startswith('cpqNicIfPhysAdapterPort'):\n\
          \        PhysAdapterPort = getattr(evt, attr, '')\n    elif attr.startswith('cpqNicIfPhysAdapterStatus'):\n\
          \        PhysAdapterStatus = getattr(evt, attr, '')\n\nevt.summary = \"\
          Connectivity lost for adapter in slot %d, port %d.\"  %(PhysAdapterSlot,\
          \ PhysAdapterPort )\nfor comp in device.getMonitoredComponents(type=\"ExpansionCard\"\
          ):\n    if comp.__class__.__name__ != \"cpqNicIfPhysAdapter\": continue\n\
          \    if comp.slot != PhysAdapterSlot  or comp.port != PhysAdapterPort :\
          \ continue\n    comp.status = PhysAdapterStatus\n    evt.component = comp.id\n\
          \    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqNicConnectivityLost:
        evaluation: 'This trap will be sent any time the status of a logical

          adapter changes to the Failed condition.  This occurs

          when the adapter in a single adapter configuration fails,

          or when the last adapter in a redundant configuration fails.

          This can be caused by loss of link due to a cable being

          removed from the adapter or the Hub or Switch.  Internal

          adapter, Hub, or Switch failures can also cause this

          condition.

          '
        eventClassKey: cpqNicConnectivityLost
        example: Connectivity lost for adapter in slot 2, port 2.
        resolution: 'Check the cables to the adapter and the Hub or

          Switch.  If no cable problems are found, the adapter, Hub,

          or Switch may need replacement.

          '
        sequence: 1
        transform: "evt.summary = \"Connectivity lost for adapter in slot %d, port\
          \ %d.\"  %(evt.cpqNicIfPhysAdapterSlot, evt.cpqNicIfPhysAdapterPort)\nfor\
          \ comp in device.getMonitoredComponents(type=\"ExpansionCard\"):\n    if\
          \ comp.__class__.__name__ != \"cpqNicIfPhysAdapter\": continue\n    if comp.slot\
          \ != evt.cpqNicIfPhysAdapterSlot or comp.port != evt.cpqNicIfPhysAdapterPort:\
          \ continue\n    comp.status = 4\n    evt.component = comp.id\n    evt.severity\
          \ = comp.statusSeverity(comp.status)\n    txnCommit()\n    break\n"
      iANSMiniport_16:
        eventClassKey: iANSMiniport_16
        example: 'Team #0: The last adapter has lost link.  Team network connection
          has been lost.'
        zProperties:
          zEventSeverity: 3
      iANSMiniport_17:
        eventClassKey: iANSMiniport_17
        example: 'Team #0: An adapter has re-established link. Team network connection
          has been restored.'
        zProperties:
          zEventSeverity: 0
  /Events/HW/Power:
    mappings:
      C6KPWR-SP-2-PSFAIL:
        eventClassKey: C6KPWR-SP-2-PSFAIL
        example: power supply 1 output failed.
      C6KPWR-SP-4-PSREDUNDANTBOTHSUPPLY:
        eventClassKey: C6KPWR-SP-4-PSREDUNDANTBOTHSUPPLY
        example: in power-redundancy mode, system is operating on both power supplies.
        zProperties:
          zEventSeverity: 0
      Server Administrator_1304:
        eventClassKey: Server Administrator_1304
        example: 'Redundancy regained Redundancy unit: BMC PS Redundancy Chassis location:
          Main System Chassis Previous redundancy state was: Lost'
        zProperties:
          zEventSeverity: 0
      Server Administrator_1352:
        eventClassKey: Server Administrator_1352
        example: 'Power supply returned to normal Sensor location: PS 1 Status Chassis
          location: Main System Chassis Previous state was: Critical (Failed) Power
          Supply type: AC Power Supply state: Presence detected'
        zProperties:
          zEventSeverity: 0
      Server Administrator_1354:
        eventClassKey: Server Administrator_1354
        example: 'Power supply detected a failure

          Sensor location: PS 1 Status

          Chassis location: Main System Chassis

          Previous state was: OK (Normal)

          Power Supply type: AC

          Power Supply state: Presence detected, Failure detected, AC lost

          '
      Server Agents_1118:
        eventClassKey: Server Agents_1118
        example: 'System Information Agent: Health: The Fault

          Tolerant Power Supply Sub-system has been returned to the OK state.


          Chassis: ''0''; Bay: ''2''


          [SNMP TRAP: 6048 in CPQHLTH.MIB]

          '
        zProperties:
          zEventSeverity: 0
      Server Agents_1125:
        eventClassKey: Server Agents_1125
        example: 'System Information Agent: Health: The Fault Tolerant Power Supply
          Sub-system is in a failed state. Restore power or replace the failed power
          supply. Chassis: ''0''; Bay: ''2'' [SNMP TRAP: 6050 in CPQHLTH.MIB]'
      configChangeSNMP:
        eventClassKey: configChangeSNMP
        example: snmp trap configChangeSNMP from 10.1.2.3
        zProperties:
          zEventSeverity: 3
      cpqHe3FltTolPowerSupplyDegraded:
        evaluation: 'The fault tolerant power supply condition has been set

          to degraded for the specified chassis and bay location.

          '
        eventClassKey: cpqHe3FltTolPowerSupplyDegraded
        example: The Power Supply Degraded on Chassis 2, Bay 2.
        sequence: 1
        transform: "evt.summary = \"The Power Supply Degraded on Chassis %d, Bay %d.\"\
          \  %(evt.cpqHeFltTolPowerSupplyChassis, evt.cpqHeFltTolPowerSupplyBay)\n\
          snmpindex = \"%d.%d\" % (evt.cpqHeFltTolPowerSupplyChassis, evt.cpqHeFltTolPowerSupplyBay)\n\
          for comp in device.getDeviceComponents(type=\"HPPowerSupply\"):\n    if\
          \ comp.snmpindex != snmpindex: continue\n    comp.status = 2\n    evt.component\
          \ = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqHe3FltTolPowerSupplyFailed:
        evaluation: 'The fault tolerant power supply condition has been set

          to failed for the specified chassis and bay location.

          '
        eventClassKey: cpqHe3FltTolPowerSupplyFailed
        example: The Power Supply Failed on Chassis 2, Bay 2.
        sequence: 1
        transform: "evt.component = 'Power Supply %s' % (evt.cpqHeFltTolPowerSupplyBay)\n\
          evt.summary = \"The Power Supply Failed on Chassis %s, Bay %s.\"  %(evt.cpqHeFltTolPowerSupplyChassis,\
          \ evt.cpqHeFltTolPowerSupplyBay)\nsnmpindex = \"%s.%s\" % (evt.cpqHeFltTolPowerSupplyChassis,\
          \ evt.cpqHeFltTolPowerSupplyBay)\nfor comp in device.getDeviceComponents(type=\"\
          HPPowerSupply\"):\n    if comp.snmpindex != snmpindex: continue\n    comp.status\
          \ = 2\n    evt.component = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n\
          \    txnCommit()\n    break\n"
      cpqHe3FltTolPowerSupplyInserted:
        evaluation: 'A Fault Tolerant Power Supply has been inserted into the

          specified chassis and bay location.

          '
        eventClassKey: cpqHe3FltTolPowerSupplyInserted
        example: The Power Supply Inserted on Chassis 2, Bay 2.
        sequence: 1
        transform: 'evt.component = ''Power Supply %s'' % (evt.cpqHeFltTolPowerSupplyBay)

          evt.summary = "The Power Supply Inserted on Chassis %s, Bay %s."  %(evt.cpqHeFltTolPowerSupplyChassis,
          evt.cpqHeFltTolPowerSupplyBay)

          '
      cpqHe3FltTolPowerSupplyRemoved:
        evaluation: 'A Fault Tolerant Power Supply has been removed from the

          specified chassis and bay location.

          '
        eventClassKey: cpqHe3FltTolPowerSupplyRemoved
        example: The Power Supply Removed on Chassis 2, Bay 2.
        sequence: 1
        transform: "evt.component = 'Power Supply %s' % (evt.cpqHeFltTolPowerSupplyBay)\n\
          evt.summary = \"The Power Supply Removed on Chassis %s, Bay %s.\"  %(evt.cpqHeFltTolPowerSupplyChassis,\
          \ evt.cpqHeFltTolPowerSupplyBay)\nsnmpindex = \"%s.%s\" % (evt.cpqHeFltTolPowerSupplyChassis,\
          \ evt.cpqHeFltTolPowerSupplyBay)\nfor comp in device.getDeviceComponents(type=\"\
          HPPowerSupply\"):\n    if comp.snmpindex != snmpindex: continue\n    comp.status\
          \ = 2\n    evt.component = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n\
          \    txnCommit()\n    break\n"
      cpqHe3FltTolPwrSupplyDegraded:
        evaluation: 'The fault tolerant power supply sub-system condition has been

          set to degraded.

          '
        eventClassKey: cpqHe3FltTolPwrSupplyDegraded
        example: The server power supply status has become degraded.
        sequence: 1
        transform: evt.summary = "The server power supply status has become degraded."
      cpqHe3PowerConverterDegraded:
        evaluation: 'The DC-DC Power Converter condition has been set to degraded

          for the specified chassis, slot and socket.

          '
        eventClassKey: cpqHe3PowerConverterDegraded
        example: The Power Converter Degraded on Chassis 2, Slot 2, Socket 2.
        sequence: 1
        transform: evt.summary = "The Power Converter Degraded on Chassis %d, Slot
          %d, Socket %d."  %(evt.cpqHePwrConvChassis, evt.cpqHePwrConvSlot, evt.cpqHePwrConvSocket)
      cpqHe3PowerConverterFailed:
        evaluation: 'The DC-DC Power Converter condition has been set to failed

          for the specified chassis, slot and socket.

          '
        eventClassKey: cpqHe3PowerConverterFailed
        example: The Power Converter Failed on Chassis 2, Slot 2, Socket 2.
        sequence: 1
        transform: evt.summary = "The Power Converter Failed on Chassis %d, Slot %d,
          Socket %d."  %(evt.cpqHePwrConvChassis, evt.cpqHePwrConvSlot, evt.cpqHePwrConvSocket)
      cpqHe3PowerConverterRedundancyLost:
        evaluation: 'The DC-DC Power Converters have lost redundancy for the

          specified chassis.

          '
        eventClassKey: cpqHe3PowerConverterRedundancyLost
        example: The Power Converters are no longer redundant on Chassis 2.
        sequence: 1
        transform: evt.summary = "The Power Converters are no longer redundant on
          Chassis %d."  %(evt.cpqHePwrConvChassis)
      cpqHeFltTolPwrSupplyDegraded:
        evaluation: 'The fault tolerant power supply sub-system condition has been

          set to degraded.

          '
        eventClassKey: cpqHeFltTolPwrSupplyDegraded
        example: The server power supply status has become degraded.
        sequence: 1
        transform: evt.summary = "The server power supply status has become degraded."
      cpqasm2_4154:
        eventClassKey: cpqasm2_4154
        example: The power sub-system is no longer redundant.
      cpqasm2_4157:
        eventClassKey: cpqasm2_4157
        example: The power sub-system is now in a redundant state.
        zProperties:
          zEventSeverity: 0
      cpqasm2_4173:
        eventClassKey: cpqasm2_4173
        example: 'Power supply #2 has failed.'
      cpqasm_4157:
        eventClassKey: cpqasm_4157
        example: The Compaq System Management Driver has detected that the power sub-system
          is redundant.
        zProperties:
          zEventSeverity: 0
    transform: "if evt.message.find(\"Value changed from None\") >= 0:\n    evt._action\
      \ = \"drop\"\n"
    zProperties:
      zEventSeverity: 4
  /Events/HW/Power/BigIpMonitor:
    transform: "def getMetricValue(text):\n    '''pull the current metric value out\
      \ of the event summary or message'''\n    searchString = 'current value '\n\
      \    start = text.find(searchString)+len(searchString)\n    return text[start:]\n\
      \nstatus_map = {0: 'Bad', 1: 'Good', 2: 'Not Present'}\n\ntry:\n    status_val\
      \ = int(float(getMetricValue(evt.summary)))\n    status_string = status_map.get(status_val,\
      \ 'Unknown')\n    evt.summary = 'Current power supply status: %s' % status_string\n\
      except:\n    pass\n"
  /Events/HW/Power/PowerLoss:
    mappings:
      C6KPWR-SP-4-PSFAIL:
        eventClassKey: C6KPWR-SP-4-PSFAIL
        example: power supply 1 output failed.
      C6KPWR-SP-4-PSOK:
        eventClassKey: C6KPWR-SP-4-PSOK
        example: power supply 1 turned on.
        zProperties:
          zEventSeverity: 0
      C6KPWR-SP-4-PSREDUNDANTONESUPPLY:
        eventClassKey: C6KPWR-SP-4-PSREDUNDANTONESUPPLY
        example: in power-redundancy mode, system is operating on one power supply.
      cpqHe3FltTolPowerRedundancyLost:
        evaluation: 'The Fault Tolerant Power Supplies have lost redundancy for

          the specified chassis.

          '
        eventClassKey: cpqHe3FltTolPowerRedundancyLost
        example: The Power Supplies are no longer redundant on Chassis 2.
        sequence: 1
        transform: evt.summary = "The Power Supplies are no longer redundant on Chassis
          %d."  %(evt.cpqHeFltTolPowerSupplyChassis)
      cpqHe4FltTolPowerSupplyDegraded:
        evaluation: 'The fault tolerant power supply condition has been set

          to degraded for the specified chassis and bay location.

          '
        eventClassKey: cpqHe4FltTolPowerSupplyDegraded
        example: The Power Supply is Degraded on Chassis 2, Bay 2, Status 2, Model
          %s, Serial Num %s, Firmware %s.
        sequence: 1
        transform: "evt.summary = \"The Power Supply is Degraded on Chassis %d, Bay\
          \ %d, Status %d, Model %s, Serial Num %s, Firmware %s.\"  %(evt.cpqHeFltTolPowerSupplyChassis,\
          \ evt.cpqHeFltTolPowerSupplyBay, evt.cpqHeFltTolPowerSupplyStatus, evt.cpqHeFltTolPowerSupplyModel,\
          \ evt.cpqHeFltTolPowerSupplySerialNumber, evt.cpqHeFltTolPowerSupplyFirmwareRev)\n\
          snmpindex = \"%d.%d\" % (evt.cpqHeFltTolPowerSupplyChassis, evt.cpqHeFltTolPowerSupplyBay)\n\
          for comp in device.getDeviceComponents(type=\"HPPowerSupply\"):\n    if\
          \ comp.snmpindex != snmpindex: continue\n    comp.status = 2\n    evt.component\
          \ = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqHe4FltTolPowerSupplyFailed:
        evaluation: 'The fault tolerant power supply condition has been set

          to failed for the specified chassis and bay location.

          '
        eventClassKey: cpqHe4FltTolPowerSupplyFailed
        example: The Power Supply is Failed on Chassis 2, Bay 2, Status 2, Model %s,
          Serial Num %s, Firmware %s.
        sequence: 1
        transform: "evt.component = 'Power Supply %s' % (evt.cpqHeFltTolPowerSupplyBay)\n\
          evt.summary = \"The Power Supply is Failed on Chassis %s, Bay %s, Status\
          \ %s, Model %s, Serial Num %s, Firmware %s.\"  %(evt.cpqHeFltTolPowerSupplyChassis,\
          \ evt.cpqHeFltTolPowerSupplyBay, evt.cpqHeFltTolPowerSupplyStatus, evt.cpqHeFltTolPowerSupplyModel,\
          \ evt.cpqHeFltTolPowerSupplySerialNumber, evt.cpqHeFltTolPowerSupplyFirmwareRev)\n\
          snmpindex = \"%s.%s\" % (evt.cpqHeFltTolPowerSupplyChassis, evt.cpqHeFltTolPowerSupplyBay)\n\
          for comp in device.getDeviceComponents(type=\"HPPowerSupply\"):\n    if\
          \ comp.snmpindex != snmpindex: continue\n    comp.status = 2\n    evt.component\
          \ = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
  /Events/HW/Power/PowerRestored:
    mappings:
      cpqHe3FltTolPowerRedundancyRestored:
        evaluation: 'The Fault Tolerant Power Supplies have returned to a redundant

          state for the specified chassis.

          '
        eventClassKey: cpqHe3FltTolPowerRedundancyRestored
        example: The Power Supplies are now redundant on Chassis 2.
        sequence: 1
        transform: evt.summary = "The Power Supplies are now redundant on Chassis
          %s."  %(evt.cpqHeFltTolPowerSupplyChassis)
      cpqHe4FltTolPowerSupplyOk:
        evaluation: 'The fault tolerant power supply condition has been set back

          to the OK state for the specified chassis and bay location.

          '
        eventClassKey: cpqHe4FltTolPowerSupplyOk
        example: The Power Supply is OK on Chassis 2, Bay 2, Status 2, Model %s, Serial
          Num %s, Firmware %s.
        sequence: 1
        transform: "evt.summary = \"The Power Supply is OK on Chassis %s, Bay %s,\
          \ Status %s, Model %s, Serial Num %s, Firmware %s.\"  %(evt.cpqHeFltTolPowerSupplyChassis,\
          \ evt.cpqHeFltTolPowerSupplyBay, evt.cpqHeFltTolPowerSupplyStatus, evt.cpqHeFltTolPowerSupplyModel,\
          \ evt.cpqHeFltTolPowerSupplySerialNumber, evt.cpqHeFltTolPowerSupplyFirmwareRev)\n\
          snmpindex = \"%d.%d\" % (evt.cpqHeFltTolPowerSupplyChassis, evt.cpqHeFltTolPowerSupplyBay)\n\
          for comp in device.getDeviceComponents(type=\"HPPowerSupply\"):\n    if\
          \ comp.snmpindex != snmpindex: continue\n    comp.status = 1\n    evt.component\
          \ = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
    zProperties:
      zEventClearClasses:
      - /HW/Power/PowerLoss
      zEventSeverity: 0
  /Events/HW/Power/UPS:
    mappings:
      accessViolationHTTP:
        eventClassKey: accessViolationHTTP
        example: snmp trap accessViolationHTTP from 10.1.2.3
        transform: evt.summary = evt.mtrapargsString
      noBatteries:
        eventClassKey: noBatteries
        example: snmp trap noBatteries from 10.1.2.3
      passwordChange:
        eventClassKey: passwordChange
        example: snmp trap passwordChange from 10.1.2.3
        zProperties:
          zEventSeverity: 3
      powerRestored:
        eventClassKey: powerRestored
        example: snmp trap powerRestored from 10.1.2.3
        transform: evt.summary = evt.mtrapargsString
        zProperties:
          zEventSeverity: 0
      upsBatteryNeedsReplacement:
        eventClassKey: upsBatteryNeedsReplacement
        example: snmp trap upsBatteryNeedsReplacement from 10.1.2.3
        zProperties:
          zEventSeverity: 4
      upsBatteryReplaced:
        eventClassKey: upsBatteryReplaced
        example: 'UPS: Bad battery condition cleared.'
        transform: evt.summary = evt.mtrapargsString
        zProperties:
          zEventSeverity: 0
      upsDiagnosticsFailed:
        eventClassKey: upsDiagnosticsFailed
        example: 'UPS: Failed internal diagnostic self-test.'
        transform: evt.summary = evt.mtrapargsString
        zProperties:
          zEventSeverity: 3
      upsDiagnosticsPassed:
        eventClassKey: upsDiagnosticsPassed
        example: 'UPS: Passed internal self-test.'
        transform: evt.summary = evt.mtrapargsString
        zProperties:
          zEventSeverity: 0
      upsOnBattery:
        eventClassKey: upsOnBattery
        example: snmp trap upsOnBattery from 10.1.2.3
        transform: evt.summary = evt.mtrapargsString
        zProperties:
          zEventSeverity: 5
      xupstdOnBattery:
        eventClassKey: xupstdOnBattery
        zProperties:
          zEventSeverity: 5
  /Events/HW/Power/UPS/SmartBoost:
    mappings:
      smartBoostOff:
        eventClassKey: smartBoostOff
        example: snmp trap smartBoostOff from 10.1.2.3
        zProperties:
          zEventSeverity: 0
      smartBoostOn:
        eventClassKey: smartBoostOn
        example: snmp trap smartBoostOn from 10.1.2.3
        zProperties:
          zEventSeverity: 3
  /Events/HW/Store:
    mappings:
      CPQCISSE_24598:
        eventClassKey: CPQCISSE_24598
        example: 'Logical Drive 3 of Embedded Controller has changed from status code
          3 to status code 4.


          Status Codes:


          0  = OK


          1  = FAILED


          2  = NOT CONFIGURED


          3  = INTERIM RECOVERY MODE


          4  = READY FOR RECOVERY


          5  = RECOVERING


          6  = WRONG PHYSICAL DRIVE REPLACED


          7  = PHYSICAL DRIVE NOT PROPERLY CONNECTED


          8  = HARDWARE IS OVERHEATING


          9  = HARDWARE HAS OVERHEATED


          10 = EXPANDING


          11 = NOT YET AVAILABLE


          12 = QUEUED FOR EXPANSION


          13 = UNKNOWN'
        zProperties:
          zEventSeverity: 4
      CPQCISSE_24625:
        eventClassKey: CPQCISSE_24625
        example: Physical Drive inserted, on Box 1 and Bay 5 of Embedded Controller.
        zProperties:
          zEventSeverity: 3
      CPQCISSE_24644:
        eventClassKey: CPQCISSE_24644
        example: 'Physical Drive in Box 1, Bay 5 of Embedded Controller has failed.

          Failure Code: 0x07.'
        zProperties:
          zEventSeverity: 4
      QDLT32_7:
        eventClassKey: QDLT32_7
        example: The device, \Device\Tape0, has a bad block.
        zProperties:
          zEventSeverity: 3
      Server Administrator_2048:
        eventClassKey: Server Administrator_2048
        example: 'Device failed:  Array Disk 0:1 Controller 0, Channel 0'
        zProperties:
          zEventSeverity: 4
      Server Administrator_2049:
        eventClassKey: Server Administrator_2049
        example: 'Array disk removed:  Array Disk 0:1 Controller 0, Channel 0'
        zProperties:
          zEventSeverity: 3
      Server Administrator_2057:
        eventClassKey: Server Administrator_2057
        example: 'Virtual disk degraded: Virtual Disk 0 (Virtual Disk 0) Controller
          0 (PERC 4e/Di)'
        zProperties:
          zEventSeverity: 4
      Server Administrator_2083:
        eventClassKey: Server Administrator_2083
        example: 'Array disk Rebuild failed: Array Disk 0:1 Controller 0, Channel
          0'
        zProperties:
          zEventSeverity: 4
      Server Administrator_2094:
        eventClassKey: Server Administrator_2094
        example: 'Predictive Failure reported:  Array Disk 0:1 Controller 0, Channel
          0'
        zProperties:
          zEventSeverity: 4
      Server Administrator_2123:
        eventClassKey: Server Administrator_2123
        example: 'Redundancy lost: Virtual Disk 0 (Virtual Disk 0) Controller 0 (PERC
          4e/Di)'
        zProperties:
          zEventSeverity: 4
      Server Administrator_2124:
        eventClassKey: Server Administrator_2124
        example: 'Redundancy normal: Virtual Disk 0 (Virtual Disk 0) Controller 0
          (PERC 4e/Di)'
        zProperties:
          zEventSeverity: 0
      Storage Agents_1145:
        eventClassKey: Storage Agents_1145
        example: 'External Array Logical Drive Status Change.  Logical drive

          number 2 on array "9J36KF31J7NP" has a new status of 6.

          (Logical

          Drive status values: 1=other, 2=ok, 3=failed, 4=unconfigured,

          5=recovering, 6=readyForRebuild, 7=rebuilding, 8=wrongDrive,

          9=badConnect, 10=overheating, 11=shutdown, 12=expanding,

          13=notAvailable, 14=queuedForExpansion)

          [SNMP TRAP: 16022 in

          CPQFCA.MIB]'
        zProperties:
          zEventSeverity: 4
      Storage Agents_1146:
        eventClassKey: Storage Agents_1146
        example: 'External Array Physical Drive Status Change.  The physical

          drive in port 1, bay 5 on array "9J36KF31J7NP" has a new status of 3.

          (Drive

          status values: 1=other, 2=unconfigured, 3=ok, 4=threshExceeded,

          5=predictiveFailure, 6=failed)

          [SNMP TRAP: 16016 in CPQFCA.MIB]'
        zProperties:
          zEventSeverity: 4
      cpqExtArrayLogDrvStatusChange:
        evaluation: 'External Array Logical Drive Status Change.

          This trap signifies that the agent has detected a change in the

          status of an External Array logical drive.  The variable

          cpqFcaLogDrvStatus indicates the current logical drive status.

          '
        eventClassKey: cpqExtArrayLogDrvStatusChange
        example: Status is now 2.
        resolution: 'If the logical drive status is failed, examine

          the array for failed drives that need replacement.

          '
        sequence: 1
        transform: "evt.summary = \"Status is now %d.\"  %(evt.cpqFcaLogDrvStatus)\n\
          snmpindex = \"%d.%d\" %(evt.cpqFcaLogDrvBoxIndex, evt.cpqFcaLogDrvIndex)\n\
          for comp in device.getMonitoredComponents(type=\"LogicalDisk\"):\n    if\
          \ comp.__class__.__name__ != \"cpqFcaLogDrv\": continue\n    if comp.snmpindex\
          \ != snmpindex: continue\n    comp.status = evt.cpqFcaLogDrvStatus\n   \
          \ evt.component = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n\
          \    txnCommit()\n    break\n"
      cpqFca2AccelBadDataTrap:
        evaluation: 'External Array Accelerator Board Bad Data.

          This trap signifies that the agent has detected a Array

          Accelerator Cache Board that has lost battery power.  If data

          was being stored in the accelerator memory when the system lost

          power, that data has been lost.

          '
        eventClassKey: cpqFca2AccelBadDataTrap
        example: Accelerator lost battery power.  Data Loss possible.
        resolution: Verify that no data has been lost.
        sequence: 1
        transform: "evt.summary = \"Accelerator lost battery power.  Data Loss possible.\"\
          \nfor comp in device.getMonitoredComponents(type=\"ExpansionCard\"):\n \
          \   if comp.__class__.__name__ != \"cpqFcaCntlr\": continue\n    status\
          \ = getattr(evt, \"cpqFcaAccelBoxIoSlot.%s\" % comp.snmpindex, False)\n\
          \    if not status: continue\n    evt.component = comp.id\n    evt.severity\
          \ = 4\n    break\n"
      cpqFca2AccelBatteryFailed:
        evaluation: 'External Array Accelerator Board Battery Failed.

          This trap signifies that the agent has detected a battery

          failure associated with the Array Accelerator Cache Board.

          '
        eventClassKey: cpqFca2AccelBatteryFailed
        example: Battery status is failed.
        resolution: Replace the Accelerator Cache Board.
        sequence: 1
        transform: "evt.summary = \"Battery status is failed.\"\nfor comp in device.getMonitoredComponents(type=\"\
          ExpansionCard\"):\n    if comp.__class__.__name__ != \"cpqFcaCntlr\": continue\n\
          \    status = getattr(evt, \"cpqFcaAccelBoxIoSlot.%s\" % comp.snmpindex,\
          \ False)\n    if not status: continue\n    evt.component = comp.id\n   \
          \ evt.severity = 4\n    break\n"
      cpqFca2AccelStatusChange:
        evaluation: 'External Array Accelerator Board Status Change.

          This trap signifies that the agent has detected a change in the

          status of a Array Accelerator Cache Board.  The current status

          is represented by the variable cpqFcaAccelStatus.

          '
        eventClassKey: cpqFca2AccelStatusChange
        example: Status is now 2.
        resolution: 'If the accelerator board status is permDisabled(5),

          you may need to replace the accelerator board.

          '
        sequence: 1
        transform: "evt.summary = \"Status is now %d.\"  %(evt.cpqFcaAccelStatus)\n\
          for comp in device.getMonitoredComponents(type=\"ExpansionCard\"):\n   \
          \ if comp.__class__.__name__ != \"cpqFcaCntlr\": continue\n    status =\
          \ getattr(evt, \"cpqFcaAccelStatus.%s\" % comp.snmpindex, False)\n    if\
          \ not status: continue\n    evt.component = comp.id\n    break\n"
      cpqFca2CntlrStatusChange:
        evaluation: 'External Array Controller Status Change.

          This trap signifies that the agent has detected a change in the

          status of a External Array Controller.  The variable

          cpqFcaCntlrStatus indicates the current controller status.

          '
        eventClassKey: cpqFca2CntlrStatusChange
        example: Status is now 2.
        resolution: 'If the controller status is offline(4), access to

          the storage box has been lost.  Check the storage box and all

          fibre channel connections for problems.

          '
        sequence: 1
        transform: "evt.summary = \"Status is now %d.\"  %(evt.cpqFcaCntlrStatus)\n\
          for comp in device.getMonitoredComponents(type=\"ExpansionCard\"):\n   \
          \ if comp.__class__.__name__ != \"cpqFcaCntlr\": continue\n    status =\
          \ getattr(evt, \"cpqFcaCntlrStatus.%s\" % comp.snmpindex, False)\n    if\
          \ not status: continue\n    comp.status = status\n    evt.component = comp.id\n\
          \    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqFca2HostCntlrStatusChange:
        evaluation: 'Fibre Channel Host Controller Status Change.

          This trap signifies that the agent has detected a change in the

          status of a Fibre Channel Host Controller.  The variable

          cpqFcaHostCntlrStatus indicates the current controller status.

          '
        eventClassKey: cpqFca2HostCntlrStatusChange
        example: Host controller in slot 2 has a new status of 2.
        resolution: 'If the controller status is failed, replace the

          controller.

          '
        sequence: 1
        transform: "evt.summary = \"Host controller in slot %d has a new status of\
          \ %d.\"  %(evt.cpqFcaHostCntlrSlot, evt.cpqFcaHostCntlrStatus)\nfor comp\
          \ in device.getMonitoredComponents(type=\"ExpansionCard\"):\n    if comp.__class__.__name__\
          \ != \"cpqFcaHostCntlr\": continue\n    if comp.slot != evt.cpqFcaHostCntlrSlot:\
          \ continue\n    comp.status = evt.cpqFcaHostCntlrStatus\n    evt.component\
          \ = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqFca2PhyDrvStatusChange:
        evaluation: 'External Array Physical Drive Status Change.

          This trap signifies that the agent has detected a change in the

          status of a physical drive.  The variable cpaFcaPhyDrvStatus

          indicates the current physical drive status.

          '
        eventClassKey: cpqFca2PhyDrvStatusChange
        example: Status is now 2 for a physical drive on bus 2, bay 2.
        resolution: 'If the physical drive status is threshExceeded(4),

          predictiveFailure(5), failed(6) or unsupportedDrive(7), replace

          the drive.

          '
        sequence: 1
        transform: "evt.summary = \"Status is now %d for a physical drive on bus %d,\
          \ bay %d.\"  %(evt.cpqFcaPhyDrvStatus, evt.cpqFcaPhyDrvBusNumber, evt.cpqFcaPhyDrvBay)\n\
          for comp in device.getMonitoredComponents(type=\"HardDisk\"):\n    if comp.__class__.__name__\
          \ != \"cpqFcaPhyDrv\": continue\n    status = getattr(evt, \"cpqFcaPhyDrvStatus.%s\"\
          \ % comp.snmpindex, False)\n    if not status: continue\n    comp.status\
          \ = status\n    evt.component = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n\
          \    txnCommit()\n    break\n"
      cpqFca3HostCntlrStatusChange:
        evaluation: 'Fibre Channel Host Controller Status Change.

          This trap signifies that the agent has detected a change in the

          status of a Fibre Channel Host Controller.  The variable

          cpqFcaHostCntlrStatus indicates the current controller status.

          '
        eventClassKey: cpqFca3HostCntlrStatusChange
        example: Host controller has a new status of 2.
        resolution: 'If the controller status is failed, replace the

          controller.

          '
        sequence: 1
        transform: "for attr in evt.details._map:\n    if attr.startswith('cpqFcaHostCntlrStatus'):\n\
          \        status = getattr(evt, attr, '')\n        break\n\nevt.summary =\
          \ \"Host controller has a new status of {}\".format(status)\n#snmpindex\
          \ = \"%d\" %(evt.cpqFcaHostCntlrIndex)\nfor comp in device.getMonitoredComponents(type=\"\
          ExpansionCard\"):\n    if comp.__class__.__name__ != \"cpqFcaHostCntlr\"\
          : continue\n    #if comp.snmpindex != snmpindex: continue\n    comp.status\
          \ = evt.cpqFcaHostCntlrStatus\n    evt.component = comp.id\n    evt.severity\
          \ = comp.statusSeverity(comp.status)\n    txnCommit()\n    break\n"
      cpqFcaAccelBadDataTrap:
        evaluation: 'External Array Accelerator Board Bad Data.

          This trap signifies that the agent has detected a Array

          Accelerator Cache Board that has lost battery power.  If data

          was being stored in the accelerator memory when the system lost

          power, that data has been lost.

          '
        eventClassKey: cpqFcaAccelBadDataTrap
        example: Accelerator lost battery power.  Data Loss possible.
        resolution: Verify that no data has been lost.
        sequence: 1
        transform: "evt.summary = \"Accelerator lost battery power.  Data Loss possible.\"\
          \nfor comp in device.getMonitoredComponents(type=\"ExpansionCard\"):\n \
          \   if comp.__class__.__name__ != \"cpqFcaCntlr\": continue\n    status\
          \ = getattr(evt, \"cpqFcaAccelBoxIoSlot.%s\" % comp.snmpindex, False)\n\
          \    if not status: continue\n    evt.component = comp.id\n    evt.severity\
          \ = 4\n    break\n"
      cpqFcaAccelBatteryFailed:
        evaluation: 'External Array Accelerator Board Battery Failed.

          This trap signifies that the agent has detected a battery

          failure associated with the Array Accelerator Cache Board.

          '
        eventClassKey: cpqFcaAccelBatteryFailed
        example: Battery status is failed.
        resolution: Replace the Accelerator Cache Board.
        sequence: 1
        transform: "evt.summary = \"Battery status is failed.\"\nfor comp in device.getMonitoredComponents(type=\"\
          ExpansionCard\"):\n    if comp.__class__.__name__ != \"cpqFcaCntlr\": continue\n\
          \    status = getattr(evt, \"cpqFcaAccelBoxIoSlot.%s\" % comp.snmpindex,\
          \ False)\n    if not status: continue\n    evt.component = comp.id\n   \
          \ evt.severity = 4\n    break\n"
      cpqFcaAccelStatusChange:
        evaluation: 'External Array Accelerator Board Status Change.

          This trap signifies that the agent has detected a change in the

          cpqFcaAccelStatus of a Array Accelerator Cache Board.  The

          current status is represented by the variable cpqFcaAccelStatus.

          '
        eventClassKey: cpqFcaAccelStatusChange
        example: Status is now 2.
        resolution: None.
        sequence: 1
        transform: "evt.summary = \"Status is now %d.\"  %(evt.cpqFcaAccelStatus)\n\
          for comp in device.getMonitoredComponents(type=\"ExpansionCard\"):\n   \
          \ if comp.__class__.__name__ != \"cpqFcaCntlr\": continue\n    status =\
          \ getattr(evt, \"cpqFcaAccelBoxIoSlot.%s\" % comp.snmpindex, False)\n  \
          \  if not status: continue\n    evt.component = comp.id\n    break\n"
      cpqFcaCntlrActive:
        evaluation: 'External Array Redundant Controller Active.

          This trap signifies that the Storage Agent has detected that

          a backup array controller in a duplexed pair has switched over

          to the active role.  The variable cpqFcaCntlrBoxIoSlot indicates

          the new active controller index.

          '
        eventClassKey: cpqFcaCntlrActive
        example: Controller in i/o slot 2 is now active on chassis %s.
        resolution: 'Check the partner controller for problems.

          If this was the result of a user initiated switch over,

          no action is required.

          '
        sequence: 1
        transform: "evt.summary = \"Controller in i/o slot %d is now active on chassis\
          \ %s.\"  %(evt.cpqFcaCntlrBoxIoSlot, evt.cpqSsChassisName)\ncomponents =\
          \ device.getMonitoredComponents(type=\"ExpansionCard\")\nfor comp in components:\n\
          \    if comp.__class__.__name__ != \"cpqFcaCntlr\": continue\n    if not\
          \ hasattr(evt, \"cpqFcaCntlrBoxIoSlot.%s\" % comp.snmpindex): continue\n\
          \    snmpindex = comp.snmpindex.split('.')[0]\n    break\nfor comp in components:\n\
          \    if comp.__class__.__name__ != \"cpqFcaCntlr\": continue\n    chassisidx,cntlridx\
          \ = comp.snmpindex.split('.')\n    if chassisidx != snmpindex: continue\n\
          \    if cntlridx == evt.cpqFcaCntlrBoxIoSlot:\n        comp.role = 3\n \
          \       evt.component = comp.id\n        evt.severity = 2\n\tcommitnow =\
          \ True\n    else:\n        comp.role = 4\nif commitnow:\n    txnCommit()\n"
      cpqFcaCntlrStatusChange:
        evaluation: 'External Array Controller Status Change.

          This trap signifies that the agent has detected a change in the

          status of a External Array Controller.  The variable

          cpqFcaCntlrStatus indicates the current controller status.

          '
        eventClassKey: cpqFcaCntlrStatusChange
        example: Status is now 2.
        resolution: 'If the controller status is offline, access to the

          storage box has been lost.  Check the storage box and all fibre

          channel connections for problems.

          '
        sequence: 1
        transform: "evt.summary = \"Status is now %d.\"  %(evt.cpqFcaCntlrStatus)\n\
          for comp in device.getMonitoredComponents(type=\"ExpansionCard\"):\n   \
          \ if comp.__class__.__name__ != \"cpqFcaCntlr\": continue\n    status =\
          \ getattr(evt, \"cpqFcaCntlrStatus.%s\" % comp.snmpindex, False)\n    if\
          \ not status: continue\n    comp.status = status\n    evt.component = comp.id\n\
          \    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqFcaHostCntlrStatusChange:
        evaluation: 'Fibre Channel Host Controller Status Change.

          This trap signifies that the Insight Agent has detected a change

          in the status of a Fibre Channel Host Controller.  The variable

          cpqFcaHostCntlrStatus indicates the current controller status.

          '
        eventClassKey: cpqFcaHostCntlrStatusChange
        example: Host controller in slot 2 has a new status of 2.
        resolution: 'If the controller status is failed, replace the

          controller.

          '
        sequence: 1
        transform: "evt.summary = \"Host controller in slot %d has a new status of\
          \ %d.\"  %(evt.cpqFcaHostCntlrSlot, evt.cpqFcaHostCntlrStatus)\nfor comp\
          \ in device.getMonitoredComponents(type=\"ExpansionCard\"):\n    if comp.__class__.__name__\
          \ != \"cpqFcaHostCntlr\": continue\n    if comp.slot != evt.cpqFcaHostCntlrSlot:\
          \ continue\n    comp.status = evt.cpqFcaHostCntlrStatus\n    evt.component\
          \ = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqFcaLogDrvStatusChange:
        evaluation: 'External Array Logical Drive Status Change.

          This trap signifies that the agent has detected a change in the

          status of a External Array logical drive.  The variable

          cpqFcaLogDrvStatus indicates the current logical drive status.

          '
        eventClassKey: cpqFcaLogDrvStatusChange
        example: Status is now 2.
        resolution: 'If the logical drive status is failed, examine

          the array for failed drives that need replacement.

          '
        sequence: 1
        transform: "evt.summary = \"Status is now %d.\"  %(evt.cpqFcaLogDrvStatus)\n\
          for comp in device.getMonitoredComponents(type=\"LogicalDisk\"):\n    if\
          \ comp.__class__.__name__ != \"cpqFcaLogDrv\": continue\n    status = getattr(evt,\
          \ \"cpqFcaLogDrvStatus.%s\" % comp.snmpindex, False)\n    if not status:\
          \ continue\n    comp.status = status\n    evt.component = comp.id\n    evt.severity\
          \ = comp.statusSeverity(comp.status)\n    txnCommit()\n    break\n"
      cpqFcaPhyDrvStatusChange:
        evaluation: 'External Array Physical Drive Status Change.

          This trap signifies that the agent has detected a change in the

          status of a physical drive.  The variable cpaFcaPhyDrvStatus

          indicates the current physical drive status.  The variable

          cpqFcaPhyDrvBusNumber indicates the SCSI bus number associated

          with this drive.

          '
        eventClassKey: cpqFcaPhyDrvStatusChange
        example: Status is now 2 for a physical drive on bus 2.
        resolution: 'If the physical drive status is threshExceeded(4),

          predictiveFailure(5) or failed(6), replace the drive.

          '
        sequence: 1
        transform: "evt.summary = \"Status is now %d for a physical drive on bus %d.\"\
          \  %(evt.cpqFcaPhyDrvStatus, evt.cpqFcaPhyDrvBusNumber)\nfor comp in device.getMonitoredComponents(type=\"\
          HardDisk\"):\n    if comp.__class__.__name__ != \"cpqFcaPhyDrv\": continue\n\
          \    status = getattr(evt, \"cpqFcaPhyDrvStatus.%s\" % comp.snmpindex, False)\n\
          \    if not status: continue\n    comp.status = status\n    evt.component\
          \ = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqFcaSpareStatusChange:
        evaluation: 'External Array Spare Drive Status Change.

          This trap signifies that the agent has detected a change in the

          status of a External Array spare drive.  The variable

          cpqFcaSpareStatus indicates the current spare drive status.  The

          variable cpqFcaSpareBusNumber indicates the SCSI bus number

          associated with this drive.

          '
        eventClassKey: cpqFcaSpareStatusChange
        example: Spare Status is now 2 on bus 2.
        resolution: 'If the spare drive status is failed, replace the

          drive.

          '
        sequence: 1
        transform: evt.summary = "Spare Status is now %d on bus %d."  %(evt.cpqFcaSpareStatus,
          evt.cpqFcaSpareBusNumber)
      cpqIdeAtaDiskStatusChange:
        evaluation: 'ATA Disk Status Change.

          This trap signifies that the agent has detected a change in the

          status of an ATA disk drive.  The variable cpqIdeAtaDiskStatus

          indicates the current disk drive status.

          '
        eventClassKey: cpqIdeAtaDiskStatusChange
        example: Status is now 2 for the ATA disk.
        resolution: 'If the physical drive status is smartError(3) or

          failed(4), replace the drive.

          '
        sequence: 1
        transform: "evt.summary = \"Status is now %d for the ATA disk.\"  %(evt.cpqIdeAtaDiskStatus)\n\
          snmpindex = \"%d.%d\" %(evt.cpqIdeAtaDiskControllerIndex, evt.cpqIdeAtaDiskIndex)\n\
          for comp in device.getMonitoredComponents(type=\"HardDisk\"):\n    if comp.__class__.__name__\
          \ != \"cpqIdeAtaDisk\": continue\n    if comp.snmpindex != snmpindex: continue\n\
          \    comp.status = evt.cpqIdeAtaDiskStatus\n    evt.component = comp.id\n\
          \    evt.severity = comp.statusSeverity(comp.status)\n    txnCommit()\n\
          \    break\n"
      cpqIdeDriveDegraded:
        evaluation: An IDE drive status has been set to degraded.
        eventClassKey: cpqIdeDriveDegraded
        example: IDE drive 2 has become degraded.
        resolution: 'The drive should be scheduled for replacement.

          Refer to the appropriate Maintenance and Service Guide for

          detailed information on a component replacement.

          '
        sequence: 1
        transform: evt.summary = "IDE drive %d has become degraded."  %(evt.cpqIdeIdentIndex)
      cpqIdeDriveOk:
        evaluation: An IDE drive status has been set to ok.
        eventClassKey: cpqIdeDriveOk
        example: IDE drive 2 has returned to normal operating condition.
        resolution: None.
        sequence: 1
        transform: evt.summary = "IDE drive %d has returned to normal operating condition."  %(evt.cpqIdeIdentIndex)
        zProperties:
          zEventSeverity: 0
      cpqIdeDriveUltraAtaDegraded:
        evaluation: 'An IDE drive detects an excessive number of Ultra ATA

          data transmission errors between the hard drive and the

          processor.

          '
        eventClassKey: cpqIdeDriveUltraAtaDegraded
        example: IDE drive 2 has detected Ultra ATA errors.
        resolution: 'For best performance move Ultra ATA devices to the

          primary controller and non Ultra ATA devices to the secondary

          controller.  If errors still persist, consider replacing the

          standard 40-conductor IDE cable with an 80-conductor Ultra ATA

          cable.

          '
        sequence: 1
        transform: evt.summary = "IDE drive %d has detected Ultra ATA errors."  %(evt.cpqIdeIdentIndex)
      cpqIdeLogicalDriveStatusChange:
        evaluation: 'IDE Logical Drive Status Change.

          This trap signifies that the agent has detected a change in the

          status of an IDE logical drive.  The variable

          cpqIdeLogicalDriveStatus indicates the current logical drive

          status.

          '
        eventClassKey: cpqIdeLogicalDriveStatusChange
        example: Status is now 2 for the IDE logical drive.
        resolution: 'If the logical drive status is failed(5), examine

          the array for failed drives that need replacement.

          '
        sequence: 1
        transform: "evt.summary = \"Status is now %d for the IDE logical drive.\"\
          \  %(evt.cpqIdeLogicalDriveStatus)\nsnmpindex = \"%d.%d\" %(evt.cpqIdeLogicalDriveControllerIndex,\
          \ evt.cpqIdeLogicalDriveIndex)\nfor comp in device.getMonitoredComponents(type=\"\
          cpqIdeLogicalDrive\"):\n    for comp in device.getMonitoredComponents(type=\"\
          LogicalDisk\"):\n        if comp.__class__.__name__ != \"cpqIdeLogicalDrive\"\
          : continue\n        if comp.snmpindex != snmpindex: continue\n        comp.status\
          \ = evt.cpqIdeLogicalDriveStatus\n        evt.component = comp.id\n    \
          \    evt.severity = comp.statusSeverity(comp.status)\n        txnCommit()\n\
          \        break\n"
      cpqcissm_11:
        eventClassKey: cpqcissm_11
        example: The driver detected a controller error on \Device\Scsi\cpqcissm1.
        zProperties:
          zEventSeverity: 4
  /Events/HW/Store/FiberChannel:
    mappings:
      StorageAgents_1215:
        evaluation: Server Lost connection to SAN.  For some reason, when a server
          reboots the port on the SAN switch sometimes gets hosed.
        eventClassKey: StorageAgents_1215
        example: 'Fibre Channel Controller Status Change. The Fibre Channel Controller
          in Slot 3 has a new status of 6. (Host controller status values: 1=other,
          2=ok, 3=failed, 4=shutdown, 5=connectionDegraded, 6=connectionFailed) [SNMP
          TRAP: 16028 in CPQFCA.MIB]'
        resolution: 'Fail the Supervisor over to the Standby sup.  To do this, Login
          to the Switch through Cisco Device Manager (ie: http://10.1.2.3/cgi-bin/element-manager.jnlp).  Locate
          the Supervisor that is Active (the supervisors are the blades with the Mgmt
          ports on them).  Right click on the Active Supervisor and click Reset.  You
          will get a message telling you that this will reset the interfaces.  Click
          OK to proceed.  This only resets the management session that you are using.  It
          will not disrupt the FiberChannel network.  That will cause the Supervisor
          to failover to the other Sup blade.'
        sequence: 1
        zProperties:
          zEventSeverity: 4
      StorageAgents_1215_up:
        eventClassKey: StorageAgents_1215
        example: 'Fibre Channel Controller Status Change. The Fibre Channel Controller
          in Slot 3 has a new status of 2. (Host controller status values: 1=other,
          2=ok, 3=failed, 4=shutdown, 5=connectionDegraded, 6=connectionFailed) [SNMP
          TRAP: 16028 in CPQFCA.MIB]'
        regex: has a new status of 2
        zProperties:
          zEventSeverity: 0
  /Events/HW/Temperature:
    mappings:
      Server Administrator_1052:
        eventClassKey: Server Administrator_1052
        example: 'Temperature sensor returned to a normal value

          Sensor location: BMC Ambient Temp

          Chassis location: Main System Chassis

          Previous state was: Non-Critical (Warning)

          Temperature sensor value (in Degrees Celsius): 11.0'
        zProperties:
          zEventSeverity: 0
      Server Administrator_1053:
        eventClassKey: Server Administrator_1053
        example: 'Temperature sensor detected a warning value

          Sensor location: BMC Ambient Temp

          Chassis location: Main System Chassis

          Previous state was: OK (Normal)

          Temperature sensor value (in Degrees Celsius): 10.0'
        zProperties:
          zEventSeverity: 4
      Server Agents_1091:
        eventClassKey: Server Agents_1091
        example: 'System Information Agent: Health: The server

          is operational again.  The server has previously been shutdown due to

          a thermal anomaly and has just become operational again.'
        zProperties:
          zEventSeverity: 0
      cpqHe3TemperatureDegraded:
        evaluation: 'The temperature status has been set to degraded in the

          specified chassis and location.

          The server''s temperature is outside of the normal operating

          range.  The server will be shutdown if the

          cpqHeThermalDegradedAction variable is set to shutdown(3).

          '
        eventClassKey: cpqHe3TemperatureDegraded
        example: Temperature out of range on Chassis 2, Location 2. Shutdown may occur.
        sequence: 1
        transform: evt.summary = "Temperature out of range on Chassis %d, Location
          %d. Shutdown may occur."  %(evt.cpqHeTemperatureChassis, evt.cpqHeTemperatureLocale)
      cpqHe3TemperatureFailed:
        evaluation: 'The temperature status has been set to failed in the

          specified chassis and location.

          The system will be shutdown due to this condition.

          '
        eventClassKey: cpqHe3TemperatureFailed
        example: Temperature Exceeded on Chassis 2, Location 2.
        sequence: 1
        transform: evt.summary = "Temperature Exceeded on Chassis %d, Location %d."  %(evt.cpqHeTemperatureChassis,
          evt.cpqHeTemperatureLocale)
      cpqHe3TemperatureOk:
        evaluation: 'The temperature status has been set to ok in the

          specified chassis and location.

          The server''s temperature has returned to the normal operating

          range.

          '
        eventClassKey: cpqHe3TemperatureOk
        example: Temperature Normal on Chassis 2, Location 2.
        sequence: 1
        transform: evt.summary = "Temperature Normal on Chassis %d, Location %d."  %(evt.cpqHeTemperatureChassis,
          evt.cpqHeTemperatureLocale)
      cpqHe3ThermalConfirmation:
        evaluation: 'The server is operational again.

          The server has previously been shutdown due to a thermal

          anomaly on the server and has just become operational again.

          '
        eventClassKey: cpqHe3ThermalConfirmation
        example: Server is operational again after thermal shutdown.
        sequence: 1
        transform: evt.summary = "Server is operational again after thermal shutdown."
      cpqHe3ThermalTempDegraded:
        evaluation: 'The temperature status has been set to degraded.

          The server''s temperature is outside of the normal operating

          range.  The server will be shutdown if the

          cpqHeThermalDegradedAction variable is set to shutdown(3).

          '
        eventClassKey: cpqHe3ThermalTempDegraded
        example: Temperature out of range.  Shutdown may occur.
        sequence: 1
        transform: evt.summary = "Temperature out of range.  Shutdown may occur."
      cpqHe3ThermalTempFailed:
        evaluation: 'The temperature status has been set to failed.

          The system will be shutdown due to this thermal condition.

          '
        eventClassKey: cpqHe3ThermalTempFailed
        example: System will be shutdown due to this thermal condition.
        sequence: 1
        transform: evt.summary = "System will be shutdown due to this thermal condition."
      cpqHe3ThermalTempOk:
        evaluation: 'The temperature status has been set to ok.

          The server''s temperature has returned to the normal operating

          range.

          '
        eventClassKey: cpqHe3ThermalTempOk
        example: Temperature has returned to normal range.
        sequence: 1
        transform: evt.summary = "Temperature has returned to normal range."
      cpqHeThermalConfirmation:
        evaluation: 'The server is operational again.

          The server has previously been shutdown due to a thermal

          anomaly on the server and has just become operational again.

          '
        eventClassKey: cpqHeThermalConfirmation
        example: Server is operational again after thermal shutdown.
        sequence: 1
        transform: evt.summary = "Server is operational again after thermal shutdown."
      cpqHeThermalTempDegraded:
        evaluation: 'The temperature status has been set to degraded.

          The server''s temperature is outside of the normal operating

          range.  The server will be shutdown if the

          cpqHeThermalDegradedAction variable is set to shutdown(3).

          '
        eventClassKey: cpqHeThermalTempDegraded
        example: Temperature out of range.  Shutdown may occur.
        sequence: 1
        transform: evt.summary = "Temperature out of range.  Shutdown may occur."
      cpqHeThermalTempFailed:
        evaluation: 'The temperature status has been set to failed.

          The system will be shutdown due to this thermal condition.

          '
        eventClassKey: cpqHeThermalTempFailed
        example: System will be shutdown due to this thermal condition.
        sequence: 1
        transform: evt.summary = "System will be shutdown due to this thermal condition."
      cpqHeThermalTempOk:
        evaluation: 'The temperature status has been set to ok.

          The server''s temperature has returned to the normal operating

          range.

          '
        eventClassKey: cpqHeThermalTempOk
        example: Temperature has returned to normal range.
        sequence: 1
        transform: evt.summary = "Temperature has returned to normal range."
      cpqasm2_4111:
        eventClassKey: cpqasm2_4111
        example: "Environment Abnormality Auto Shutdown (EAAS) initiated due to thermal\
          \ reasons, \neither resulting from the system overheating, or from the loss\
          \ of cooling."
        zProperties:
          zEventSeverity: 4
    transform: "try:\n    comp = evt.component.name()\nexcept:\n    comp = evt.component\n\
      \ntemp_val = float(evt.current)\nif 'Cisco' in getattr(evt, 'zenoss.device.device_class',\
      \ ''):\n    temp_val = temp_val/10\n\nmsg = 'Temperature on {} is {:.1f}°C'.format(comp,\
      \ temp_val)\nevt.message = msg\nevt.summary = msg\n"
  /Events/HW/Temperature/Fan:
    mappings:
      C6KENV-SP-4-PSFANFAILED:
        eventClassKey: C6KENV-SP-4-PSFANFAILED
        example: the fan in power supply 1 has failed
        zProperties:
          zEventSeverity: 4
      C6KENV-SP-4-PSFANOK:
        eventClassKey: C6KENV-SP-4-PSFANOK
        example: the fan in power supply 1 is OK
        zProperties:
          zEventSeverity: 0
      Server Agents_1130:
        eventClassKey: Server Agents_1130
        example: 'System Information Agent: Health: The

          Fan Sub-system is in a failed state.  Replace

          the fan.


          Chassis: ''0''; Fan: ''1''


          [SNMP TRAP: 6036 in CPQHLTH.MIB]'
        zProperties:
          zEventSeverity: 4
      cpqHe3FltTolFanDegraded:
        evaluation: 'The Fault Tolerant Fan condition has been set to degraded

          for the specified chassis and fan.

          '
        eventClassKey: cpqHe3FltTolFanDegraded
        example: The Fan Degraded on Chassis 2, Fan 2.
        sequence: 1
        transform: "evt.summary = \"The Fan Degraded on Chassis %d, Fan %d.\"  %(evt.cpqHeFltTolFanChassis,\
          \ evt.cpqHeFltTolFanIndex)\nsnmpindex = \"%d.%d\" % (evt.cpqHeFltTolFanChassis,\
          \ evt.cpqHeFltTolFanIndex)\nfor comp in device.getMonitoredComponents(type=\"\
          Fan\"):\n    if comp.snmpindex != snmpindex: continue\n    comp.status =\
          \ 3\n    evt.component = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n\
          \    txnCommit()\n    break\n"
      cpqHe3FltTolFanFailed:
        evaluation: 'The Fault Tolerant Fan condition has been set to failed

          for the specified chassis and fan.

          '
        eventClassKey: cpqHe3FltTolFanFailed
        example: The Fan Failed on Chassis 2, Fan 2.
        sequence: 1
        transform: "evt.summary = \"The Fan Failed on Chassis %d, Fan %d.\"  %(evt.cpqHeFltTolFanChassis,\
          \ evt.cpqHeFltTolFanIndex)\nsnmpindex = \"%d.%d\" % (evt.cpqHeFltTolFanChassis,\
          \ evt.cpqHeFltTolFanIndex)\nfor comp in device.getMonitoredComponents(type=\"\
          Fan\"):\n    if comp.snmpindex != snmpindex: continue\n    comp.status =\
          \ 4\n    evt.component = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n\
          \    txnCommit()\n    break\n"
      cpqHe3FltTolFanInserted:
        evaluation: 'A Fault Tolerant Fan has been inserted into the specified

          chassis and fan location.

          '
        eventClassKey: cpqHe3FltTolFanInserted
        example: The Fan Inserted on Chassis 2, Fan 2.
        sequence: 1
        transform: "for attr in evt.details._map:\n    if attr.startswith('cpqHeFltTolFan'):\n\
          \        if attr.startswith('cpqHeFltTolFanChassis'):\n            chassis=\
          \ getattr(evt, attr, '')\n        if attr.startswith('cpqHeFltTolFanIndex'):\n\
          \            fan = getattr(evt, attr, '')\n\n#evt.summary = \"The Fan Inserted\
          \ on Chassis %d, Fan %d.\"  %(evt.cpqHeFltTolFanChassis, evt.cpqHeFltTolFanIndex)\n\
          evt.summary = \"The Fan Inserted on Chassis %d, Fan %d.\"  %(chassis, fan)\n"
      cpqHe3FltTolFanRedundancyLost:
        evaluation: 'The Fault Tolerant Fans have lost redundancy for the

          specified chassis.

          '
        eventClassKey: cpqHe3FltTolFanRedundancyLost
        example: The Fans are no longer redundant on Chassis 2.
        sequence: 1
        transform: evt.summary = "The Fans are no longer redundant on Chassis %d."  %(evt.cpqHeFltTolFanChassis)
      cpqHe3FltTolFanRedundancyRestored:
        evaluation: 'The Fault Tolerant Fans have returned to a redundant state for

          the specified chassis.

          '
        eventClassKey: cpqHe3FltTolFanRedundancyRestored
        example: The Fans are now redundant on Chassis 2.
        sequence: 1
        transform: evt.summary = "The Fans are now redundant on Chassis %d."  %(evt.cpqHeFltTolFanChassis)
      cpqHe3FltTolFanRemoved:
        evaluation: 'A Fault Tolerant Fan has been removed from the specified

          chassis and fan location.

          '
        eventClassKey: cpqHe3FltTolFanRemoved
        example: The Fan Removed on Chassis 2, Fan 2.
        sequence: 1
        transform: "'''\ncpqHe3FltTolFanRemoved\t6039\ncpqHeFltTolFanChassis.0.1\t\
          0\ncpqHeFltTolFanIndex.0.1\t1\ncpqHoTrapFlags\t12\n'''\n\nfor attr in evt.details._map:\n\
          \    if attr.startswith('cpqHeFltTolFan'):\n        if attr.startswith('cpqHeFltTolFanChassis'):\n\
          \            chassis= getattr(evt, attr, '')\n        if attr.startswith('cpqHeFltTolFanIndex'):\n\
          \            fan = getattr(evt, attr, '')\n\n#evt.summary = \"The Fan Removed\
          \ on Chassis %d, Fan %d.\"  %(evt.cpqHeFltTolFanChassis, evt.cpqHeFltTolFanIndex)\n\
          evt.summary = \"The Fan Removed on Chassis %d, Fan %d.\"  %(chassis, fan)\n\
          #snmpindex = \"%d.%d\" % (evt.cpqHeFltTolFanChassis, fan)\nsnmpindex = \"\
          %d.%d\" % (chassis, evt.cpqHeFltTolFanIndex)\nfor comp in device.getMonitoredComponents(type=\"\
          Fan\"):\n    if comp.snmpindex != snmpindex: continue\n    comp.status =\
          \ 4\n    evt.component = comp.id\n    evt.severity = comp.statusSeverity(comp.status)\n\
          \    txnCommit()\n    break\n"
      cpqHe3ThermalCpuFanFailed:
        evaluation: 'The CPU fan status has been set to failed.

          A processor fan is not operating normally.  The server will be

          shutdown.

          '
        eventClassKey: cpqHe3ThermalCpuFanFailed
        example: CPU fan has failed.  Server will be shutdown.
        sequence: 1
        transform: evt.summary = "CPU fan has failed.  Server will be shutdown."
      cpqHe3ThermalCpuFanOk:
        evaluation: 'The CPU fan status has been set to ok.

          Any previously non-operational processor fans have returned

          to normal operation.

          '
        eventClassKey: cpqHe3ThermalCpuFanOk
        example: CPU fan is now OK.
        sequence: 1
        transform: evt.summary = "CPU fan is now OK."
      cpqHe3ThermalSystemFanDegraded:
        evaluation: 'The system fan status has been set to degraded.

          An optional system fan is not operating normally.

          '
        eventClassKey: cpqHe3ThermalSystemFanDegraded
        example: An optional fan is not operating normally.
        sequence: 1
        transform: evt.summary = "An optional fan is not operating normally."
      cpqHe3ThermalSystemFanFailed:
        evaluation: 'The system fan status has been set to failed.

          A required system fan is not operating normally.  The system

          will be shutdown if the cpqHeThermalDegradedAction variable

          is set to shutdown(3).

          '
        eventClassKey: cpqHe3ThermalSystemFanFailed
        example: Required fan not operating normally.  Shutdown may occur.
        sequence: 1
        transform: evt.summary = "Required fan not operating normally.  Shutdown may
          occur."
      cpqHe3ThermalSystemFanOk:
        evaluation: 'The system fan status has been set to ok.

          Any previously non-operational system fans have returned to

          normal operation.

          '
        eventClassKey: cpqHe3ThermalSystemFanOk
        example: System fan has returned to normal operation.
        sequence: 1
        transform: evt.summary = "System fan has returned to normal operation."
      cpqHeThermalCpuFanFailed:
        evaluation: 'The CPU fan status has been set to failed.

          A processor fan is not operating normally.  The server will be

          shutdown.

          '
        eventClassKey: cpqHeThermalCpuFanFailed
        example: CPU fan has failed.  Server will be shutdown.
        sequence: 1
        transform: evt.summary = "CPU fan has failed.  Server will be shutdown."
      cpqHeThermalCpuFanOk:
        evaluation: 'The CPU fan status has been set to ok.

          Any previously non-operational processor fans have returned

          to normal operation.

          '
        eventClassKey: cpqHeThermalCpuFanOk
        example: CPU fan is now OK.
        sequence: 1
        transform: evt.summary = "CPU fan is now OK."
      cpqHeThermalSystemFanDegraded:
        evaluation: 'The system fan status has been set to degraded.

          An optional system fan is not operating normally.

          '
        eventClassKey: cpqHeThermalSystemFanDegraded
        example: An optional fan is not operating normally.
        sequence: 1
        transform: evt.summary = "An optional fan is not operating normally."
      cpqHeThermalSystemFanFailed:
        evaluation: 'The system fan status has been set to failed.

          A required system fan is not operating normally.  The system

          will be shutdown if the cpqHeThermalDegradedAction variable

          is set to shutdown(3).

          '
        eventClassKey: cpqHeThermalSystemFanFailed
        example: Required fan not operating normally.  Shutdown may occur.
        sequence: 1
        transform: evt.summary = "Required fan not operating normally.  Shutdown may
          occur."
      cpqHeThermalSystemFanOk:
        evaluation: 'The system fan status has been set to ok.

          Any previously non-operational system fans have returned to

          normal operation.

          '
        eventClassKey: cpqHeThermalSystemFanOk
        example: System fan has returned to normal operation.
        sequence: 1
        transform: evt.summary = "System fan has returned to normal operation."
      cpqasm2_4118:
        eventClassKey: cpqasm2_4118
        example: 'A required processor fan (fan #1) has failed.  Environment Abnormality
          Auto Shutdown

          (EAAS) initiated.'
        zProperties:
          zEventSeverity: 4
    transform: "try:\n    comp = evt.component.name()\nexcept:\n    comp = evt.component\n\
      \nmsg = 'Speed on {} is {} RPM'.format(comp, evt.current)\nevt.message = msg\n\
      evt.summary = msg\n"
  /Events/Heartbeat:
    mappings:
      MARK:
        eventClassKey: MARK
        example: -- MARK --
        regex: -- MARK --
      defaultmapping:
        eventClassKey: defaultmapping
        example: -- MARK --
        regex: -- MARK --
        sequence: 5
      evtsys:
        eventClassKey: evtsys
        regex: -- MARK --
        sequence: 1
  /Events/Ignore:
    mappings:
      CROND:
        eventClassKey: CROND
        example: (root) CMD (run-parts /etc/cron.hourly)
        regex: \(root\) CMD \(run-parts /etc/cron.\S+\)
      RadOncNS5XP:
        eventClassKey: RadOncNS5XP
        rule: evt.priority>4
      Server Agents_1126:
        eventClassKey: Server Agents_1126
        example: 'System Information Agent: Health: The Fault

          Tolerant Power Supply Sub-system has lost redundancy.  Restore power

          or replace any failed or missing power supplies.


          Chassis: ''0''


          [SNMP TRAP: 6032 in CPQHLTH.MIB]'
      anacron:
        eventClassKey: anacron
        example: Updated timestamp for job `cron.daily' to 2005-12-13
        regex: Updated timestamp for job
      defaultmapping:
        eventClassKey: defaultmapping
        example: message repeated 2 times
        regex: message repeated \d+ times
        sequence: 6
      defaultmapping_local7:
        eventClassKey: defaultmapping
        rule: getattr(evt, 'facility', None)=="local7" and getattr(evt, 'priority',
          0)>4
        sequence: 3
      kernel:
        eventClassKey: kernel
        rule: evt.priority>4
        sequence: 1
      kernel_capture_card:
        eventClassKey: kernel
        example: Setting full NTSC height
        regex: 'Setting full NTSC height|Hpsc: 0x00001|ivtv: Got DMA-done'
      sendmail:
        eventClassKey: sendmail
        rule: evt.priority>5
      syslog:
        eventClassKey: syslog
        example: 'Time update: 20051208 18:13:13'
        regex: 'Time update:'
    zProperties:
      zEventAction: drop
  /Events/Ignore/Win:
    mappings:
      Autoenrollment_13:
        eventClassKey: Autoenrollment_13
        example: Automatic certificate enrollment for local system failed to enroll
          for one Domain Controller certificate (0x80070005). Access is denied.
      ClusSvc_1123:
        eventClassKey: ClusSvc_1123
        example: The node lost communication with cluster node 'HOSTNAME' on network
          'private'.
      DirXML Remote Loader_1:
        eventClassKey: DirXML Remote Loader_1
        example: 'Driver : \ID_VAULT\org\services\DirXML\Driver-Set\NewADDriver

          Thread : Publisher Channel

          Object : CN=Username,CN=Users,DC=domain,DC=com

          Message : Code(-9039) Element &lt;parent> does not have a valid association.<application>DirXML</application>

          <module>NewADDriver</module>

          <object-dn>CN=Username,CN=Users,DC=domain,DC=com (org\Users\username)</object-dn>

          <component>Publisher</component>'
      FileMaker Server 7_94:
        eventClassKey: FileMaker Server 7_94
        example: Client "CLIENTNAME" opening database "DATABASENAME" as "USERNAME".
      Kerberos_3:
        eventClassKey: Kerberos_3
        example: 'A Kerberos Error Message was received: on logon session Client Time:
          Server Time: 14:57:1.0000 1/24/2006 Z Error Code: 0xd KDC_ERR_BADOPTION
          Extended Error: 0xc00000bb KLIN(0) Client Realm: Client Name: Server Realm:
          DOMAIN Server Name: host/dc4.mydomain.com Target Name: host/dc4.mydomain.com@DOMAIN
          Error Text: File: 9 Line: ae0 Error Data is in record data.'
      Kerberos_4:
        eventClassKey: Kerberos_4
        example: The kerberos client received a KRB_AP_ERR_MODIFIED error from the
          server SERVERNAME$.  The target name used was cifs/hostname.mydomain.com.
          This indicates that the password used to encrypt the kerberos service ticket
          is different than that on the target server. Commonly, this is due to identically
          named  machine accounts in the target realm (DOMAIN), and the client realm.   Please
          contact your system administrator.
      MSExchangeDSAccess_2110:
        eventClassKey: MSExchangeDSAccess_2110
        example: Process STORE.EXE (PID=2456). Could not bind to DS server smmhsdc1.mhs.med,
          error 55 at port 389.   For more information, click http://www.microsoft.com/contentredirect.asp.
      MSExchangeDSAccess_2115:
        eventClassKey: MSExchangeDSAccess_2115
        example: Process INETINFO.EXE (PID=1328). DSAccess needs to close a connection
          to the Domain Controller dc1.domain.com due to error 0x80040920.   For more
          information, click http://www.microsoft.com/contentredirect.asp.
      MSExchangeIS Mailbox Store_1173:
        eventClassKey: MSExchangeIS Mailbox Store_1173
        example: Error 0x6bb deleting unused restricted view from folder 1-C8EA27F
          on database "First Storage Group\Mailbox Store (MHSMAIL1)". Microsoft Exchange
          Information Store will try to delete the view again at the next maintenance
          interval.   For more information, click http://www.microsoft.com/contentredirect.asp.
      MSExchangeTransport_3005:
        eventClassKey: MSExchangeTransport_3005
        example: 'A non-delivery report with a status code of 4.4.6 was generated
          for recipient rfc822;wagner@vassurg.com (Message-ID <PFEHIDJJJCDMBAJGMEKGLHHEOEAA.d.peacockix@knsacs.com>).
          Cause: The maximum hop count was exceeded for this message. This non-delivery
          report can also be caused if a looping condition exists between sending
          and receiving servers that are not in the same Exchange organization. In
          this situation, the message bounces back and forth until the hop count is
          exceeded. A configuration error in the e-mail system can also cause the
          message to bounce between two servers or to be forwarded between two recipients.
          Solution: The maximum hop count is a property set on each virtual server
          and you can manually override it. The default maximum hop count is 15. Also,
          check for any situations that might cause loops between servers.'
      MetaframeEvents_1106:
        eventClassKey: MetaframeEvents_1106
        example: 'Client printer auto-creation failed.  The driver could not be installed.
          Possible reasons for the failure: The driver is not in the list of drivers
          on the server. The driver cannot be located. The driver has not been mapped.
          Client name: (DOMAIN-client) Printer: (Client\DOMAIN-client#\Kyocera Mita
          KM-1650 KX - 10.1.2.3)  Printer driver: (Kyocera Mita KM-1650 KX)'
      NETLOGON_5722:
        eventClassKey: NETLOGON_5722
      NETLOGON_5723:
        eventClassKey: NETLOGON_5723
        example: 'The session setup from computer ''PAY-DOC1-D785'' failed because
          the security database does not contain a trust account ''PAY-DOC1-D785$''
          referenced by the specified computer.    USER ACTION   If this is the first
          occurrence of this event for the specified computer and account, this may
          be a transient issue that doesn''t require any action at this time. Otherwise,
          the following steps may be taken to resolve this problem:    If ''PAY-DOC1-D785$''
          is a legitimate machine account for the computer ''PAY-DOC1-D785'', then
          ''PAY-DOC1-D785'' should be rejoined to the domain.    If ''PAY-DOC1-D785$''
          is a legitimate interdomain trust account, then the trust should be recreated.    Otherwise,
          assuming that ''PAY-DOC1-D785$'' is not a legitimate account, the following
          action should be taken on ''PAY-DOC1-D785'':    If ''PAY-DOC1-D785'' is
          a Domain Controller, then the trust associated with ''PAY-DOC1-D785$'' should
          be deleted.    If ''PAY-DOC1-D785'' is not a Domain Controller, it should
          be disjoin'
      NETLOGON_5805:
        eventClassKey: NETLOGON_5805
        example: 'The session setup from the computer HLTHMDXTRAIN failed to authenticate.
          The following error occurred: %%5'
      NETLOGON_5807:
        eventClassKey: NETLOGON_5807
        example: During the past 4.00 hours there have been 12 connections to this
          Domain Controller from client machines whose IP addresses don't map to any
          of the existing sites in the enterprise. Those clients, therefore, have
          undefined sites and may connect to any Domain Controller including those
          that are in far distant locations from the clients. A client's site is determined
          by the mapping of its subnet to one of the existing sites. To move the above
          clients to one of the sites, please consider creating subnet object(s) covering
          the above IP addresses with mapping to one of the existing sites. The names
          and IP addresses of the clients in question have been logged on this computer
          in the following log file 'SystemRoot\debug\netlogon.log' and, potentially,
          in the log file 'SystemRoot\debug\netlogon.bak' created if the former log
          becomes full. The log(s) may contain additional unrelated debugging information.
          To filter out the needed information, please search for lines which
      Print_2:
        eventClassKey: Print_2
        example: NT AUTHORITY\SYSTEM Printer Client\DOMAIN-client#\Color Printer -
          10.1.2.3 was created.
      Print_20:
        eventClassKey: Print_20
        example: Printer Driver HP LaserJet 4000 Series PCL for Windows NT x86 Version-3
          was added or updated. Files:- UNIDRV.DLL, UNIDRVUI.DLL, HPLJ4000.GPD, UNIDRV.HLP,
          UNIRES.DLL, PCL5ERES.DLL, HPC4500U.DLL, TTFSUB.GPD, hplj5si.hlp, STDNAMES.GPD.
      Print_3:
        eventClassKey: Print_3
        example: NT AUTHORITY\SYSTEM  Printer Client\DOMAIN-client#\HP Laserjet 2100
          PCL 6 - 10.1.2.3 was deleted.
      Print_4:
        eventClassKey: Print_4
        example: NT AUTHORITY\SYSTEM  Printer Client\DOMAIN-client#\HP Laserjet 2100
          PCL 6 - 10.1.2.3 is pending deletion.
      Print_8:
        eventClassKey: Print_8
        example: NT AUTHORITY\SYSTEM  Printer Client\DOMAIN-client#\HP Laserjet 2100
          PCL 6 - 10.1.2.3 was purged.
      Remote Storage_3037:
        eventClassKey: Remote Storage_3037
        example: Remote Storage failed to recall file <\\AMICASARCH\F$\DICOMImageArchive\2005\06\25\1.3.12.2.1107.5.4.4.1075.5.0.2350209711421538.zip>.
          User has hit the runaway recall limit. (0x81060016)
      Removable Storage Service_102:
        eventClassKey: Removable Storage Service_102
        example: Unable to register COM class objects.
      Symantec AntiVirus_6:
        eventClassKey: Symantec AntiVirus_6
        example: Could not scan 492 files inside D:\Symantec SMTP 4.x\Symantec_Mail_Security_for_SMTP_4.1.9.35_Win_Sol.zip
          due to extraction errors encountered by the Decomposer Engines.
      Symantec Mail Security for SMTP_2:
        eventClassKey: Symantec Mail Security for SMTP_2
        example: Error 0 receiving data from remote host. (80.69.58.237)
      TermServDevices_1106:
        eventClassKey: TermServDevices_1106
        example: The printer could not be installed.
      TermServDevices_1111:
        eventClassKey: TermServDevices_1111
        example: Driver ActiveTouch Document Loader required for printer ActiveTouch
          Document Loader is unknown. Contact the administrator to install the driver
          before you log in again.
      dirxml remote loader_1:
        eventClassKey: dirxml remote loader_1
        example: '%256: \ID_VAULT\org\services\DirXML\Driver-Set\NewADDriver %257:
          Subscriber Channel %258: \ID_VAULT\org\Users\Groups\AD\MetaFrame Users %259:
          <ldap-err ldap-rc="68" ldap-rc-name="LDAP_ALREADY_EXISTS"> <client-err ldap-rc="68"
          ldap-rc-name="LDAP_ALREADY_EXISTS">Already Exists</client-err> <server-err>00000562:
          UpdErr: DSID-031A0F4F, problem 6005 (ENTRY_EXISTS), data 0 </server-err>
          <server-err-ex win32-rc="1378"/> </ldap-err>'
      excdo_8206:
        eventClassKey: excdo_8206
        example: Calendaring agent failed with error code 0x80070057 while saving
          appointment.   For more information, click http://www.microsoft.com/contentredirect.asp.
      excdo_8230:
        eventClassKey: excdo_8230
        example: 'An inconsistency was detected in username@domain.com: /Calendar/OR
          9 Progress Meeting.EML.  The calendar is being repaired.  If other errors
          occur with this calendar, please view the calendar using Microsoft Outlook
          Web Access.  If a problem persists, please recreate the calendar or the
          containing mailbox.   For more information, click http://www.microsoft.com/contentredirect.asp.'
      excdo_8263:
        eventClassKey: excdo_8263
        example: The recurring appointment expansion in mailbox O'Connor, Sr Aine
          has taken too long. Some recurring appointment instances may not be visible
          at this time. To ensure that the calendar view is correct, please refresh
          the calendar view in Microsoft Outlook Web Access.   For more information,
          click http://www.microsoft.com/contentredirect.asp.
      general_1173:
        eventClassKey: general_1173
        example: 'NT AUTHORITY\ANONYMOUS LOGON  Internal event: Active Directory has
          encountered the following exception and associated parameters.    Exception:
          e0010004  Parameter: 0    Additional Data  Error value: -1603  Internal
          ID: 2050344'
      msexchangeactivesyncnotify_10306:
        eventClassKey: msexchangeactivesyncnotify_10306
        example: OMA Categorizer dropped the message with message ID '<c2b7606a703bbd44940f3cd8462068f5-b3c0e6d@OMA>',
          Recipient 'username@domain.com'.  The global notifications to user specified
          SMTP addresses is disabled.
      msexchangeis_9554:
        eventClassKey: msexchangeis_9554
        example: 'Unable to update Mailbox SD in the DS. Mailbox Guid: 5e727f25-357b-4cd9-9714-d7159348b196.
          Error Code 0x8004010f   For more information, click http://www.microsoft.com/contentredirect.asp.'
      msexchangeis_9646:
        eventClassKey: msexchangeis_9646
        example: Mapi session "/o=My Organization/ou=DOMAIN/cn=Recipients/cn=username"  exceeded
          the maximum of 32 objects of type "session".   For more information, click
          http://www.microsoft.com/contentredirect.asp.
      msexchangesa_5008:
        eventClassKey: msexchangesa_5008
        example: The message tracking log file G:\Program Files\Exchsrvr\MHSMAILlog\20060120.log
          was deleted.   For more information, click http://www.microsoft.com/contentredirect.asp.
      msexchangesa_9040:
        eventClassKey: msexchangesa_9040
        example: NSPI Proxy encountered an error while receiving a packet. The target
          Domain Controller or the network or a client might be down. The winsock
          subsystem returned the error:[0x2746]. The circuit that received this error
          is being closed.   For more information, click http://www.microsoft.com/contentredirect.asp.
      msexchangesa_9234:
        eventClassKey: msexchangesa_9234
        example: Referral Interface was not able to find an msExchExchangeServer object
          with legacyExchangeDN '/o=My Organization/ou=DOMAIN/cn=Configuration/cn=Servers/cn=MAIL'  in
          the Active Directory.   For more information, click http://www.microsoft.com/contentredirect.asp.
      msexchangetransport_327:
        eventClassKey: msexchangetransport_327
        example: 'The following call : EcLocallyDeliverMsg to the store failed. Error
          code : -2147024891 (Message-ID <C2B7606A703BBD44940F3CD8462068F506E0DB5D@MAIL1.domain.com>
          will be NDR''d).  MDB : c423a872-af66-4188-9417-867ecd674fce. FID : b-1549FB.
          MID : 1-6E0DB5D. File : .   For more information, click http://www.microsoft.com/contentredirect.asp.'
      norton antivirus_6:
        eventClassKey: norton antivirus_6
        example: Scan could not access path C:\pagefile.sys
      replication_1232:
        eventClassKey: replication_1232
        example: 'NT AUTHORITY\ANONYMOUS LOGON  Active Directory attempted to perform
          a remote procedure call (RPC) to the following server.  The call timed out
          and was cancelled.    Server: 56fedf38-c8c0-4328-a453-a12a8b9c08ea._msdcs.mhs.med  Call
          Timeout (Mins): 5  Thread ID: 408    Additional Data  Internal ID: 5001047'
      service_102:
        eventClassKey: service_102
        example: Unable to register COM class objects.
      smtp_2:
        eventClassKey: smtp_2
      smtpsvc_5000:
        eventClassKey: smtpsvc_5000
        example: The message file 'E:\Program Files\Exchsrvr\Mailroot\vsi 1\Queue\NTFS_609ee2d701c5f09d00099d1d.EML'  in
          the queue directory 'E:\Program Files\Exchsrvr\Mailroot\vsi 1\Queue' is
          corrupt and has not been enumerated.
      store_1025:
        eventClassKey: store_1025
        example: 'An error occurred on database "First Storage Group\Public Folder
          Store (MHSMAIL1)".  Function name or description of problem: Restrict/SetSearchCriteria
          Error: -1102 Warning: fail to apply search optimization to folder (FID 1-3B3C7)   Retrying
          without optimization.   For more information, click http://www.microsoft.com/contentredirect.asp.'
      store_1173:
        eventClassKey: store_1173
        example: Error 0x6bb deleting unused restricted view from folder 1-C604C2D
          on database "First Storage Group\Mailbox Store (MHSMAIL1)". Microsoft Exchange
          Information Store will try to delete the view again at the next maintenance
          interval. For more information, click http://www.microsoft.com/contentredirect.asp.
      store_1211:
        eventClassKey: store_1211
        example: User username@domain.com used ROWLIST_REPLACE to delete all rules
          in folder 1-8B9EDD6. 12 rules got deleted and 11 rules were added.   For
          more information, click http://www.microsoft.com/contentredirect.asp.
  /Events/IronPort:
    mappings:
      connectivityFailure:
        eventClassKey: connectivityFailure
        example: snmp trap connectivityFailure
        transform: "for attr in evt.details._map:\n    if attr.startswith('connectionURL'):\n\
          \        url= getattr(evt, attr, '')\n        break\n\nevt.message = 'The\
          \ URL {} could not be reached'.format(url)\nevt.summary ='An URL could not\
          \ be reached'"
      keyExpiration:
        eventClassKey: keyExpiration
        example: snmp trap keyExpiration
        transform: 'evt.summary = ''The Feature Key {} is pending expiration or has
          expired.''.format(evt.keyDescription)

          evt.message = ''The Feature Key {} is pending expiration or has expired.''.format(evt.keyDescription)'
      updateFailure:
        eventClassKey: updateFailure
        example: snmp trap updateFailure
        transform: 'evt.summary = ''A service failed to update properly''

          service_name = getattr(evt, updateServiceName, '''')

          evt.message = ''The update of {}.''.format(service_name)'
  /Events/IronPort/asyncOSMail.2.0.6:
    mappings:
      asyncOSMail.2.0.6:
        eventClassKey: asyncOSMail.2.0.6
        example: snmp trap asyncOSMail.2.0.6
  /Events/IronPort/asyncOSMail.2.0.8:
    mappings:
      asyncOSMail.2.0.8:
        eventClassKey: asyncOSMail.2.0.8
        example: snmp trap asyncOSMail.2.0.8
  /Events/Ironport:
    mappings:
      connectivityFailure:
        eventClassKey: connectivityFailure
        example: snmp trap connectivityFailure
        sequence: 19
        transform: "for attr in evt.details._map:\n    if attr.startswith('connectionURL'):\n\
          \        url= getattr(evt, attr, '')\n        break\n\nevt.message = 'The\
          \ URL {} could not be reached'.format(url)\nevt.summary ='An URL could not\
          \ be reached'\n\n\n"
      keyExpiration:
        eventClassKey: keyExpiration
        example: snmp trap keyExpiration
        sequence: 19
        transform: 'evt.summary = ''The Feature Key {} is pending expiration or has
          expired.''.format(evt.keyDescription)

          evt.message = ''The Feature Key {} is pending expiration or has expired.''.format(evt.keyDescription)

          '
      updateFailure:
        eventClassKey: updateFailure
        example: snmp trap updateFailure
        sequence: 20
        transform: 'evt.summary = ''A service failed to update properly''

          service_name = getattr(evt, updateServiceName, '''')

          evt.message = ''The update of {}.''.format(service_name)

          '
  /Events/Ironport/asyncOSMail.2.0.6:
    mappings:
      asyncOSMail.2.0.6:
        eventClassKey: asyncOSMail.2.0.6
        example: snmp trap asyncOSMail.2.0.6
        sequence: 7
  /Events/Ironport/asyncOSMail.2.0.8:
    mappings:
      asyncOSMail.2.0.8:
        eventClassKey: asyncOSMail.2.0.8
        example: snmp trap asyncOSMail.2.0.8
        sequence: 7
  /Events/Kubernetes: {}
  /Events/Kubernetes/Conditions:
    mappings:
      kubernetes-condition-node:
        eventClassKey: kubernetes-condition-node
        sequence: 99
      kubernetes-condition-pod:
        eventClassKey: kubernetes-condition-pod
        sequence: 99
  /Events/Kubernetes/Error:
    mappings:
      kubernetes-error:
        eventClassKey: kubernetes-error
        sequence: 1010
  /Events/Kubernetes/Event:
    mappings:
      kubernetes-event:
        eventClassKey: kubernetes-event
        sequence: 1010
  /Events/Kubernetes/Status:
    mappings:
      K8sClusterRemodel:
        eventClassKey: k8sClusterRemodel
        example: Kubernetes remodel for added services, deployments, namespaces, and
          nodes.
        sequence: 10
        transform: "if device:\n    from ZenPacks.zenoss.Kubernetes.actions import\
          \ schedule_remodel\n    schedule_remodel(device, evt)"
  /Events/LDAP: {}
  /Events/LDAP/LDAPExecutionError: {}
  /Events/LDAP/LDAPExecutionTimeExceeded: {}
  /Events/LDAP/LDAPRBRNOTSyncError: {}
  /Events/License:
    mappings:
      exchange_292:
        eventClassKey: exchange_292
        example: Virus definition and content license for Symantec Mail Security for
          Microsoft Exchange on server MHSMAILCL1 will expire on 3/14/2006.
        regex: Virus definition and content license for Symantec Mail Security for
          Microsoft Exchange on server MHSMAILCL1 will expire on (?P<eventKey>\S+).
  /Events/Mail:
    mappings:
      asyncOSMail.2.0.10:
        eventClassKey: asyncOSMail.2.0.10
        example: snmp trap asyncOSMail.2.0.10
        sequence: 7
        zProperties:
          zEventSeverity: 0
  /Events/Mail/MailQueueNotEmpty: {}
  /Events/Mail/MailTraversalError: {}
  /Events/Memory: {}
  /Events/Memory/BufCache: {}
  /Events/Memory/Swap:
    transform: "isFirewall=False\nisStaging=False\nisProduction=False\nisBIGIP=False\n\
      \nsystems=device.getSystemNames()\n\nif len(systems) > 0:\n    for system in\
      \ systems:\n        if system.find(\"FW\") > -1:\n            isFirewall=True\n\
      \        if system.find(\"BIP\") > -1:\n            isBIGIP=True\n        if\
      \ system.find(\"CS\") > -1 or system.find(\"CO\") > -1  or system.find(\"CA\"\
      ) > -1  or system.find(\"CT\") > -1  or system.find(\"CD\") > -1:\n        \
      \    isStaging=True\n        if system.find(\"CC\") > -1 or system.find(\"AC\"\
      ) > -1  or system.find(\"SC\") > -1  or system.find(\"KC\") > -1  or system.find(\"\
      CP\") > -1 or system.find(\"Legacy Production\") > -1:\n            isProduction=True\n\
      \nmparts=evt.message.split(' ')\n\nif len(mparts) > 7:\n    availSwap=round(float(mparts[7]),2)\n\
      \    totalSwap=round((float(device.os.totalSwap)/1024),2)\n    percused=100-round((availSwap/totalSwap)*100,2)\n\
      \    evt.summary=\"%s%% swap used\" %percused\n\n    if isStaging:\n       \
      \ if 30 < percused < 50:\n            evt.severity=3\n        elif 50 < percused\
      \ < 70:\n            evt.severity=4\n        elif 70 < percused < 101:\n   \
      \         evt.severity=5\n        else:\n            evt.severity=0\n\n    if\
      \ isProduction:\n        if 10 < percused < 30:\n            evt.severity=3\n\
      \        elif 30 < percused < 50:\n            evt.severity=4\n        elif\
      \ 50 < percused < 101:\n            evt.severity=5\n        else:\n        \
      \    evt.severity=0\n\nif isFirewall or isBIGIP:\n    evt.severity=0\n"
  /Events/Net:
    mappings:
      C4K_EBM-4-HOSTFLAPPING:
        eventClassKey: C4K_EBM-4-HOSTFLAPPING
        example: Host 00:12:F0:77:75:83 in vlan 5 is flapping between port Fa3/5 and
          port Fa3/2
        zProperties:
          zEventSeverity: 3
      CDP-4-DUPLEX_MISMATCH:
        eventClassKey: CDP-4-DUPLEX_MISMATCH
        example: duplex mismatch discovered on FastEthernet0/1 (not half duplex),
          with COMPUTER FastEthernet0 (half duplex).
        zProperties:
          zEventSeverity: 3
      Microsoft ISA Server Control_15104:
        eventClassKey: Microsoft ISA Server Control_15104
        example: ISA Server detected a well-known port scan attack from Internet Protocol
          (IP) address 225.230.230.234. A well-known port is any port in the range
          of 1-2048. For more information about this event, see ISA Server Help.
      Microsoft ISA Server Control_15105:
        eventClassKey: Microsoft ISA Server Control_15105
        example: 'ISA Server detected an all port scan attack from Internet Protocol
          (IP) address 195.56.77.3.


          For more information about this event, see ISA Server Help.'
        zProperties:
          zEventSeverity: 3
      SNMP-3-CPUHOG:
        eventClassKey: SNMP-3-CPUHOG
        example: Processing GetBulk of ciscoFlashPartitionEntry.5.1.1
        zProperties:
          zEventSeverity: 2
      SYS-3-CPUHOG:
        eventClassKey: SYS-3-CPUHOG
        example: Task ran for 7797 msec (0/0), process = IP SNMP, PC = 80235E3C.
        zProperties:
          zEventSeverity: 2
      defaultmapping:
        eventClassKey: defaultmapping
        example: -Traceback= 80235E40 802D3EB4 80243CA8
        rule: getattr(evt,'facility',False)=='local7' and evt.summary.find('Traceback')>-1
        sequence: 4
        zProperties:
          zEventSeverity: 2
  /Events/Net/BigIP: {}
  /Events/Net/BigIP/ASMRequest:
    mappings:
      bigipAsmRequestBlocked:
        eventClassKey: bigipAsmRequestBlocked
        example: snmp trap bigipAsmRequestBlocked
        sequence: 7
      bigipAsmRequestViolation:
        eventClassKey: bigipAsmRequestViolation
        example: snmp trap bigipAsmRequestViolation
        sequence: 7
  /Events/Net/BigIP/Active:
    mappings:
      bigipActive:
        eventClassKey: bigipActive
        example: snmp trap bigipActive
        sequence: 7
  /Events/Net/BigIP/AggrReaperStateChange:
    mappings:
      bigipAggrReaperStateChange:
        eventClassKey: bigipAggrReaperStateChange
        example: snmp trap bigipAggrReaperStateChange
        sequence: 7
    zProperties:
      zEventSeverity: 5
  /Events/Net/BigIP/AuthFailed:
    mappings:
      bigipAuthFailed:
        eventClassKey: bigipAuthFailed
        example: snmp trap bigipAuthFailed
        sequence: 7
    zProperties:
      zEventSeverity: 2
  /Events/Net/BigIP/ConfigLoaded:
    mappings:
      bigipConfigLoaded:
        eventClassKey: bigipConfigLoaded
        example: snmp trap bigipConfigLoaded
        sequence: 7
    zProperties:
      zEventSeverity: 2
  /Events/Net/BigIP/ExternalLink:
    mappings:
      bigipExternalLinkChange:
        eventClassKey: bigipExternalLinkChange
        example: snmp trap bigipExternalLinkChange
        sequence: 7
  /Events/Net/BigIP/FeatureFailed:
    mappings:
      bigipFeatureFailed:
        eventClassKey: bigipFeatureFailed
        example: snmp trap bigipFeatureFailed
        sequence: 7
    zProperties:
      zEventSeverity: 5
  /Events/Net/BigIP/FeatureOnline:
    mappings:
      bigipFeatureOnline:
        eventClassKey: bigipFeatureOnline
        example: snmp trap bigipFeatureOnline
        sequence: 7
  /Events/Net/BigIP/GTMLinkDown:
    mappings:
      bigipGtmLinkNotAvail:
        eventClassKey: bigipGtmLinkNotAvail
        example: snmp trap bigipGtmLinkNotAvail
        sequence: 7
    transform: 'evt.summary = evt.bigipNotifyObjMsg

      evt.message = evt.bigipNotifyObjMsg

      '
  /Events/Net/BigIP/NetLinkDown:
    mappings:
      bigipNetLinkDown:
        eventClassKey: bigipNetLinkDown
        example: snmp trap bigipNetLinkDown
        sequence: 7
    zProperties:
      zEventSeverity: 5
  /Events/Net/BigIP/NodeDown:
    mappings:
      bigipNodeDown:
        eventClassKey: bigipNodeDown
        example: snmp trap bigipNodeDown
        sequence: 7
        transform: evt._action = "drop"
    zProperties:
      zEventSeverity: 5
  /Events/Net/BigIP/NodeUp:
    mappings:
      bigipNodeUp:
        eventClassKey: bigipNodeUp
        example: snmp trap bigipNodeUp
        sequence: 7
        transform: evt._action = "drop"
    zProperties:
      zEventClearClasses:
      - /Net/BigIP/NodeDown
      zEventSeverity: 0
  /Events/Net/BigIP/ServiceDown:
    mappings:
      bigipServiceDown:
        eventClassKey: bigipServiceDown
        example: snmp trap bigipServiceDown
        sequence: 7
        transform: evt._action = "drop"
    zProperties:
      zEventSeverity: 5
  /Events/Net/BigIP/ServiceUp:
    mappings:
      bigipServiceUp:
        eventClassKey: bigipServiceUp
        example: snmp trap bigipServiceUp
        sequence: 7
        transform: evt._action = "drop"
    zProperties:
      zEventClearClasses:
      - /Net/BigIP/ServiceDown
      zEventSeverity: 0
  /Events/Net/BigIP/StandBy:
    mappings:
      bigipStandby:
        eventClassKey: bigipStandby
        example: snmp trap bigipStandby
        sequence: 7
  /Events/Net/Cisco:
    mappings:
      pethPsePortOnOffNotification:
        eventClassKey: pethPsePortOnOffNotification
        example: snmp trap pethPsePortOnOffNotification
        sequence: 1002
        zProperties:
          zEventSeverity: 2
      tcpConnectionClose:
        eventClassKey: tcpConnectionClose
        example: snmp trap tcpConnectionClose
        sequence: 1002
        zProperties:
          zEventSeverity: 2
  /Events/Net/Conflict:
    mappings:
      Dhcp_1005:
        evaluation: IP Address is already in use on network - Duplicate Ips
        eventClassKey: Dhcp_1005
      NetBT_4319:
        eventClassKey: NetBT_4319
        example: A duplicate name has been detected on the TCP network. The IP address
          of the machine that sent the message is in the data. Use nbtstat -n in a
          command window to see which name is in the Conflict state.
        zProperties:
          zEventSeverity: 4
  /Events/Net/Dhcp:
    mappings:
      DhcpServer_1020:
        eventClassKey: DhcpServer_1020
        example: Scope, 10.120.75.0, is 83 percent full with only 31 IP addresses
          remaining.
        zProperties:
          zEventSeverity: 2
      DhcpServer_1041:
        eventClassKey: DhcpServer_1041
        example: "The DHCP service is not servicing any clients because none of \n\
          the active network interfaces have statically configured IP \naddresses,\
          \ or there are no active interfaces."
        zProperties:
          zEventSeverity: 3
  /Events/Net/Dhcp/Ack:
    mappings:
      udhcpd:
        eventClassKey: udhcpd
        example: sending ACK of 10.2.1.100 to 00:0d:93:7e:96:7f
        regex: sending ACK of (?P<eventKey>\S+) to (?P<macaddress>\S+)
    zProperties:
      zEventClearClasses:
      - /Net/Dhcp/Request
  /Events/Net/Dhcp/Inform: {}
  /Events/Net/Dhcp/Obtained:
    mappings:
      udhcpc:
        eventClassKey: udhcpc
        example: Lease of 68.33.51.29 obtained, lease time 343822
        regex: Lease of (?P<eventKey>\S+) obtained, lease time (?P<leaseTime>\d+)
        sequence: 1
  /Events/Net/Dhcp/Request:
    mappings:
      udhcpd:
        eventClassKey: udhcpd
        example: received REQUEST for 10.2.1.100 from 00:0d:93:7e:96:7f
        regex: received REQUEST for (?P<eventKey>\S+) from (?P<macaddress>\S+)
        sequence: 1
  /Events/Net/Fibre:
    mappings:
      connUnitPortStatusChange:
        eventClassKey: connUnitPortStatusChange
        example: snmp trap connUnitPortStatusChange
        transform: "for attr in evt.details._map:\n    if attr.startswith('connUnitPortName'):\n\
          \        comp = getattr(evt, attr, '')\n        break\n\nevt.component =\
          \ comp\nevt.summary = 'The overall status of the connectivity unit {} has\
          \ changed.'.format(comp)\nevt.message = 'The overall status of the connectivity\
          \ unit {} has changed.'.format(comp)\n"
      defaultmapping:
        eventClassKey: defaultmapping
        regex: snmp trap enterprises.1588.2.1.1.[\d]+.3
        sequence: 18
        transform: "# Only valid for swFCPortScn (swTrapsV2 3), to extend to other\
          \ trap types\n# swFCPortOpStatus, swFCPortIndex, swFCPortName, swSsn, swFCPortFlag,\
          \ swGroupName,\n# swGroupType,\tswGroupMemPos\n\nportStatus = ['unknown',\
          \ 'online', 'offline', 'testing', 'faulty']\nd = {}\ncomps = []\n\nfor attr\
          \ in evt.details._map:\n    if attr.startswith('swFCPortIndex'):\n     \
          \   port_idx = getattr(evt, attr, '')\n        if port_idx:\n          \
          \  attr_name = 'swFCPortName.{}'.format(str(port_idx))\n            comp\
          \ = getattr(evt, attr_name,'')\n            comps.append(comp)\n       \
          \     attr_status = 'swFCPortOpStatus.{}'.format(str(port_idx))\n      \
          \      port = [ comp, portStatus[int(getattr(evt, attr_status, ''))] ] \
          \ # no check!!\n            d[port_idx] = port\n\nevt.component = ', '.join(comps)\n\
          evt.summary = 'Port(s) changed state.'\n# Args: { 1, 0, 2, 3 }\nmsg =[]\n\
          for k, v in d.iteritems():\n    msg.append('Port {} changed state to {}\
          \ - Port Name: {}.'.format(k, v[1], v[0]))\n\nevt.message = '\\r\\n'.join(msg)\n\
          evt.message = evt.message + '\\r\\n' + str(d) + '\\r\\n' + str(comps)\n\n"
      fcSwitch.34.3:
        eventClassKey: fcSwitch.34.3
        example: snmp trap fcSwitch.34.3
        sequence: 7
      fcotInserted:
        eventClassKey: fcotInserted
        example: snmp trap fcotInserted
        sequence: 19
        zProperties:
          zEventSeverity: 2
      fcotRemoved:
        eventClassKey: fcotRemoved
        example: snmp trap fcotRemoved
        sequence: 19
        zProperties:
          zEventSeverity: 2
      swFCPortScn:
        eventClassKey: swFCPortScn
        example: snmp trap swFCPortScn
        sequence: 19
        transform: "for attr in evt.details._map:\n    if attr.startswith('swFCPortName'):\n\
          \        comp = getattr(evt, attr, '')\n        break\n\nevt.component =\
          \ comp\n\nevt.summary='FC port \"{}\" operational status changed'.format(comp)\n\
          evt.message='FC port \"{}\" operational status changed'.format(comp)\n\n"
  /Events/Net/HP: {}
  /Events/Net/HP/HighCollisionRate:
    mappings:
      hpicfFaultFinderTrap:
        eventClassKey: hpicfFaultFinderTrap
        example: snmp trap hpicfFaultFinderTrap
        sequence: 7
  /Events/Net/Link:
    mappings:
      1.3.6.1.6.3.1.1.5.3:
        eventClassKey: 1.3.6.1.6.3.1.1.5.3
        example: snmp trap 1.3.6.1.6.3.1.1.5.3
        sequence: 7
      CPQTeamMP_449:
        eventClassKey: CPQTeamMP_449
        zProperties:
          zEventSeverity: 3
      LINK-3-UPDOWN:
        eventClassKey: LINK-3-UPDOWN
        example: Interface FastEthernet0/48, changed state to down
        regex: Interface (?P<component>\S+), changed state to down
        zProperties:
          zEventSeverity: 2
      LINK-3-UPDOWN_ADMIN_DOWN:
        eventClassKey: LINK-3-UPDOWN
        example: Interface Foreign Exchange Station 0/2/0, changed state to Administrative
          Shutdown
        regex: Interface (?P<component>.+), changed state to Administrative Shutdown
        zProperties:
          zEventSeverity: 2
      LINK-3-UPDOWN_UP:
        eventClassKey: LINK-3-UPDOWN
        example: Interface FastEthernet0/48, changed state to up
        regex: Interface (?P<component>.+), changed state to up
        zProperties:
          zEventSeverity: 0
      NIC Agents_1285:
        eventClassKey: NIC Agents_1285
        zProperties:
          zEventSeverity: 3
      linkDown:
        eventClassKey: linkDown
        example: snmp trap linkDown
        transform: 'evt.summary = "Link Down (" + evt.ifDescr + ")"

          evt.component = "Link Down (" + evt.ifDescr + ")"

          '
      linkDown_01:
        eventClassKey: linkDown
        example: snmp trap linkDown
        sequence: 1
      linkDown_01_02:
        eventClassKey: linkDown
        example: snmp trap linkDown
        sequence: 2
      linkUp:
        eventClassKey: linkUp
        example: snmp trap linkUp
        transform: 'evt.summary = "Link Down (" + evt.ifDescr + ")"

          evt.component = "Link Down (" + evt.ifDescr + ")"

          '
        zProperties:
          zEventSeverity: 0
      linkUp_01:
        eventClassKey: linkUp
        example: snmp trap linkUp
        sequence: 1
      q57w2k_4:
        evaluation: 'HP Gb Server Adapter:  Network Link Down'
        eventClassKey: q57w2k_4
        zProperties:
          zEventSeverity: 3
    zProperties:
      zEventSeverity: 4
  /Events/Net/Linksys: {}
  /Events/Net/Linksys/Config:
    mappings:
      linksys.89.0.180:
        eventClassKey: linksys.89.0.180
        example: snmp trap linksys.89.0.180
      linksys.89.0.180_01:
        eventClassKey: linksys.89.0.180
        example: snmp trap linksys.89.0.180
        sequence: 1
      linksys.89.0.180_01_02:
        eventClassKey: linksys.89.0.180
        example: snmp trap linksys.89.0.180
        sequence: 2
      linksys.89.0.180_01_02_03:
        eventClassKey: linksys.89.0.180
        example: snmp trap linksys.89.0.180
        sequence: 3
  /Events/Net/Linksys/LLDPRemTablesChange:
    mappings:
      1.0.8802.1.1.2.0.0.1:
        eventClassKey: 1.0.8802.1.1.2.0.0.1
        example: snmp trap 1.0.8802.1.1.2.0.0.1
  /Events/Net/Linksys/TopologyChange:
    mappings:
      topologyChange:
        eventClassKey: topologyChange
        example: snmp trap topologyChange
        zProperties:
          zEventSeverity: 2
  /Events/Net/LogMessage:
    mappings:
      clogMessageGenerated:
        eventClassKey: clogMessageGenerated
        example: snmp trap clogMessageGenerated
        sequence: 7
        zProperties:
          zEventSeverity: 2
  /Events/Net/NS:
    mappings:
      DNS_3000:
        eventClassKey: DNS_3000
        example: The DNS server has encountered numerous run-time events. To determine
          the initial cause of these run-time events, examine the DNS server event
          log entries that precede this event. To prevent the DNS server from filling
          the event log too quickly, subsequent events with Event IDs higher than
          3000 will be suppressed until events are no longer being generated at a
          high rate.
      DNS_6525:
        eventClassKey: DNS_6525
        example: A zone transfer request for the secondary zone domain.com was refused
          by the master DNS server at 10.1.2.3. Check the zone at the master server
          10.1.2.3 to verify that zone transfer is enabled to this server.  To do
          so, use the DNS console, and select master server 10.1.2.3 as the applicable
          server, then in secondary zone domain.com Properties, view the settings
          on the Zone Transfers tab.  Based on the settings you choose, make any configuration
          adjustments there (or possibly in the Name Servers tab) so that a zone transfer
          can be made to this server.
        zProperties:
          zEventSeverity: 4
      DNS_6527:
        eventClassKey: DNS_6527
        example: Zone domain.com expired before it could obtain a successful zone
          transfer or update from a master server acting as its source for the zone.  The
          zone has been shut down.
        zProperties:
          zEventSeverity: 2
      DNS_9999:
        eventClassKey: DNS_9999
        example: 'The DNS server has encountered numerous run-time events.  These
          are usually

          caused by the reception of bad or unexpected packets, or from problems with

          or excessive replication traffic.  The data is the number of suppressed
          events

          encountered in the last 15 minute interval.'
        zProperties:
          zEventAction: status
      NETLOGON_5789:
        eventClassKey: NETLOGON_5789
        example: "Attempt to update DNS Host Name of the computer object\nin Active\
          \ Directory failed. The updated value was 'hostname.domain.com'.\nThe following\
          \ error occurred: \nThe parameter is incorrect."
        zProperties:
          zEventSeverity: 3
      Wins_4102:
        eventClassKey: Wins_4102
        example: The connection was aborted by the remote WINS. Remote WINS may not
          be configured to replicate with the server.
        zProperties:
          zEventSeverity: 3
  /Events/Net/Netgear: {}
  /Events/Net/Netgear/AgentSwitching:
    mappings:
      agentSwitchingTraps.15:
        eventClassKey: agentSwitchingTraps.15
        example: snmp trap agentSwitchingTraps.15
        sequence: 7
  /Events/Net/NoInternet:
    transform: evt.summary = "Internet Line Down"
  /Events/Net/SpanTree:
    mappings:
      SPANTREE_VLAN_SW-2-MAX_INSTANCE:
        eventClassKey: SPANTREE_VLAN_SW-2-MAX_INSTANCE
        example: Platform limit of 64 STP instances exceeded. No instance created
          for VLAN71 (port Gi0/2).
      linksys.89.0.151:
        eventClassKey: linksys.89.0.151
        example: snmp trap linksys.89.0.151
        sequence: 7
      linksys.89.0.151_01:
        eventClassKey: linksys.89.0.151
        example: snmp trap linksys.89.0.151
        sequence: 7
      linksys.89.0.151_01_02:
        eventClassKey: linksys.89.0.151
        example: snmp trap linksys.89.0.151
        sequence: 7
      linksys.89.0.151_01_02_03:
        eventClassKey: linksys.89.0.151
        example: snmp trap linksys.89.0.151
        sequence: 7
      linksys.89.151:
        eventClassKey: linksys.89.151
        example: snmp trap linksys.89.151
        sequence: 7
      mib.17.0.2:
        eventClassKey: mib.17.0.2
        example: snmp trap mib.17.0.2
        sequence: 7
      stpInstanceTopologyChangeTrap:
        eventClassKey: stpInstanceTopologyChangeTrap
        example: snmp trap stpInstanceTopologyChangeTrap
        sequence: 7
  /Events/Net/Time:
    mappings:
      W32Time_22:
        eventClassKey: W32Time_22
        example: 'The time provider NtpServer encountered an error while digitally
          signing the  NTP response for peer 10.1.23.45:123.  NtpServer cannot provide
          secure (signed) time to the client and will ignore the request. The error
          was: The specified user does not exist. (0x80070525)'
  /Events/Net/WLC:
    mappings:
      bsnAPCurrentChannelChanged:
        eventClassKey: bsnAPCurrentChannelChanged
        example: snmp trap bsnAPCurrentChannelChanged
        sequence: 1002
        zProperties:
          zEventSeverity: 2
      bsnAPCurrentTxPowerChanged:
        eventClassKey: bsnAPCurrentTxPowerChanged
        example: snmp trap bsnAPCurrentTxPowerChanged
        sequence: 1002
        transform: "comp = getattr(evt, 'bsnAPName', '')\nif not comp:\n    comp =\
          \ getattr(evt, 'bsnAPName.0', '')\nevt.component = comp\n"
        zProperties:
          zEventSeverity: 2
      bsnSignatureAttackDetected:
        eventClassKey: bsnSignatureAttackDetected
        example: snmp trap bsnSignatureAttackDetected
        sequence: 1002
        transform: "comp = getattr(evt, 'bsnAPName', None)\nif not comp:\n    comp\
          \ = getattr(evt, 'bsnAPName.0', '')\nevt.component = comp\n\nattack = getattr(evt,\
          \ 'bsnSignatureName', None)\nif not attack:\n    attack = getattr(evt, 'bsnSignatureName.0',\
          \ '')\n\nmsg = 'Signature attack of type {} detected on {}'.format(attack,\
          \ comp)\nevt.summary = msg\nevt.message = msg\n"
      ciscoLwappAAARadiusReqTimedOut:
        eventClassKey: ciscoLwappAAARadiusReqTimedOut
        example: snmp trap ciscoLwappAAARadiusReqTimedOut
        sequence: 1002
        transform: "for attr in evt.details._map:\n    if attr.startswith('claRadiusAddress'):\n\
          \        comp = getattr(evt, attr, '')\n        break\n\nevt.component =\
          \ comp\nmsg = 'RADIUS server {} failed to respond'.format(comp)\nevt.message\
          \ = msg\nevt.summary = msg\n\n"
      ciscoLwappAAARadiusServerGlobalDeactivated:
        eventClassKey: ciscoLwappAAARadiusServerGlobalDeactivated
        example: "import base64\nimport socket\n\nevt.summary = 'A Radius server has\
          \ been deactivated from the global list'\n\nfor attr in evt.details._map:\n\
          \    if attr.startswith('claRadiusAddress'):\n        ipb64= getattr(evt,\
          \ attr, '')\n        break\n\n# Assume that AddressType is 1 (ipv4)\nipAddress\
          \ = socket.inet_ntoa(base64.b64decode(ipb64))\n\nevt.message = 'The Radius\
          \ server {} has been deactivated from the global list\\r\\nsnmp trap ciscoLwappAAARadiusServerGlobalDeactivated'.format(ipAddress\
          \ )\n"
        sequence: 19
      ciscoLwappDot11ClientCoverageHolePreAlarm:
        eventClassKey: ciscoLwappDot11ClientCoverageHolePreAlarm
        example: snmp trap ciscoLwappDot11ClientCoverageHolePreAlarm
        sequence: 1002
        transform: "comp = getattr(evt,'cLApName', '')\nif not comp:\n    comp = getattr(evt,'cLApName.0',\
          \ '')\nevt.component = comp\n"
        zProperties:
          zEventSeverity: 2
      ciscoLwappMobilityAnchorControlPathDown:
        evaluation: This trap will be declared by the Controller when, successive
          ICMP ping attempts to the anchor fails and the anchor is conclusively down.
          Variable cLMobilityAnchorIPAddress denotes the IP Address of the anchor.
        eventClassKey: ciscoLwappMobilityAnchorControlPathDown
        example: snmp trap ciscoLwappMobilityAnchorControlPathDown
        sequence: 20
        transform: "import socket\n\nfor attr in evt.details._map:\n    if attr.startswith('cLMobilityAnchorAddress'):\n\
          \        ipAddressb64 = getattr(evt, attr, '').split(':')[1]\n        break\n\
          \nipAddress = ''\ntry:\n    ipAddress = socket.inet_ntoa(ipAddressb64.decode('base64'))\n\
          \    evt.component = ipAddress\nexcept:\n    evt.component = ipAddressb64\n\
          \nmsg = 'Connection to anchor {} failed'.format(ipAddress)\nevt.message\
          \ = msg\nevt.summary = msg\n"
      ciscoLwappMobilityAnchorControlPathUp:
        eventClassKey: ciscoLwappMobilityAnchorControlPathUp
        example: snmp trap ciscoLwappMobilityAnchorControlPathUp
        sequence: 20
        transform: "import socket\n\nfor attr in evt.details._map:\n    if attr.startswith('cLMobilityAnchorAddress'):\n\
          \        ipAddressb64 = getattr(evt, attr, '').split(':')[1]\n        break\n\
          \nipAddress = ''\ntry:\n    ipAddress = socket.inet_ntoa(ipAddressb64.decode('base64'))\n\
          \    evt.component = ipAddress\nexcept:\n    evt.component = ipAddressb64\n\
          \nmsg = 'Connection to anchor {} succeeded'.format(ipAddress)\nevt.message\
          \ = msg\nevt.summary = msg\n"
        zProperties:
          zEventSeverity: 0
  /Events/Net/WLC/APAssociate:
    mappings:
      bsnAPDisassociated:
        eventClassKey: bsnAPDisassociated
        example: snmp trap bsnAPDisassociated
        sequence: 20
        transform: "comp = getattr(evt, 'bsnAPName', '')\nif not comp:\n    comp =\
          \ getattr(evt, 'bsnAPName.0', '')\nevt.component = comp\n\nmsg = 'Ap {}\
          \ disassociated from Airespace Switch'.format(comp)\nevt.summary = msg\n\
          evt.message = msg\n"
      ciscoLwappApAssociated:
        eventClassKey: ciscoLwappApAssociated
        example: snmp trap ciscoLwappApAssociated
        sequence: 20
        transform: "'''\ncLApDataEncryptionStatus.36.1.199.172.35.192\t0\ncLApLastRebootReason.36.1.199.172.35.192\t\
          25\ncLApName.36.1.199.172.35.192\tAPe02f.6d5b.d8e8\n'''\n\nfor attr in evt.details._map:\n\
          \    if attr.startswith('cLAp'):\n        if attr.startswith('cLApName'):\n\
          \            comp = getattr(evt, attr, '')\n        elif attr.startswith('cLApLastRebootReason'):\n\
          \            reasonInt = int(getattr(evt, attr, ''))\n\nevt.component =\
          \ comp\nreasonL = [ '', '', '', '', '', '', '', '', '', '',\n          \
          \        '', '', '', '', '', '', '', '', '', '',\n                  '',\
          \ '', '', '', '', 'watchdog', '', '', '', '',\n                  '', '',\
          \ '', '', '', '', '', '', '', '',\n                  '', '', '', '', '',\
          \ '', '', '', '', '',\n                  '', '', '', '', '', '', '', '',\
          \ '', '',\n                  '', '', '', '', '', '', '', '', '', '',\n \
          \               ]\n\nmsg = 'AP {} joined the controller, reboot reason:\
          \ {}'.format(comp, reasonL[reasonInt])\nevt.summary = msg\nevt.message =\
          \ msg\n"
  /Events/Net/WLC/APIf:
    mappings:
      ciscoLwappApIfDownNotify:
        eventClassKey: ciscoLwappApIfDownNotify
        example: snmp trap ciscoLwappApIfDownNotify
        sequence: 1002
        transform: "comp = getattr(evt, 'cLApName', '')\nif not comp:\n    comp =\
          \ getattr(evt, 'cLApName.0', '')\nevt.component = comp\n\ndedupfields =\
          \ '|'.join(map(str, [evt.device, evt.component, evt.eventClass, evt.summary]))\n\
          evt.dedupid = dedupfields\n\nexisting_count = 0\n\nzep = getFacade('zep')\n\
          evt_filter = zep.createEventFilter(status=(0,1,2), fingerprint='|'.join(map(str,\
          \ dedupfields)))\nsummaries = zep.getEventSummaries(0, 1, filter=evt_filter)\n\
          if summaries['total']:\n    existing_count = list(summaries['events'])[0]['count']\n\
          \nif existing_count > 1:\n    evt.severity = 3\n"
        zProperties:
          zEventSeverity: 2
          zFlappingSeverity: 2
      ciscoLwappApIfUpNotify:
        eventClassKey: ciscoLwappApIfUpNotify
        example: snmp trap ciscoLwappApIfUpNotify
        sequence: 1002
        transform: "comp = getattr(evt, 'cLApName', '')\nif not comp:\n    comp =\
          \ getattr(evt, 'cLApName.0', '')\nevt.component = comp\n"
        zProperties:
          zEventSeverity: 0
  /Events/Net/WLC/APInterference:
    mappings:
      bsnAPInterferenceProfileFailed:
        eventClassKey: bsnAPInterferenceProfileFailed
        example: snmp trap bsnAPInterferenceProfileFailed
        sequence: 1002
        transform: "comp = getattr(evt, 'bsnAPName', '')\nif not comp:\n    comp =\
          \ getattr(evt, 'bsnAPName.0', '')\nevt.component = comp\ndedupfields = '|'.join(map(str,\
          \ [evt.device, evt.component, evt.eventClass, evt.summary]))\nevt.dedupid\
          \ = dedupfields\n\nexisting_count = 0\n\nzep = getFacade('zep')\nevt_filter\
          \ = zep.createEventFilter(status=(0,1,2), fingerprint='|'.join(map(str,\
          \ dedupfields)))\nsummaries = zep.getEventSummaries(0, 1, filter=evt_filter)\n\
          if summaries['total']:\n    existing_count = list(summaries['events'])[0]['count']\n\
          \nif existing_count > 2:\n    evt.severity = 3\n"
        zProperties:
          zEventSeverity: 2
          zFlappingSeverity: 2
      bsnAPInterferenceProfileUpdatedToPass:
        eventClassKey: bsnAPInterferenceProfileUpdatedToPass
        example: snmp trap bsnAPInterferenceProfileUpdatedToPass
        sequence: 1002
        transform: "comp = getattr(evt, 'bsnAPName', '')\nif not comp:\n    comp =\
          \ getattr(evt, 'bsnAPName.0', '')\nevt.component = comp\n"
        zProperties:
          zEventSeverity: 0
          zFlappingSeverity: 2
  /Events/Net/WLC/APLoad:
    mappings:
      bsnAPLoadProfileFailed:
        eventClassKey: bsnAPLoadProfileFailed
        example: snmp trap bsnAPLoadProfileFailed
        sequence: 1002
        transform: "comp = getattr(evt, 'bsnAPName', '')\nif not comp:\n    comp =\
          \ getattr(evt, 'bsnAPName.0', '')\nevt.component = comp\ndedupfields = '|'.join(map(str,\
          \ [evt.device, evt.component, evt.eventClass, evt.summary]))\nevt.dedupid\
          \ = dedupfields\n\nexisting_count = 0\n\nzep = getFacade('zep')\nevt_filter\
          \ = zep.createEventFilter(status=(0,1,2), fingerprint='|'.join(map(str,\
          \ dedupfields)))\nsummaries = zep.getEventSummaries(0, 1, filter=evt_filter)\n\
          if summaries['total']:\n    existing_count = list(summaries['events'])[0]['count']\n\
          \nevt.message = evt.message + ' - ' + str(existing_count )\n\nif existing_count\
          \ > 2:\n    evt.severity = 3\n"
        zProperties:
          zEventSeverity: 2
          zFlappingSeverity: 2
      bsnAPLoadProfileUpdatedToPass:
        eventClassKey: bsnAPLoadProfileUpdatedToPass
        example: snmp trap bsnAPLoadProfileUpdatedToPass
        sequence: 1002
        transform: "comp = getattr(evt, 'bsnAPName', '')\nif not comp:\n    comp =\
          \ getattr(evt, 'bsnAPName.0', '')\nevt.component = comp\n"
        zProperties:
          zEventSeverity: 0
  /Events/Net/WLC/APNoise:
    mappings:
      bsnAPNoiseProfileFailed:
        eventClassKey: bsnAPNoiseProfileFailed
        example: snmp trap bsnAPNoiseProfileFailed
        sequence: 20
        transform: "comp = getattr(evt, 'bsnAPName', '')\nif not comp:\n    comp =\
          \ getattr(evt, 'bsnAPName.0', '')\nevt.component = comp\ndedupfields = '|'.join(map(str,\
          \ [evt.device, evt.component, evt.eventClass, evt.summary]))\nevt.dedupid\
          \ = dedupfields\n\nexisting_count = 0\n\nzep = getFacade('zep')\nevt_filter\
          \ = zep.createEventFilter(status=(0,1,2), fingerprint='|'.join(map(str,\
          \ dedupfields)))\nsummaries = zep.getEventSummaries(0, 1, filter=evt_filter)\n\
          if summaries['total']:\n    existing_count = list(summaries['events'])[0]['count']\n\
          \nevt.message = evt.message + ' - ' + str(existing_count )\n\nif existing_count\
          \ > 2:\n    evt.severity = 3\n"
        zProperties:
          zEventSeverity: 2
          zFlappingSeverity: 2
      bsnAPNoiseProfileUpdatedToPass:
        eventClassKey: bsnAPNoiseProfileUpdatedToPass
        example: snmp trap bsnAPNoiseProfileUpdatedToPass
        sequence: 20
        transform: "comp = getattr(evt, 'bsnAPName', '')\nif not comp:\n    comp =\
          \ getattr(evt, 'bsnAPName.0', '')\nevt.component = comp\n"
        zProperties:
          zEventSeverity: 0
  /Events/Net/WLC/AnchorPing:
    mappings:
      ciscoLwappMobilityAnchorDataPathDown:
        eventClassKey: ciscoLwappMobilityAnchorDataPathDown
        example: snmp trap ciscoLwappMobilityAnchorDataPathDown
        sequence: 20
        transform: "import socket\nfor attr in evt.details._map:\n    if attr.startswith('cLMobilityAnchorAddress')\
          \ and 'Type' not in attr:\n        ipAddressb64 = getattr(evt, attr, '')\n\
          \        break\ntry:\n    ipAddress = socket.inet_ntoa(ipAddressb64.decode('base64'))\n\
          except:\n    ipAddress = 'Unknown'\nevt.component = ipAddress\nmsg = 'Connection\
          \ to anchor {} failed'.format(ipAddress)\nevt.message = msg\nevt.summary\
          \ = msg\n"
      ciscoLwappMobilityAnchorDataPathUp:
        eventClassKey: ciscoLwappMobilityAnchorDataPathUp
        example: snmp trap ciscoLwappMobilityAnchorDataPathUp
        sequence: 20
        zProperties:
          zEventSeverity: 2
  /Events/Net/WLC/GuestUserAdd:
    mappings:
      cLWAGuestUserAdded:
        eventClassKey: cLWAGuestUserAdded
        example: snmp trap cLWAGuestUserAdded
        sequence: 1002
        transform: "comp = getattr(evt, 'cLWAGuestUserName', '')\nif not comp:\n \
          \   comp = getattr(evt, 'cLWAGuestUserName.0', '')\nevt.component = comp\n"
        zProperties:
          zEventSeverity: 2
          zFlappingSeverity: 2
      cLWAGuestUserRemoved:
        eventClassKey: cLWAGuestUserRemoved
        example: snmp trap cLWAGuestUserRemoved
        sequence: 1002
        zProperties:
          zEventSeverity: 0
          zFlappingSeverity: 2
  /Events/Net/WLC/GuestUserLog:
    mappings:
      cLWAGuestUserLoggedIn:
        eventClassKey: cLWAGuestUserLoggedIn
        example: snmp trap cLWAGuestUserLoggedIn
        sequence: 1002
        transform: "user = getattr(evt, 'cLWAGuestUserName', '')\nif not user:\n \
          \   user = getattr(evt, 'cLWAGuestUserName.0', '')\nevt.component = user\n"
        zProperties:
          zEventSeverity: 2
          zFlappingSeverity: 2
      cLWAGuestUserLoggedOut:
        eventClassKey: cLWAGuestUserLoggedOut
        example: snmp trap cLWAGuestUserLoggedOut
        sequence: 1002
        transform: "comp = getattr(evt, 'cLWAGuestUserName', '')\nif not comp:\n \
          \   comp = getattr(evt, 'cLWAGuestUserName.0', '')\nevt.component = comp\n"
        zProperties:
          zEventSeverity: 0
          zFlappingSeverity: 2
  /Events/Net/WLC/RadarChannel:
    mappings:
      bsnRadarChannelCleared:
        eventClassKey: bsnRadarChannelCleared
        example: snmp trap bsnRadarChannelCleared
        sequence: 1002
        transform: "comp = getattr(evt, 'bsnAPName', '')\nif not comp:\n    comp =\
          \ getattr(evt, 'bsnAPName.0', '')\nevt.component = comp\n\nchannel = getattr(evt,\
          \ 'bsnAPIfPhyChannelNumber', '')\nif not channel:\n    channel = getattr(evt,\
          \ 'bsnAPIfPhyChannelNumber.0', '')\n\nmsg = 'Radar signals are detected\
          \ on the channel {}'.format(channel)\nevt.summary = msg\nevt.message = msg\n"
        zProperties:
          zEventSeverity: 0
          zFlappingSeverity: 2
      bsnRadarChannelDetected:
        eventClassKey: bsnRadarChannelDetected
        example: snmp trap bsnRadarChannelDetected
        sequence: 1002
        transform: "comp = getattr(evt, 'bsnAPName', '')\nif not comp:\n    comp =\
          \ getattr(evt, 'bsnAPName.0', '')\nevt.component = comp\n\nchannel = getattr(evt,\
          \ 'bsnAPIfPhyChannelNumber', '')\nif not channel:\n    channel = getattr(evt,\
          \ 'bsnAPIfPhyChannelNumber.0', '')\n\nmsg = 'Radar signals are detected\
          \ on the channel {}'.format(channel)\nevt.summary = msg\nevt.message = msg\n"
        zProperties:
          zEventSeverity: 3
  /Events/Net/WLC/RogueAP:
    mappings:
      bsnRogueAPDetected:
        eventClassKey: bsnRogueAPDetected
        example: snmp trap bsnRogueAPDetected
        sequence: 1002
        transform: "evt.component = evt.bsnRogueAPAirespaceAPName\n\nevt.message =\
          \ 'DEBUG'\n\nfrom zenoss.protocols.protobufs.zep_pb2 import EventSummary\n\
          from zenoss.protocols.jsonformat import from_dict\nfrom Products.ZenEvents.events2.proxy\
          \ import EventSummaryProxy\n\nsync = dmd.zport._p_jar.sync\n\nexisting_count\
          \ = 0\ndedupfields = [evt.device, evt.component, evt.eventClass]\n\n#if\
          \ getattr(evt, 'eventKey', False):\n#    dedupfields += [evt.eventKey, evt.severity]\n\
          #else:\ndedupfields += [evt.severity, evt.summary]\n\n# pra-wctrl-s01.fednot.be|APe02f.6d5b.d8e8|/Net/WLC/RogueAP|2|snmp\
          \ trap bsnRogueAPDetected\n\nevt.message = evt.message + ' - ' +  '|'.join(map(str,dedupfields))\n\
          \nzep = getFacade('zep')\nevt_filter = zep.createEventFilter(status=(0,1),\
          \ fingerprint='|'.join(map(str, dedupfields)))\n\n#summaries = zep.getEventSummaries(0,\
          \ 1, filter=evt_filter)\n#if summaries['total']:\n#    existing_count =\
          \ list(summaries['events'])[0]['count']\n\nevt_num = 0\nfor summary in zep.getEventSummariesGenerator(filter=evt_filter):\n\
          \    sync()\n    zep_evt = EventSummaryProxy(from_dict(EventSummary, summary))\n\
          \    evt_num += 1\n    try:\n        existing_count += zep_evt.count\n \
          \       #evt.message = evt.message + ' - ' + zep_evt.bsnRogueAPSsid + '\
          \ - ' + zep_evt.count\n    except:\n        pass\n        #evt.message =\
          \ evt.message + ' - ' + str(zep_evt)\n\nevt.message = evt.message + ' -\
          \ Count:' + str(existing_count) + ' - Query:' + str(evt_num)\n\n\n#evt.message\
          \ = evt.message + ' - Count:' + str(existing_count) + ' - Event1:' + str(summaries)\n\
          #evt.message = evt.message + ' - Count:' + str(existing_count) + ' - Event1:'\
          \ + str(summaries)  +  ' - Event2:' + str(summaries['events'])\n#evt.message\
          \ = evt.message + ' - Count:' + str(existing_count) + ' - Event5:' + ''.join([\
          \ summaries['events'] ])\n\nif existing_count > 1:\n    evt.severity = 3\n"
        zProperties:
          zEventSeverity: 2
          zFlappingSeverity: 2
      bsnRogueAPRemoved:
        eventClassKey: bsnRogueAPRemoved
        example: snmp trap bsnRogueAPRemoved
        sequence: 1002
        transform: evt.component = evt.bsnRogueAPAirespaceAPName
        zProperties:
          zEventSeverity: 0
  /Events/Net/traps:
    mappings:
      1.3.6.1.4.1.11.2.3.7.11.44.0.2:
        eventClassKey: 1.3.6.1.4.1.11.2.3.7.11.44.0.2
        example: snmp trap 1.3.6.1.4.1.11.2.3.7.11.44.0.2
        transform: "evt.summary=\"HPProcurve Trap:\"\nfor attr in dir(evt):\n    \
          \    if attr.startswith('1.3.6.1.2.1.16.9.1.1.2.'):\n                  \
          \  value = getattr(evt, attr, \"Error OID\")\n                    evt.summary\
          \ = evt.summary + \"-\" + value\n"
      hpicfCommonTrapsPrefix:
        eventClassKey: hpicfCommonTrapsPrefix
        example: snmp trap hpicfCommonTrapsPrefix
        transform: "evt.summary=\"HPProcurve Trap:\"\nfor attr in dir(evt):\n    \
          \    if attr.startswith('1.3.6.1.4.1.11.2.14.11.1.7.2.1.4.') or attr==\"\
          hpicfFfLogFaultType\":\n                    value = getattr(evt, attr, \"\
          Error OID\")\n                    if value==1:\n                       \
          \      evt.summary = evt.summary + \" -- Fault type : Bad driver\"\n   \
          \                 elif value==2:\n                             evt.summary\
          \ = evt.summary + \" -- Fault type : Bad Xcvr\"\n                    elif\
          \ value==3:\n                             evt.summary = evt.summary + \"\
          \ -- Fault type : Bad cable\"\n                    elif value==4:\n    \
          \                         evt.summary = evt.summary + \" -- Fault type :\
          \ Too long cable\"\n                    elif value==5:\n               \
          \              evt.summary = evt.summary + \" -- Fault type : Over Bandwidth\"\
          \n                    elif value==6:\n                             evt.summary\
          \ = evt.summary + \" -- Fault type : broadCast Storm\"\n               \
          \     else:\n                             evt.summary = evt.summary + \"\
          \ -- Fault type : \" + str(value)\n        elif attr.startswith('1.3.6.1.4.1.11.2.14.11.1.7.2.1.5.')\
          \ or attr==\"hpicfFfLogAction\":\n                    value1 = getattr(evt,\
          \ attr, \"Error OID\")\n                    if value1==2:\n            \
          \                 evt.summary = evt.summary + \" -- Action: Warning\"\n\
          \        elif attr.startswith('1.3.6.1.4.1.11.2.14.11.1.7.3.'):\n      \
          \              value2 = getattr(evt, attr, \"Error OID\")\n            \
          \        evt.message= \" - <a href=\\\"\" +value2 +\"\\\">Link</a>\"\nevt.message\
          \ = evt.summary + evt.message\n"
        zProperties:
          zEventSeverity: 4
      hpicfFaultFinderTrap:
        eventClassKey: hpicfFaultFinderTrap
        example: snmp trap hpicfFaultFinderTrap
        transform: "evt.summary=\"HPProcurve Trap:\"\nfor attr in dir(evt):\n    \
          \    if attr.startswith('1.3.6.1.4.1.11.2.14.11.1.7.2.1.4.') or attr==\"\
          hpicfFfLogFaultType\":\n                    value = getattr(evt, attr, \"\
          Error OID\")\n                    if value==1:\n                       \
          \      evt.summary = evt.summary + \" -- Fault type : Bad driver\"\n   \
          \                 elif value==2:\n                             evt.summary\
          \ = evt.summary + \" -- Fault type : Bad Xcvr\"\n                    elif\
          \ value==3:\n                             evt.summary = evt.summary + \"\
          \ -- Fault type : Bad cable\"\n                    elif value==4:\n    \
          \                         evt.summary = evt.summary + \" -- Fault type :\
          \ Too long cable\"\n                    elif value==5:\n               \
          \              evt.summary = evt.summary + \" -- Fault type : Over Bandwidth\"\
          \n                    elif value==6:\n                             evt.summary\
          \ = evt.summary + \" -- Fault type : broadCast Storm\"\n               \
          \     else:\n                             evt.summary = evt.summary + \"\
          \ -- Fault type : \" + str(value)\n        elif attr.startswith('1.3.6.1.4.1.11.2.14.11.1.7.2.1.5.')\
          \ or attr==\"hpicfFfLogAction\":\n                    value1 = getattr(evt,\
          \ attr, \"Error OID\")\n                    if value1==2:\n            \
          \                 evt.summary = evt.summary + \" -- Action: Warning\"\n\
          \        elif attr.startswith('1.3.6.1.4.1.11.2.14.11.1.7.3.'):\n      \
          \              value2 = getattr(evt, attr, \"Error OID\")\n            \
          \        evt.message = \" - <a href=\\\"\" +value2 +\"\\\">Link</a>\"\n\
          evt.message = evt.summary + evt.message\n"
        zProperties:
          zEventSeverity: 4
  /Events/NewServer: {}
  /Events/OCSP: {}
  /Events/OCSP/OCSPQueryEvent: {}
  /Events/OCSP/OCSPResponseVerificationEvent: {}
  /Events/OCSP/OCSPSuspiousRevocationTimeEvent: {}
  /Events/OCSP/OCSPUnexpectedResponseEvent: {}
  /Events/OS:
    mappings:
      MisysReports:
        eventClassKey: MisysReports
        example: 'syslog: Cannot send broadcast packet'
        sequence: 1
        zProperties:
          zEventSeverity: 2
  /Events/OS/Pagefile:
    mappings:
      Srv_2019:
        eventClassKey: Srv_2019
        example: The server was unable to allocate from the system nonpaged pool because
          the pool was empty.
        zProperties:
          zEventSeverity: 4
      Srv_2020:
        eventClassKey: Srv_2020
        example: The server was unable to allocate from the system paged pool because
          the pool was empty.
        zProperties:
          zEventSeverity: 4
  /Events/OS/Reboot:
    mappings:
      EventLog_6008:
        evaluation: Previous Shutdown was unexpected
        eventClassKey: EventLog_6008
  /Events/OpenFiles:
    transform: evt.summary = 'Too many open files'
  /Events/PDU:
    mappings:
      outletSensorStateChange:
        eventClassKey: outletSensorStateChange
        example: 'evt.component = ''Outlet {}''.format(evt.outletLabel)


          stateDic = { -1 : ''unavailable'', 0 : ''open'', 1 : ''closed'', 2 : ''belowLowerCritical'',
          3 : ''belowLowerWarning'', 4 : ''normal'', 5 : ''aboveUpperWarning'', 6
          : ''aboveUpperCritical'', 7 : ''on'', 8 : ''off'', 9 : ''detected'', 10
          : ''notDetected'', 11 : ''alarmed'', 12 : ''ok'', 14 : ''fail'', 15 : ''yes'',
          16 : ''no'', 17 : ''standby'', 18 : ''one'', 19 : ''two'', 20 : ''inSync'',
          21 : ''outOfSync'', 22 : ''i1OpenFault'', 23 : ''i1ShortFault'', 24 : ''i2OpenFault'',
          25 : ''i2ShortFault'', 26 : ''fault'', 27 : ''warning'', 28 : ''critical'',
          29 : ''selfTest'', 30 : ''nonRedundant'' }


          evt.summary = ''The outlet {} changed state''.format(evt.outletLabel)

          evt.message = ''The outlet {} changed state to {}. \r\nsnmp trap outletSensorStateChange''.format(evt.outletLabel,
          stateDic[evt.measurementsOutletSensorState])

          '
        sequence: 19
      powerControl:
        eventClassKey: powerControl
        example: snmp trap powerControl
        sequence: 19
        transform: 'evt.component = ''Outlet {}''.format(evt.outletLabel)


          stateDic = { -1 : ''unavailable'', 0 : ''open'', 1 : ''closed'', 2 : ''belowLowerCritical'',
          3 : ''belowLowerWarning'', 4 : ''normal'', 5 : ''aboveUpperWarning'', 6
          : ''aboveUpperCritical'', 7 : ''on'', 8 : ''off'', 9 : ''detected'', 10
          : ''notDetected'', 11 : ''alarmed'', 12 : ''ok'', 14 : ''fail'', 15 : ''yes'',
          16 : ''no'', 17 : ''standby'', 18 : ''one'', 19 : ''two'', 20 : ''inSync'',
          21 : ''outOfSync'', 22 : ''i1OpenFault'', 23 : ''i1ShortFault'', 24 : ''i2OpenFault'',
          25 : ''i2ShortFault'', 26 : ''fault'', 27 : ''warning'', 28 : ''critical'',
          29 : ''selfTest'', 30 : ''nonRedundant'' }


          evt.summary = ''An outlet switching operation has been performed''

          evt.message = ''{} switched the outlet {} to {}''.format(evt.userName, evt.outletLabel,
          stateDic[evt.measurementsOutletSensorState])

          '
  /Events/PDU/Inlet:
    transform: "if 'Inlet_active_power' in evt.eventKey:\n    msg = 'PDU Inlet {}:\
      \ Power is {:.2f} W'.format(evt.component, float(evt.current))\n    evt.message\
      \ = msg\n    evt.summary = msg\n"
  /Events/PDU/Login:
    mappings:
      userAuthenticationFailure:
        eventClassKey: userAuthenticationFailure
        example: snmp trap userAuthenticationFailure
        sequence: 19
        transform: 'user=evt.userName

          evt.component=user


          evt.summary=''User {} failed to login''.format(user)

          evt.message=''User {} failed to login''.format(user)

          '
      userLogin:
        eventClassKey: userLogin
        example: snmp trap userLogin
        sequence: 1002
        transform: evt.component=evt.userName
        zProperties:
          zEventSeverity: 2
    zProperties:
      zEventSeverity: 5
  /Events/PDU/Logout:
    mappings:
      userLogout:
        eventClassKey: userLogout
        example: snmp trap userLogout
        sequence: 1002
    zProperties:
      zEventSeverity: 2
  /Events/PDU/OCP: {}
  /Events/PDU/Outlet: {}
  /Events/PDU/SessionTimeout:
    mappings:
      userSessionTimeout:
        eventClassKey: userSessionTimeout
        example: snmp trap userSessionTimeout
        sequence: 1002
    zProperties:
      zEventSeverity: 2
  /Events/PDU/User:
    mappings:
      userModified:
        eventClassKey: userModified
        example: snmp trap userModified
        sequence: 20
        zProperties:
          zEventSeverity: 2
  /Events/Perf:
    transform: "if 'Paging File Usage' in evt.eventKey:\n    msg = 'Page file is {:.2f}%\
      \ used'.format(float(evt.current))\n    evt.summary = msg\n    evt.message =\
      \ msg\n\nif 'ldapBindTime' in evt.eventKey:\n    msg = 'LDAP Bind time is {}\
      \ ms'.format(int(float(evt.current)))\n    evt.summary = msg\n    evt.message\
      \ = msg\n"
  /Events/Perf/CPU:
    transform: "import re\n\npoll_interval = 5\n'''\ntry:\n    dp = evt.datapoint\n\
      \    evt.message = evt.message + '\\r\\n' +dp + '\\r\\n' + str('laLoadInt5_laLoadInt5'\
      \ in evt.eventKey)\nexcept:\n    pass\n'''\n\n# evt.datapoint = laLoadInt5_laLoadInt5\n\
      \nif 'laLoadInt5_laLoadInt5' in evt.eventKey:\n    r = re.search('(exceeded|violated|restored):\
      \ (\\d+)% of (\\d+) values out of range', evt.message)\n    if r:\n        msg\
      \ = 'System Load : There has been an average of {:.2f} processes in the system\
      \ queue for the last {} minutes'.format(float(evt.current)/100.0, poll_interval*int(r.group(3)))\n\
      \        evt.message = msg\n        evt.summary = msg\n    else:\n        r\
      \ = re.search('(exceeded|violated|restored): current value', evt.message)\n\
      \        if r:\n            msg = 'System Load : There are {} processes in the\
      \ system queue'.format(int(float(evt.current)))\n            evt.message = msg\n\
      \            evt.summary = msg\n\nelif 'ssCPUTotal_ssCPUTotal' in evt.eventKey:\n\
      \    r = re.search('(exceeded|violated|restored): (\\d+)% of (\\d+) values out\
      \ of range', evt.message)\n    if r:\n        msg = 'CPU usage is {}% for the\
      \ last {} minutes'.format(int(float(evt.current)), poll_interval*int(r.group(3)))\n\
      \        evt.message = msg\n        evt.summary = msg\n\nelif 'ProcessorTotalProcessorTime'\
      \ in evt.eventKey:\n    msg = 'CPU Usage is {:.2f}%'.format(float(evt.current))\n\
      \    evt.message = msg\n    evt.summary = msg\n\n\n\n"
  /Events/Perf/Filesystem:
    transform: "def transform():\n    if component and evt.eventKey:\n        try:\n\
      \            current = float(evt.current)\n            totalBytes = int(component.totalBytes())\n\
      \            compName = component.name()\n        except Exception:\n      \
      \      return\n\n        #if totalBytes < 1:\n         #   return\n\n      \
      \  usedPercent, usedBytes, freeBytes = None, None, None\n\n        # SNMP (Platform)\n\
      \        if 'usedBlocks' in evt.eventKey:\n            usedBytes = int(current)\
      \ * component.blockSize\n            usedPercent = float(usedBytes) / totalBytes\
      \ * 100.0\n            freeBytes = totalBytes - usedBytes\n            from\
      \ Products.ZenUtils.Utils import convToUnits\n            msg = 'Filesystem\
      \ {} is {:3.2f}% used ({} free)'.format(compName, usedPercent, convToUnits(freeBytes))\n\
      \            #evt.summary = \"disk space threshold: %3.1f%% used (%s free)\"\
      \ % (usedPercent, convToUnits(freeBytes))\n            #evt.message = evt.summary\
      \ + '\\r\\n' + str(current) + '\\r\\n' + str(totalBytes) + '\\r\\n' + str(usedBytes)\
      \ + '\\r\\n' + compName\n            #evt.message = evt.message + '\\r\\n' +\
      \ msg\n            evt.message = msg\n            evt.summary = msg\n\n    \
      \    # Linux SSH (LinuxMonitor ZenPack)\n        elif 'percentUsed' in evt.eventKey:\n\
      \            usedPercent = current\n            usedBytes = totalBytes * (current\
      \ * 0.01)\n            freeBytes = totalBytes - usedBytes\n            from\
      \ Products.ZenUtils.Utils import convToUnits\n            # evt.summary = \"\
      disk space threshold: %3.1f%% used (%s free)\" % (usedPercent, convToUnits(freeBytes))\n\
      \            # evt.message = evt.summary + '\\r\\n' + str(current) + '\\r\\\
      n' + str(totalBytes) + '\\r\\n' + compName\n            msg = 'File system {}\
      \ is {:3.2f}% used ({} free)'.format(evt.component, float(usedPercent), convToUnits(freeBytes))\n\
      \            evt.message = msg\n            evt.summary = msg\n\n        # Windows\
      \ (Windows ZenPacks)\n        elif 'FreeMegabytes' in evt.eventKey:\n      \
      \      freeBytes = int(current) * 1048576\n            usedBytes = float(totalBytes\
      \ - freeBytes)\n            usedPercent = (usedBytes / totalBytes) * 100.0\n\
      \            from Products.ZenUtils.Utils import convToUnits\n            msg\
      \ = 'Disk {} is {:3.2f}% used ({} free)'.format(evt.component, float(usedPercent),\
      \ convToUnits(freeBytes))\n            evt.message = msg\n            evt.summary\
      \ = msg\n\n        elif 'filesystem_used_perc' in evt.eventKey:\n          \
      \  msg = 'Firesystem {} is {:3.2f}% used'.format(evt.component, current)\n \
      \           evt.message = msg\n            evt.summary = msg\n\n        else:\n\
      \            return\n\n        # Make a nicer event summary.\n\ntransform()\n"
  /Events/Perf/Filesystem/NetApp:
    transform: "if dev:\n    try:\n        fs = dev.findFS(evt.component)\n      \
      \  backStore = fs.getBackingStore()\n        if hasattr(backStore, 'luns') and\
      \ backStore.luns():\n            evt._action = 'drop'\n    except (SystemExit,\
      \ KeyboardInterrupt), ex: raise\n    except:\n        log.info(\"The transform\
      \ /Perf/Filesystem/NetApp was unable to map NetApp device %s component %s to\
      \ object\",\n                dev.titleOrId(), evt.component)\n"
  /Events/Perf/HP: {}
  /Events/Perf/Interface:
    transform: 'msg = ''Interface {}: bandwidth is {:5.2f} Mbps''.format(evt.component,
      float(evt.current)/1024/1024*8)

      evt.message = msg

      evt.summary = msg

      '
  /Events/Perf/LDAP: {}
  /Events/Perf/Memory:
    transform: "import re\n\n'''\nif re.search('threshold of Memory', evt.summary):\n\
      \    dev = dmd.Devices.findDevice(evt.ipAddress)\n    if dev.getRRDValue('MemoryUsed')\
      \ and dev.getRRDValue('MemoryTotal'):\n        percentUsed = round(dev.getRRDValue('MemoryUsed')\
      \ * 100 / dev.getRRDValue('MemoryTotal'))\n        if re.search('threshold of\
      \ Memory exceeded', evt.summary):\n            status = 'exceeded'\n       \
      \ if re.search('threshold of Memory restored', evt.summary):\n            status\
      \ = 'restored'\n        evt.summary = \"threshold of Memory %s: current value\
      \ %3.1f\" % (status,percentUsed)\n        evt.message = \"threshold of Memory\
      \ %s: current value %3.1f\" % (status,percentUsed)\n'''\nif 'MemoryAvailableBytes'\
      \ in evt.eventKey:\n    percentUsed = 100*(float(device.hw.totalMemory)-float(evt.current))/float(device.hw.totalMemory)\n\
      \    msg = 'Memory is {:.2f}% used'.format(percentUsed)\n    evt.summary = msg\n\
      \    evt.message = msg+'\\r\\n'+str(device.hw.totalMemory)+'\\r\\n'+str(evt.current)\n\
      \nif 'bufcachemem' in evt.eventKey:\n    msg = 'Memory Buffer Cache is at {:3.1f}%'.format(float(evt.current))\n\
      \    evt.message = msg\n    evt.summary = msg\n    \nif 'sysHostMemoryUsed_sysHostMemoryUsed|free\
      \ host memory' in evt.eventKey:\n    value = float(evt.current) / float(device.hw.totalMemory)\
      \ * 100.0\n    msg = 'Host memory usage: {:.2f}%'.format(value)\n    evt.message\
      \ = msg\n    evt.summary = msg\n\n"
  /Events/Perf/MissedRuns: {}
  /Events/Perf/OpenFiles: {}
  /Events/Perf/Predict: {}
  /Events/Perf/QoS: {}
  /Events/Perf/RabbitMQ: {}
  /Events/Perf/Rendition:
    transform: 'import re

      r= re.search(''.*\|ErrorsLast(\d*)Min'', evt.eventKey)

      duration = r.group(1)

      errs = int(float(evt.current))


      msg = ''There have been {} rendition errors during the last {} minutes''.format(errs,
      duration)

      evt.summary = msg

      evt.message = msg


      '
  /Events/Perf/SQL: {}
  /Events/Perf/Snmp: {}
  /Events/Perf/StoragePool: {}
  /Events/Perf/Swap:
    transform: "mparts=evt.message.split(' ')\n\nif len(mparts) >= 8:\n    availSwap=round(float(mparts[7]),2)\n\
      \    try: \n        totalSwap=round((float(device.os.totalSwap)/1024),2)\n \
      \       percused=100-round((availSwap/totalSwap)*100,2)\n        if evt.monitor\
      \ in ('PRB', 'PRC', 'PRA'):\n            if 30 < percused < 50:\n          \
      \      evt.severity=3\n            elif 50 < percused < 70:\n              \
      \  evt.severity=4\n            elif 70 < percused < 101:\n                evt.severity=5\n\
      \            else:\n                evt.severity=0\n\n        if evt.monitor\
      \ in ('STB'):\n            if 10 < percused < 30:\n                evt.severity=3\n\
      \            elif 30 < percused < 50:\n                evt.severity=4\n    \
      \        elif 50 < percused < 101:\n                evt.severity=5\n       \
      \     else:\n                evt.severity=0\n\n        evt.summary=\"%s%% swap\
      \ used\" %percused\n        evt.message=\"%s%% swap used\" %percused\n\n   \
      \ except:\n        exit\n\n"
  /Events/Perf/Web: {}
  /Events/Perf/XmlRpc: {}
  /Events/Perf/eRegistration:
    transform: "if 'SP25Queue' in evt.eventKey:\n    msg = 'SP25 Queue contains {:d}\
      \ messages'.format(int(float(evt.current)))\n    evt.message = msg\n    evt.summary\
      \ = msg\n"
  /Events/Perf/vSphere: {}
  /Events/Perf/vSphere/Utilization:
    transform: "def rescaleSummary(message, search_text):\n    if message.find(search_text)\
      \ > -1:\n      index = message.find(search_text)+len(search_text)\n      value\
      \ = float(message[index:])\n      if value:\n        return \"%s%7.2lf%%\" %\
      \ (message[:index], value / 100)\n    return message\n# Scale down reported\
      \ values for event console by factor of 100\nmsg = rescaleSummary(evt.summary,\
      \ 'current value ')\nevt.summary = evt.message = msg\nevt.max = float(evt.max)\
      \ / 100"
  /Events/Security: {}
  /Events/Security/Auth:
    mappings:
      CiscoAAA_5:
        eventClassKey: CiscoAAA_5
        example: 'CSMon Message: Service CSAuth has been suspended for a configured
          function to proceed. Monitoring will suspend until the service is restarted.'
        zProperties:
          zEventSeverity: 1
      SNMP-3-AUTHFAIL:
        eventClassKey: SNMP-3-AUTHFAIL
        example: Authentication failure for SNMP req from host 10.120.100.10
        regex: Authentication failure for SNMP req from host (?P<eventKey>\S+)
      snmp_authenticationFailure:
        eventClassKey: snmp_authenticationFailure
        example: snmp trap snmp_authenticationFailure from 10.115.100.22
        transform: 'msg = ''Authentication failure''

          evt.message = msg

          evt.summary = msg

          '
        zProperties:
          zEventSeverity: 3
    zProperties:
      zEventSeverity: 3
  /Events/Security/Conn: {}
  /Events/Security/Conn/Close:
    mappings:
      dropbear:
        eventClassKey: dropbear
        example: 'exit before auth (user ''root'', 1 fails): Exited normally'
        regex: 'exit before auth \(user ''(?P<eventKey>\w+)''.*: Exited normally'
        sequence: 3
      dropbear_reset:
        eventClassKey: dropbear
        example: 'exit before auth: error reading: Connection reset by peer'
        regex: '^exit before auth:'
        sequence: 4
      sshd_pam_unix:
        eventClassKey: sshd(pam_unix)
        example: session closed for user edahl
        regex: session closed for user (?P<eventKey>\S+)
        sequence: 1
      ultravnc:
        eventClassKey: ultravnc_3
        example: 29/11/2005 16:16 Client 10.1.2.3 disconnected
        regex: (?P<summary>Client (?P<remoteIp>\S+) disconnected)
    zProperties:
      zEventClearClasses:
      - /Security/Connection/Open
  /Events/Security/Conn/Open:
    mappings:
      dropbear:
        eventClassKey: dropbear
        example: Child connection from 10.1.2.3:55107
        regex: Child connection from (?P<eventKey>\S+):\d+
        zProperties:
          zEventAction: history
      sshd_pam_unix:
        eventClassKey: sshd(pam_unix)
        example: session opened for user edahl by (uid=500)
        regex: session opened for user (?P<eventKey>\S+) by \(uid=(?P<uid>\d+)\)
      ultravnc:
        eventClassKey: ultravnc_1
        example: 29/11/2005 16:12 Connection received from 10.1.2.3
        regex: (?P<summary>Connection received from (?P<eventKey>\S+))
    zProperties:
      zEventSeverity: 2
  /Events/Security/Login:
    mappings:
      MSExchangeIS Mailbox Store_1009:
        eventClassKey: MSExchangeIS Mailbox Store_1009
        example: 'DOMAIN\username logged on as /O=My Organization/OU=DOMAIN/cn=Recipients/cn=username
          on database "First Storage Group\Mailbox Store (MAIL1)".



          For more information, click http://www.microsoft.com/contentredirect.asp.'
        zProperties:
          zEventAction: status
          zEventSeverity: 1
      MSExchangeIS Mailbox Store_1011:
        eventClassKey: MSExchangeIS Mailbox Store_1011
        example: 'NT AUTHORITY\SYSTEM logged on as /o=My Organization/ou=DOMAIN/cn=Recipients/cn=username
          on database "First Storage Group\Mailbox Store (MAIL1)", using administrator
          privileges.



          For more information, click http://www.microsoft.com/contentredirect.asp.'
        zProperties:
          zEventAction: status
          zEventSeverity: 1
      defaultmapping:
        evaluation: \d+ \S+ \S+ SEV=\d+ (?P<component>\S+) RPT=\d+ \S+ (?P<summary>.*)
        eventClassKey: defaultmapping
        example: 1101379 03/17/2006 10:52:59.040 SEV=4 IKE/120 RPT=54919 10.1.2.3  Group
          [IPsecUsers] User [domain\username] PHASE 2 COMPLETED (msgid=ae41db32)
        regex: \d+ \S+ \S+ SEV=\d+ (?P<component>\S+) RPT=\d+ \S+  (?P<summary>Group
          \[(?P<secGroup>\S+)\] User \[(?P<username>\S+)\] PHASE 2 COMPLETED)
        sequence: 1
    zProperties:
      zEventAction: history
      zEventSeverity: 2
  /Events/Security/Login/BadPass:
    mappings:
      dropbear:
        eventClassKey: dropbear
        example: bad password attempt for 'root'
        regex: bad password attempt for '(?P<eventKey>\w+)'
        sequence: 1
      sshd:
        eventClassKey: sshd
        example: Failed password for username from 10.1.2.3 port 53529 ssh2
        regex: Failed password for (?P<eventKey>\S+) from (?P<remoteIp>\S+) port (?P<remotePort>\d+)
          (?P<protocol>\S+)
        sequence: 1
    zProperties:
      zEventSeverity: 2
  /Events/Security/Login/Fail:
    mappings:
      MSFTPSVC_100:
        eventClassKey: MSFTPSVC_100
        example: 'The server was unable to logon the Windows NT account ''domain\username''
          due to the following error: Logon failure: unknown user name or bad password.  The
          data is the error code.


          For additional information specific to this message please visit the Microsoft
          Online Support site located at: http://www.microsoft.com/contentredirect.asp.'
        zProperties:
          zEventSeverity: 4
      W3SVC_100:
        eventClassKey: W3SVC_100
        example: 'The server was unable to logon the Windows NT account ''khall2''
          due to the following error: Logon failure: unknown user name or bad password.  The
          data is the error code.


          For additional information specific to this message please visit the Microsoft
          Online Support site located at: http://www.microsoft.com/contentredirect.asp.'
        zProperties:
          zEventSeverity: 3
      dropbear:
        eventClassKey: dropbear
        example: 'exit before auth (user ''root'', 3 fails): Max auth tries reached
          - user root'
        regex: 'exit before auth \(user ''(?P<eventKey>\S+)'', (?P<failures>\S+) fails\):
          Max auth tries reached'
        sequence: 2
      remote(pam_unix):
        eventClassKey: remote(pam_unix)
        example: bad username []
    zProperties:
      zEventSeverity: 3
  /Events/Security/Sudo:
    mappings:
      sudo:
        eventClassKey: sudo
        example: 'edahl : TTY=pts/4 ; PWD=/home/edahl ; USER=root ; COMMAND=/bin/su
          -'
        regex: '(?P<username>\S+) : TTY=(?P<tty>\S+) ; PWD=(?P<pwd>\S+) ; USER=(?P<targetUser>\S+)
          ; COMMAND=(?P<command>.*)'
    zProperties:
      zEventAction: history
  /Events/Security/Virus:
    mappings:
      Symantec AntiVirus_4:
        eventClassKey: Symantec AntiVirus_4
        example: Update to computer HOSTNAME of virus definition file 80209g failed.
          Status 20000032
        zProperties:
          zEventAction: history
      Symantec AntiVirus_46:
        eventClassKey: Symantec AntiVirus_46
        example: 'Security Risk Found!Threat: Trojan.Dropper in File: D:\AHSInstall\TouchWorks
          10.1.1 CD.part1.exe by: Scheduled scan.  Action: Clean failed : Delete failed.  Action
          Description: The file was left unchanged.'
        zProperties:
          zEventSeverity: 3
      Symantec AntiVirus_5:
        eventClassKey: Symantec AntiVirus_5
        example: 'Threat Found!Threat: Trojan.Dropper in File: c:\speedtest\touchworks
          10.1.1 cd.part1.exe by: Scheduled scan.  Action: Delete succeeded.  Action
          Description: The file was deleted successfully.'
        zProperties:
          zEventSeverity: 3
      Symantec AntiVirus_51:
        eventClassKey: Symantec AntiVirus_51
        example: 'Security Risk Found!Threat: Trojan.Dropper in File: G:\AHSInstall\TouchWorks
          10.1.1 CD.part1.exe by: Scheduled scan.  Action: Delete succeeded.  Action
          Description: The file was deleted successfully.'
        zProperties:
          zEventSeverity: 3
  /Events/SensorProbe: {}
  /Events/SensorProbe/KeepAlive:
    mappings:
      spKeepAliveTrap:
        eventClassKey: spKeepAliveTrap
        example: snmp trap spKeepAliveTrap
        sequence: 7
    zProperties:
      zEventSeverity: 2
  /Events/SensorProbe/Temperature:
    mappings:
      spTemperature1Status:
        eventClassKey: spTemperature1Status
        example: snmp trap spTemperature1Status
        sequence: 7
      spTemperature7Status:
        eventClassKey: spTemperature7Status
        example: snmp trap spTemperature7Status
        sequence: 7
      spTemperature8Status:
        eventClassKey: spTemperature8Status
        example: snmp trap spTemperature8Status
        sequence: 7
      spTemperatureStatus:
        eventClassKey: spTemperatureStatus
        example: snmp trap spTemperatureStatus
        sequence: 7
  /Events/SensorProbe/WaterDetection:
    mappings:
      spSwitch5Status:
        eventClassKey: spSwitch5Status
        example: snmp trap spSwitch5Status
        sequence: 7
  /Events/Splunk: {}
  /Events/Status:
    mappings:
      ClusterOwnerChange:
        eventClassKey: clusterOwnerChange
        example: OwnerNode of cluster windows_cluster changed to node_02
        sequence: 10
        transform: "if device:\n    from ZenPacks.zenoss.Microsoft.Windows.actions\
          \ import schedule_remodel\n    schedule_remodel(device, evt)"
      IISSiteStatus:
        eventClassKey: IISSiteStatus
        example: IIS Service W3SVC_1 is in Stopped state
        sequence: 10
        transform: "import re\n\n@transact\ndef change_properties(currentstate):\n\
          \    if getattr(component, 'status') != currentstate:\n        setattr(component,\
          \ 'status', currentstate)\n\nmsg = evt.summary\nsummaryObj = re.match(r'IIS\
          \ Service (.*) is in (.*) state', msg)\n\nchange_properties(summaryObj.group(2))\n"
      MySQLDatabaseExistence:
        eventClassKey: MySQLDatabaseExistence
      MySQLMonitorDatabases:
        eventClassKey: MySQLMonitorDatabases
      MySQLMonitorServers:
        eventClassKey: MySQLMonitorServers
      MySqlDeadlock:
        eventClassKey: MySqlDeadlock
      MySqlMonitor:
        eventClassKey: MySqlMonitor
      MySqlReplication:
        eventClassKey: MySqlReplication
      UCS-CIMC-configResolveClass:
        eventClassKey: UCS-CIMC-configResolveClass
        sequence: 11
      UCS-CIMC-status:
        eventClassKey: UCS-CIMC-status
        sequence: 11
      WinDatabaseStatus:
        eventClassKey: WinDatabaseStatus
        example: Database master status is Normal
        sequence: 10
      WindowsServiceLog:
        eventClassKey: WindowsServiceLog
        example: 'Service Alert: ALG has changed to Stopped state'
        sequence: 10
        transform: "import re\n\n@transact\ndef change_properties(currentstate):\n\
          \    if getattr(component, 'state') != currentstate:\n        setattr(component,\
          \ 'state', currentstate)\n\nmsg = evt.summary\nsummaryObj = re.match(r'Service\
          \ (.*): (.*) has changed to (.*) state', msg)\n\nchange_properties(summaryObj.group(3))\n"
      apOperationStatus:
        eventClassKey: apOperationStatus
        sequence: 1000
      ceSensorExtThresholdNotification_presence:
        eventClassKey: ceSensorExtThresholdNotification
        example: snmp trap ceSensorExtThresholdNotification
        rule: '''presence'' in getattr(evt, ''entPhysicalDescr'', '''').lower()'
        sequence: 1000
        transform: "evt.summary = 'fault on %s' % evt.entPhysicalDescr\n\nif device:\n\
          \    from ZenPacks.zenoss.CiscoMonitor.utils import schedule_remodel\n \
          \   schedule_remodel(dmd, device)"
      cefcFRUInserted:
        eventClassKey: cefcFRUInserted
        example: snmp trap cefcFRUInserted
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process_cefcFRUInserted(evt, device)'
      cefcFRUPowerOperStatus:
        eventClassKey: cefcFRUPowerOperStatus
        example: 'current status: on (fan failed)'
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.status_handler(device, component, evt)'
      cefcFRURemoved:
        eventClassKey: cefcFRURemoved
        example: snmp trap cefcFRURemoved
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process_cefcFRURemoved(evt, device)'
      cefcFanTrayOperStatus:
        eventClassKey: cefcFanTrayOperStatus
        example: 'current status: down'
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.status_handler(device, component, evt)'
      cefcModuleOperStatus:
        eventClassKey: cefcModuleOperStatus
        example: 'current status: failed'
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.status_handler(device, component, evt)'
      cefcPowerRedundancyMode:
        eventClassKey: cefcPowerRedundancyMode
        example: 'current status: non-redundant'
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.status_handler(device, component, evt)'
      cefcPowerRedundancyOperMode:
        eventClassKey: cefcPowerRedundancyOperMode
        example: 'current status: non-redundant'
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.status_handler(device, component, evt)'
      cieLinkDown:
        eventClassKey: cieLinkDown
        example: snmp trap cieLinkDown
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      cieLinkUp:
        eventClassKey: cieLinkUp
        example: cieLinkUp
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      ciscoEnvMonFanState:
        eventClassKey: ciscoEnvMonFanState
        example: 'current status: warning'
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.status_handler(device, component, evt)'
      ciscoEnvMonTemperatureState:
        eventClassKey: ciscoEnvMonTemperatureState
        example: 'current status: warning'
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.status_handler(device, component, evt)'
      ciscoEnvMonVoltageState:
        eventClassKey: ciscoEnvMonVoltageState
        example: 'current status: warning'
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.status_handler(device, component, evt)'
      cisco_vrf_status:
        eventClassKey: cisco_vrf_status
        example: 'current status: down'
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.status_handler(device, component, evt)'
      cvVrfOperStatus:
        eventClassKey: cvVrfOperStatus
        example: 'current status: down'
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.status_handler(device, component, evt)'
      cvnVethIfAdditionalState:
        eventClassKey: cvnVethIfAdditionalState
        example: 'current status: error-disabled'
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.status_handler(device, component, evt)'
      docker-ps-status:
        eventClassKey: docker-ps-status
        example: received unexpected output from docker ps
      dockerContainerStatus:
        eventClassKey: dockerContainerStatus
        example: 'container status: exited (0) 48 minutes ago'
      emc-vnx-file-events:
        eventClassKey: emc-vnx-file-events
        sequence: 21
      entSensorStatus:
        eventClassKey: entSensorStatus
        example: 'current status: non-operational'
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.status_handler(device, component, evt)'
      entStateOper:
        eventClassKey: entStateOper
        example: 'current status: testing'
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.status_handler(device, component, evt)'
      fltEquipmentFanModuleMissing:
        eventClassKey: ucs|F0377
        example: 'Fan module 1-2 in chassis 1 presence: missing'
        transform: "# Change the severity from warning to critical.\nif evt.severity\
          \ > 0:\n    evt.severity = 5\n"
      fltMgmtEntityDegraded:
        eventClassKey: ucs|F0293
        example: Fabric Interconnect B, HA Cluster interconnect link failure
        transform: "# Remove \"sys_mgmt-entity-X\" from component so this event affects\
          \ the USC-M instead.\nevt.component = ''\n\n# Change the severity from error\
          \ to warning.\nif evt.severity > 0:\n    evt.severity = 3\n"
      ifOperStatus:
        eventClassKey: ifOperStatus
        example: 'current status: down'
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.status_handler(device, component, evt)'
      kubernetes-status-api:
        eventClassKey: kubernetes-status-api
        sequence: 99
      kubernetes-status-namespace:
        eventClassKey: kubernetes-status-namespace
        sequence: 99
      kubernetes-status-node:
        eventClassKey: kubernetes-status-node
        sequence: 99
      kubernetes-status-persistentvolume:
        eventClassKey: kubernetes-status-persistentvolume
        sequence: 99
      kubernetes-status-pod:
        eventClassKey: kubernetes-status-pod
        sequence: 99
      linkDown:
        eventClassKey: linkDown
        example: snmp trap linkDown
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      linkUp:
        eventClassKey: linkUp
        example: snmp trap linkUp
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      linux-service-status:
        eventClassKey: linux-service-status
        sequence: 99
      linux-services:
        eventClassKey: linux-services
        sequence: 100
      nxapiCommandFailure:
        eventClassKey: nxapiCommandFailure
        example: error running show environment via NX-API
        sequence: 1000
      nxapiCommandSuccess:
        eventClassKey: nxapiCommandSuccess
        example: successfully ran show environment via NX-API
        sequence: 1000
      nxapiStateClear:
        eventClassKey: nxapiStateClear
        example: state is up
        sequence: 1000
      nxapiStateCritical:
        eventClassKey: nxapiStateCritical
        example: state is down
        sequence: 1000
      proliant_HealthState:
        eventClassKey: proliant_HealthState
      proliant_PoweredState:
        eventClassKey: proliant_PoweredState
      proliant_condition:
        eventClassKey: proliant_condition
      proliant_inputStatus:
        eventClassKey: proliant_inputStatus
      proliant_interfaceStatus:
        eventClassKey: proliant_interfaceStatus
      proliant_serverStatus:
        eventClassKey: proliant_serverStatus
      proliant_status:
        eventClassKey: proliant_status
      proliant_tempStatus:
        eventClassKey: proliant_tempStatus
      proliant_thermalStatus:
        eventClassKey: proliant_thermalStatus
      snmp_linkDown:
        eventClassKey: snmp_linkDown
        example: snmp_linkDown
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      snmp_linkUp:
        eventClassKey: snmp_linkUp
        example: snmp trap snmp_linkUp
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.process(evt, device, dmd, txnCommit)'
      ucs-cimc-configResolveClass:
        eventClassKey: ucs-cimc-configResolveClass
      ucs-cimc-defaultmapping:
        eventClassKey: defaultmapping
        rule: (getattr(evt, 'eventClassKey', '') or '').startswith('ucs-cimc|')
        sequence: 20
      ucs-cimc-status:
        eventClassKey: ucs-cimc-status
      vsanOperState:
        eventClassKey: vsanOperState
        example: 'current status: down'
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.status_handler(device, component, evt)'
      vtpVlanState:
        eventClassKey: vtpVlanState
        example: 'current status: suspended'
        sequence: 1000
        transform: 'from ZenPacks.zenoss.CiscoMonitor import transforms

          transforms.status_handler(device, component, evt)'
    transform: "if not hasattr(evt, 'firstTime'):\n    # evt.severity = 0\n    pass\n\
      else:\n  if evt.firstTime == evt.lastTime and hasattr(evt, 'compClass'):\n \
      \   for comp in device.getMonitoredComponents(type=evt.compClass):\n       \
      \ if comp.id != evt.component: continue\n        comp.status = int(evt.compStatus)\n\
      \        from transaction import commit\n        commit()\n        break\n"
  /Events/Status/AMQ:
    transform: "import re\ndatapoint,  threshold =evt.eventKey.split('|')\n\nif 'DLQ_QueueSize'\
      \ in threshold:\n    evt.component  = 'DLQ'\n    r = re.search(r'.*current value\\\
      s([\\d.]+)', evt.message)\n    queue_size = int(float(r.group(1)))\n    # info\
      \ = 'ActiveMQ Dead Letter Queue contains {0:d} messages'.format(queue_size)\
      \   # set to integer ?\n    # evt.message = evt.message + '\\r\\n' + info\n\
      \    evt.summary = 'ActiveMQ Dead Letter Queue contains {0:d} messages'.format(queue_size)\n\
      \    evt.message = evt.summary\nelse:\n    evt.message = evt.message + '\\r\\\
      n' + datapoint + '\\r\\n' + threshold\n    tt = threshold.split('_')\n    msg\
      \ = 'Broker {}: {} is {}'.format('_'.join(tt[:-1]), tt[-1], int(float(evt.current)))\n\
      \    evt.message = msg\n    evt.summary = msg\n\n"
  /Events/Status/AMQ/DLQ:
    transform: "systems=device.getSystemNames()\n\nif len(systems) > 0:\n    for system\
      \ in systems:\n        if system.find(\"CP\") > -1:\n            evt.severity\
      \ = 5\n        if system.find(\"CA\") > -1:\n            evt.severity = 4\n\n\
      evt.component = \"Dead Letter Queue\"\nqueuesize_items = evt.message.split('\
      \ ')\nqueuesize = queuesize_items[len(queuesize_items) - 1]\ndlq = evt.eventKey.split('|')[1].split('_')[3]\n\
      evt.summary = \"Queuesize DLQ of %s is %s\" %(dlq, queuesize)\nevt.message =\
      \ \"Queuesize DLQ of %s is %s\" %(dlq, queuesize)\n"
  /Events/Status/AMQ/DLQNew: {}
  /Events/Status/ActiveMQ: {}
  /Events/Status/ActiveMQ/Broker:
    transform: evt.comp_type = '/App/AMQ'
  /Events/Status/ActiveMQ/DLQ:
    transform: "evt.comp_type = '/App/DLV_AMQ'\n\ntry:\n    msg = 'There are {} messages\
      \ in the DLQ {}'.format(int(float(evt.current)), evt.component)\n    evt.message\
      \ = msg\n    evt.summary = msg\nexcept:\n    pass"
  /Events/Status/ActiveMQ/Memory: {}
  /Events/Status/ActiveMQ/Queue:
    transform: "try:\n    msg = 'There are {} messages in the Queue {}'.format(int(float(evt.current)),\
      \ evt.component)\n    evt.message = msg\n    evt.summary = msg\nexcept:\n  \
      \  pass"
  /Events/Status/App: {}
  /Events/Status/App/Delivery: {}
  /Events/Status/App/Delivery/Job:
    transform: "import time\nimport datetime\n\nif 'missing' in evt.eventKey:\n  \
      \  value = int(float(evt.current))\n    if value > 1:\n        msg = 'Job {}\
      \ - {} messages missing'.format(component.name(), value)\n    else:\n      \
      \  msg = 'Job {} - {} message missing'.format(component.name(), value)\n   \
      \ evt.summary = msg\n    evt.message = msg\nelif 'job_age' in evt.eventKey:\n\
      \n    '''\n    'barcodeJob':             Runs once an hour between 18:00 and\
      \ 00:00\n    'depositJob':              Runs once an hour between 11:00 and\
      \ 12:00\n    'jmsNotificationJob':   Runs every 5 minutes\n    'uploadZipJob':\
      \          Runs at hour and 10 and 30 minutes\n    'validationJob':        \
      \   Runs at hour and 0, 25 and 45 minutes\n    '''\n\n    # The following should\
      \ be closer to cron format, and code should be handle more complex syntax\n\
      \    job_map = {\n                       'barcodeJob': [18, 0, 65],        \
      \   # running period start, end, max_value during running period\n         \
      \              'depositJob': [11, 12, 65],\n                       'jmsNotificationJob':\
      \ [0, 24, 10],\n                       'uploadZipJob': [0, 24, 45],\n      \
      \                 'validationJob': [0, 24, 30],\n                       }\n\n\
      \    current_time = datetime.datetime.now()\n    current_hour = current_time.hour\n\
      \    current_minute = current_time.minute\n    component_name = component.name()\n\
      \    age = int(round(float(evt.current), 0))\n    job_name = component_name.split()[0]\n\
      \n    job_specs = job_map[job_name]\n    run_start_hour = job_specs[0]\n   \
      \ run_stop_hour = job_specs[1]\n    run_threshold = job_specs[2]\n\n    if run_stop_hour\
      \ < run_start_hour:\n        if current_hour < run_start_hour:\n           \
      \ run_start_hour = 0\n        elif current_hour >= run_start_hour:\n       \
      \     run_stop_hour = 24\n\n    if run_start_hour <= current_hour < run_stop_hour:\n\
      \        # Within running period for jobs\n        pass\n    else:\n       \
      \    # Jobs aren't running anymore\n           if current_hour < run_start_hour:\n\
      \               run_threshold = (current_hour - run_stop_hour +24) * 60 + current_minute\
      \ + 5\n           elif current_hour >= run_stop_hour:\n               run_threshold\
      \ = (current_hour - run_stop_hour) * 60 + current_minute + 5\n\n    if age <\
      \ run_threshold:\n       evt.severity = 0\n    else:\n       evt.severity =\
      \ 5\n\n    msg = '{} - Job is {} minutes old - {}'.format(component_name, age,\
      \ run_threshold)\n    evt.summary = msg\n    evt.message = msg\n\n"
  /Events/Status/App/Delivery/Order:
    transform: "if 'order_validation_error' in evt.eventKey:\n    value = float(evt.current)\n\
      \    component_name = component.name()\n    msg = '{} - There are {} validation\
      \ errors'.format(component_name, int(value))\n    evt.message = msg\n    evt.summary\
      \ = msg\nelif 'order_missing_validation' in evt.eventKey:\n    value = float(evt.current)\n\
      \    component_name = component.name()\n    msg = '{} - There are {} validations\
      \ missing'.format(component_name, int(value))\n    evt.message = msg\n    evt.summary\
      \ = msg\nelif 'order_missing_barcode' in evt.eventKey:\n    value = float(evt.current)\n\
      \    component_name = component.name()\n    msg = '{} - There are {} barcodes\
      \ missing'.format(component_name, int(value))\n    evt.message = msg\n    evt.summary\
      \ = msg\nelif 'order_missing_deposit' in evt.eventKey:\n    value = float(evt.current)\n\
      \    component_name = component.name()\n    msg = '{} - There are {} deposits\
      \ missing'.format(component_name, int(value))\n    evt.message = msg\n    evt.summary\
      \ = msg\n\n\n"
  /Events/Status/Bamboo:
    transform: "import time\n\nif 'bamboo_queue_build_queue_length' in evt.eventKey:\n\
      \  local_hour = time.localtime()[3]\n  if not ( 5 < local_hour < 16): \n   \
      \   evt._action = 'drop'\n  msg = 'The Bamboo Build queue contains {} jobs'.format(int(float(evt.current)))\n\
      \  evt.message = msg\n  evt.summary = msg\n"
  /Events/Status/Blade:
    mappings:
      ComputeBladeCmosReset_BEGIN:
        eventClassKey: ucs|E4195203
        example: '[FSM:BEGIN]: Soft-reset server 1/1(FSM:sam:dme:ComputeBladeCmosReset)'
      ComputeBladeCmosReset_END:
        eventClassKey: ucs|E4195429
        example: '[FSM:END]: Soft-reset server 1/1(FSM:sam:dme:ComputeBladeCmosReset)'
      ComputeBladeDecommission_BEGIN:
        eventClassKey: ucs|E4195166
        example: '[FSM:BEGIN]: Decommission server 4/2(FSM:sam:dme:ComputeBladeDecommission)'
      ComputeBladeDecommission_END:
        eventClassKey: ucs|E4195433
        example: '[FSM:END]: Decommission server 4/5(FSM:sam:dme:ComputeBladeDecommission)'
      ComputeBladeHardReset_BEGIN:
        eventClassKey: ucs|E4195178
      ComputeBladeHardReset_END:
        eventClassKey: ucs|E4195439
      ComputeBladeHardShutdown_BEGIN:
        eventClassKey: ucs|E4195170
      ComputeBladeHardShutdown_END:
        eventClassKey: ucs|E4195437
      ComputeBladePowercycle_BEGIN:
        eventClassKey: ucs|E4195174
        example: '[FSM:BEGIN]: Power-cycle server 1/1(FSM:sam:dme:ComputeBladePowercycle)'
      ComputeBladePowercycle_END:
        eventClassKey: ucs|E4195443
        example: '[FSM:END]: Power-cycle server 1/1(FSM:sam:dme:ComputeBladePowercycle)'
      ComputeBladeSoftShutdown_BEGIN:
        eventClassKey: ucs|E4195168
      ComputeBladeSoftShutdown_END:
        eventClassKey: ucs|E4195447
      ComputeBladeTurnup_END:
        eventClassKey: ucs|E4195453
        example: '[FSM:END]: Power-on server 1/1(FSM:sam:dme:ComputeBladeTurnup)'
  /Events/Status/CIM_ManagedSystemElement:
    transform: "statusstr = evt.message.rsplit(' ', 1)[-1]\nstatus = not statusstr.replace('.','').isdigit()\
      \ and 3 or int(round(float(statusstr)))\ntry:\n    comp = component\nexcept\
      \ NameError:\n    from ZODB.transact import transact\n    for comp in device.getMonitoredComponents():\n\
      \        if comp.id == evt.component: break\n    else:\n        comp = None\n\
      if comp is not None:\n    if comp.status == status:\n        evt._action = 'drop'\n\
      \    else:\n        @transact\n        def updateDb():\n            comp.status\
      \ = status\n            if hasattr(comp, 'statusmap'):\n                col,evt.severity,state\
      \ = comp.statusmap.get(status,(0,evt.severity,'Unknown'))\n                if\
      \ hasattr(comp, 'state'):\n                    comp.state = state\n        updateDb()\n\
      \nif 'OperationalStatus' in evt.eventKey:\n    CIM_status = ['Unknown', 'Other',\
      \ 'OK', 'Degraded', 'Stressed', 'Predictive Failure', 'Error', 'Non-Recoverable\
      \ Error', 'Starting', 'Stopping', 'Stopped', 'In Service', 'No Contact', 'Lost\
      \ Communication', 'Aborted', 'Dormant', 'Supporting Entity in Error', 'Completed',\
      \ 'Power Mode', 'Relocating', 'DMTF Reserved', 'Vendor Reserved']\n    opStatusId\
      \ = int(float(evt.current))\n    try:\n        opStatus = CIM_status[opStatusId\
      \ ]\n    except IndexError:\n        opStatus = 'unknown (out of range)'\n\n\
      \    msg = 'Operational status of {} is {}'.format(evt.component, opStatus)\n\
      \    evt.message = msg\n    evt.summary = msg\n\n'''\nGetInstance CIM client\
      \ request and the job’s reference to examine the properties\nOperationalStatus\
      \ and StatusDescriptions. Possible values are 17 (completed) and 2 (OK),\nor\
      \ 6 (error). If the OperationalStatus contains 6, generally, the reason for\
      \ the error is found\nin the property ErrorDescription.\n'''\n"
  /Events/Status/CIM_NetworkAdapter:
    transform: "statusstr = evt.message.rsplit(' ', 1)[-1]\nstatus = not statusstr.replace('.','').isdigit()\
      \ and 3 or int(round(float(statusstr)))\ntry: comp = component\nexcept NameError:\n\
      \    from ZODB.transact import transact\n    for comp in device.getMonitoredComponents():\n\
      \        if comp.id == evt.component: break\n    else:\n        comp = None\n\
      if comp is not None:\n    if evt.eventKey == 'CIM_NetworkAdapter_OperationalStatus|OperationalStatusChange':\n\
      \        propName = 'operStatus'\n    elif evt.eventKey == 'CIM_NetworkAdapter_AdminStatus|AdminStatusChange':\n\
      \        propName = 'adminStatus'\n    else:\n        propName = 'status'\n\
      \    if getattr(comp, propName, None) == status:\n        evt._action = 'drop'\n\
      \    else:\n        @transact\n        def updateDb():\n            setattr(comp,\
      \ propName, status)\n        updateDb()\n"
  /Events/Status/CIM_NetworkPort:
    transform: "statusstr = evt.message.rsplit(' ', 1)[-1]\nstatus = not statusstr.replace('.','').isdigit()\
      \ and 3 or int(round(float(statusstr)))\ntry: comp = component\nexcept NameError:\n\
      \    from ZODB.transact import transact\n    for comp in device.getMonitoredComponents():\n\
      \        if comp.id == evt.component: break\n    else:\n        comp = None\n\
      if comp is not None:\n    if evt.eventKey == 'CIM_NetworkPort_OperationalStatus|OperationalStatusChange':\n\
      \        propName = 'operStatus'\n    elif evt.eventKey == 'CIM_NetworkPort_AdminStatus|AdminStatusChange':\n\
      \        propName = 'adminStatus'\n    else:\n        propName = 'status'\n\
      \    if getattr(comp, propName, None) == status:\n        evt._action = 'drop'\n\
      \    else:\n        @transact\n        def updateDb():\n            setattr(comp,\
      \ propName, status)\n        updateDb()\n"
  /Events/Status/CRL: {}
  /Events/Status/CRL/CRLCAError: {}
  /Events/Status/CRL/CRLFetchError: {}
  /Events/Status/CRL/CRLOutdated: {}
  /Events/Status/CRM: {}
  /Events/Status/CRM/InstanceNotRunning:
    transform: "'''\nevt.component = 'dvsdb'\nif float(evt.current) == 0.0:\n    evt.message\
      \ = 'dvsdb instance is down'\n    evt.summary = evt.message\n'''\nimport re\n\
      \nif 'crm_activemq' in evt.eventKey:\n    # \tcrm_activemq|crm_activemq_activemq-asf-service|activemq_asf\n\
      \    r = re.search('_activemq-(.*)-service', evt.eventKey)\n    if r:\n    \
      \    service = r.group(1)\n        how = getattr(evt, 'how', '')\n        if\
      \ how == 'violated':\n            msg = 'Cluster service {} is down'.format(service)\n\
      \        else:\n            msg = 'Cluster service {} is up'.format(service)\n\
      \        evt.summary = msg\n        evt.message = msg\n\n\n\n"
  /Events/Status/Certificate: {}
  /Events/Status/Chassis:
    mappings:
      EquipmentChassisRemoveChassis_BEGIN:
        eventClassKey: ucs|E4194984
        example: '[FSM:BEGIN]: chassis 4 removal(FSM:sam:dme:EquipmentChassisRemoveChassis)'
  /Events/Status/Cisco: {}
  /Events/Status/Cisco/AnyConnectSession: {}
  /Events/Status/CiscoTPPeripheral:
    transform: "import re\nmatch = re.match(r'threshold of peripheralError \\w+: current\
      \ value (\\d+)', evt.message)\nif match:\n    stateCode = int(match.group(1))\n\
      \    message = 'no error state found'\n    if stateCode == 0:\n        evt.severity\
      \ = 0\n    elif stateCode == 1:\n        message = 'non-specific error state\
      \ found'\n    elif stateCode == 2:\n        message = 'cabling issue detected'\n\
      \    elif stateCode == 3:\n        message = 'power issue detected'\n    elif\
      \ stateCode == 4:\n        message = 'management system configuration issue'\n\
      \    elif stateCode == 5:\n        message = 'telepresence system error'\n \
      \   elif stateCode == 6:\n        message = 'device error detected'\n    elif\
      \ stateCode == 7:\n        message = 'link issue detected'\n    evt.message\
      \ = evt.summary = message"
  /Events/Status/ControlCenter: {}
  /Events/Status/DLQ:
    transform: 'import re

      m = re.search("(.+?)\|", evt.eventKey)

      evt.message = m.groups()[0] + " " + evt.message

      evt.summary = evt.message

      '
  /Events/Status/DNS: {}
  /Events/Status/DataPower: {}
  /Events/Status/DataPower/Domain: {}
  /Events/Status/DataPower/GatewayService: {}
  /Events/Status/Flapping: {}
  /Events/Status/Ftp: {}
  /Events/Status/HA: {}
  /Events/Status/HP: {}
  /Events/Status/HPEVAConsistencySet:
    transform: "status = float(evt.message.split()[-1])\nstate = {0:'Unknown',1:'Other',2:'OK',3:'Degraded',4:'Stressed',5:'Predictive\
      \ Failure',6:'Error',7:'Non-Recoverable Error',8:'Starting',9:'Stopping',10:'Stopped',11:'In\
      \ Service',12:'No Contact',13:'Lost Communication',14:'Aborted',15:'Dormant',16:'Supporting\
      \ Entity in Error',17:'Completed',18:'Power Mode'}.get(status, 'Unknown')\n\
      evt.summary = \"%s (%s)\"%(evt.message, state)\nevt.severity = {0:3,1:3,2:0,3:4,4:3,5:3,6:4,7:5,8:2,9:3,10:4,11:2,12:3,13:4,14:4,15:3,16:4,17:0,18:3}.get(status,\
      \ 3)\nif evt.firstTime == evt.lastTime:\n    device.os.drgroups._getOb(evt.component).state\
      \ = state\n    txnCommit()\n"
  /Events/Status/HPEVADiskDrive:
    transform: "status = float(evt.message.split()[-1])\nstate = {0:'Unknown',1:'Other',2:'OK',3:'Degraded',4:'Stressed',5:'Predictive\
      \ Failure',6:'Error',7:'Non-Recoverable Error',8:'Starting',9:'Stopping',10:'Stopped',11:'In\
      \ Service',12:'No Contact',13:'Lost Communication',14:'Aborted',15:'Dormant',16:'Supporting\
      \ Entity in Error',17:'Completed',18:'Power Mode'}.get(status, 'Unknown')\n\
      evt.summary = \"%s (%s)\"%(evt.message, state)\nevt.severity = {0:3,1:3,2:0,3:4,4:3,5:3,6:4,7:5,8:2,9:3,10:4,11:2,12:3,13:4,14:4,15:3,16:4,17:0,18:3}.get(status,\
      \ 3)\nif evt.firstTime == evt.lastTime:\n    device.hw.harddisks._getOb(evt.component).state\
      \ = state\n    txnCommit()\n"
  /Events/Status/HPEVADiskFCPort:
    transform: "status = float(evt.message.split()[-1])\nstate = {0:'Unknown',1:'Other',2:'OK',3:'Degraded',4:'Stressed',5:'Predictive\
      \ Failure',6:'Error',7:'Non-Recoverable Error',8:'Starting',9:'Stopping',10:'Stopped',11:'In\
      \ Service',12:'No Contact',13:'Lost Communication',14:'Aborted',15:'Dormant',16:'Supporting\
      \ Entity in Error',17:'Completed',18:'Power Mode'}.get(status, 'Unknown')\n\
      evt.summary = \"%s (%s)\"%(evt.message, state)\nevt.severity = {0:3,1:3,2:0,3:4,4:3,5:3,6:4,7:5,8:2,9:3,10:4,11:2,12:3,13:4,14:4,15:3,16:4,17:0,18:3}.get(status,\
      \ 3)\nif evt.firstTime == evt.lastTime:\n    device.hw.fcports._getOb(evt.component).state\
      \ = state\n    txnCommit()\n"
  /Events/Status/HPEVAHostFCPort:
    transform: "status = float(evt.message.split()[-1])\nstate = {0:'Unknown',1:'Other',2:'OK',3:'Degraded',4:'Stressed',5:'Predictive\
      \ Failure',6:'Error',7:'Non-Recoverable Error',8:'Starting',9:'Stopping',10:'Stopped',11:'In\
      \ Service',12:'No Contact',13:'Lost Communication',14:'Aborted',15:'Dormant',16:'Supporting\
      \ Entity in Error',17:'Completed',18:'Power Mode'}.get(status, 'Unknown')\n\
      evt.summary = \"%s (%s)\"%(evt.message, state)\nevt.severity = {0:3,1:3,2:0,3:4,4:3,5:3,6:4,7:5,8:2,9:3,10:4,11:2,12:3,13:4,14:4,15:3,16:4,17:0,18:3}.get(status,\
      \ 3)\nif evt.firstTime == evt.lastTime:\n    device.hw.fcports._getOb(evt.component).state\
      \ = state\n    txnCommit()\n"
  /Events/Status/HPEVAStorageDiskEnclosure:
    transform: "status = float(evt.message.split()[-1])\nstate = {0:'Unknown',1:'Other',2:'OK',3:'Degraded',4:'Stressed',5:'Predictive\
      \ Failure',6:'Error',7:'Non-Recoverable Error',8:'Starting',9:'Stopping',10:'Stopped',11:'In\
      \ Service',12:'No Contact',13:'Lost Communication',14:'Aborted',15:'Dormant',16:'Supporting\
      \ Entity in Error',17:'Completed',18:'Power Mode'}.get(status, 'Unknown')\n\
      evt.summary = \"%s (%s)\"%(evt.message, state)\nevt.severity = {0:3,1:3,2:0,3:4,4:3,5:3,6:4,7:5,8:2,9:3,10:4,11:2,12:3,13:4,14:4,15:3,16:4,17:0,18:3}.get(status,\
      \ 3)\nif evt.firstTime == evt.lastTime:\n    device.hw.enclosures._getOb(evt.component).state\
      \ = state\n    txnCommit()\n"
  /Events/Status/HPEVAStoragePool:
    transform: "status = float(evt.message.split()[-1])\nstate = {0:'Unknown',1:'Other',2:'OK',3:'Degraded',4:'Stressed',5:'Predictive\
      \ Failure',6:'Error',7:'Non-Recoverable Error',8:'Starting',9:'Stopping',10:'Stopped',11:'In\
      \ Service',12:'No Contact',13:'Lost Communication',14:'Aborted',15:'Dormant',16:'Supporting\
      \ Entity in Error',17:'Completed',18:'Power Mode'}.get(status, 'Unknown')\n\
      evt.summary = \"%s (%s)\"%(evt.message, state)\nevt.severity = {0:3,1:3,2:0,3:4,4:3,5:3,6:4,7:5,8:2,9:3,10:4,11:2,12:3,13:4,14:4,15:3,16:4,17:0,18:3}.get(status,\
      \ 3)\nif evt.firstTime == evt.lastTime:\n    device.os.storagepools._getOb(evt.component).state\
      \ = state\n    txnCommit()\n"
  /Events/Status/HPEVAStorageProcessorCard:
    transform: "status = float(evt.message.split()[-1])\nstate = {0:'Unknown',1:'Other',2:'OK',3:'Degraded',4:'Stressed',5:'Predictive\
      \ Failure',6:'Error',7:'Non-Recoverable Error',8:'Starting',9:'Stopping',10:'Stopped',11:'In\
      \ Service',12:'No Contact',13:'Lost Communication',14:'Aborted',15:'Dormant',16:'Supporting\
      \ Entity in Error',17:'Completed',18:'Power Mode'}.get(status, 'Unknown')\n\
      evt.summary = \"%s (%s)\"%(evt.message, state)\nevt.severity = {0:3,1:3,2:0,3:4,4:3,5:3,6:4,7:5,8:2,9:3,10:4,11:2,12:3,13:4,14:4,15:3,16:4,17:0,18:3}.get(status,\
      \ 3)\nif evt.firstTime == evt.lastTime:\n    device.hw.cards._getOb(evt.component).state\
      \ = state\n    txnCommit()\n"
  /Events/Status/HPEVAStorageVolume:
    transform: "status = float(evt.message.split()[-1])\nstate = {0:'Unknown',1:'Other',2:'OK',3:'Degraded',4:'Stressed',5:'Predictive\
      \ Failure',6:'Error',7:'Non-Recoverable Error',8:'Starting',9:'Stopping',10:'Stopped',11:'In\
      \ Service',12:'No Contact',13:'Lost Communication',14:'Aborted',15:'Dormant',16:'Supporting\
      \ Entity in Error',17:'Completed',18:'Power Mode'}.get(status, 'Unknown')\n\
      evt.summary = \"%s (%s)\"%(evt.message, state)\nevt.severity = {0:3,1:3,2:0,3:4,4:3,5:3,6:4,7:5,8:2,9:3,10:4,11:2,12:3,13:4,14:4,15:3,16:4,17:0,18:3}.get(status,\
      \ 3)\nif evt.firstTime == evt.lastTime:\n    device.os.virtualdisks._getOb(evt.component).state\
      \ = state\n    txnCommit()\n"
  /Events/Status/HPServer: {}
  /Events/Status/HPServer/PowerSupply:
    mappings:
      cpqRackPowerSupplyFailed:
        eventClassKey: cpqRackPowerSupplyFailed
        example: snmp trap cpqRackPowerSupplyFailed
        transform: "for attr in evt.details._map:\n    if attr.startswith('cpqRack'):\n\
          \        if attr.startswith('cpqRackPowerSupplyPosition'):\n           \
          \ ps = getattr(evt, attr, '')\n        elif attr.startswith('cpqRackName'):\n\
          \            rackName = getattr(evt, attr, '')\n\nenclosureName = getattr(evt,\
          \ 'cpqRackPowerSupplyEnclosureName'+'.'+ps, '')\nserialNum = getattr(evt,\
          \ 'cpqRackPowerSupplySerialNum'+'.'+ps, '')\nsparePartNum = getattr(evt,\
          \ 'cpqRackPowerSupplySparePartNumber'+'.'+ps, '')\n\nsummary = 'The power\
          \ supply {} in enclosure {} in rack {} has failed.'.format(ps, enclosureName,\
          \ rackName)\nmsg = summary + '\\r\\nSpare part number: {}\\r\\nSerial number:\
          \ {}'.format(sparePartNum, serialNum)\n\nevt.summary = summary\nevt.message\
          \ = msg\n"
      cpqRackPowerSupplyOk:
        eventClassKey: cpqRackPowerSupplyOk
        example: snmp trap cpqRackPowerSupplyOk
        transform: "for attr in evt.details._map:\n    if attr.startswith('cpqRack'):\n\
          \        if attr.startswith('cpqRackPowerSupplyPosition'):\n           \
          \ ps = getattr(evt, attr, '')\n        elif attr.startswith('cpqRackName'):\n\
          \            rackName = getattr(evt, attr, '')\n\nenclosureName = getattr(evt,\
          \ 'cpqRackPowerSupplyEnclosureName'+'.'+ps, '')\nserialNum = getattr(evt,\
          \ 'cpqRackPowerSupplySerialNum'+'.'+ps, '')\nsparePartNum = getattr(evt,\
          \ 'cpqRackPowerSupplySparePartNumber'+'.'+ps, '')\n\nsummary = 'The power\
          \ supply {} in enclosure {} in rack {} is OK.'.format(ps, enclosureName,\
          \ rackName)\nmsg = summary + '\\r\\nSpare part number: {}\\r\\nSerial number:\
          \ {}'.format(sparePartNum, serialNum)\n\nevt.summary = summary\nevt.message\
          \ = msg\nevt.severity = 0\n"
  /Events/Status/HTTP:
    transform: "# Initialize existing_count.\nexisting_count = 0\n\n# Prefix for fingerprint\
      \ (dedupid).\ndedupfields = [evt.device, evt.component, evt.eventClass]\n\n\
      if 'getFacade' in globals() and getFacade('zep'):\n    # Zenoss >=4 method.\n\
      \    if getattr(evt, 'eventKey', False):\n        dedupfields += [evt.eventKey,\
      \ evt.severity]\n    else:\n        dedupfields += [evt.severity, evt.summary]\n\
      \n    zep = getFacade('zep')\n    evt_filter = zep.createEventFilter(\n    \
      \    status=(0,1,2),\n        fingerprint='|'.join(map(str, dedupfields)))\n\
      \n    try:\n    \tsummaries = zep.getEventSummaries(0, 1, filter=evt_filter)\n\
      \    except Exception as e:\n        evt.summary = str(e)\n    else: \n    \
      \    if summaries['total']:\n            existing_count = list(summaries['events'])[0]['count']\n\
      else:\n    # Zenoss <4 method.\n    if getattr(evt, 'eventKey', False):\n  \
      \      dedupfields += [evt.eventKey, evt.severity]\n    else:\n        dedupfields\
      \ += [evt.eventKey, evt.severity, evt.summary]\n\n    em = dmd.Events.getEventManager()\n\
      \    em.cleanCache()\n    try:\n        db_evt = em.getEventDetail(dedupid='|'.join(map(str,\
      \ dedupfields)))\n        existing_count = db_evt.count\n    except Exception:\n\
      \        pass\n\n# Do what you like with the count and event;\n# In this example\
      \ we up the severity to CRITICAL if the count is > 3\nif existing_count > 2:\n\
      \    evt.severity = 5\nelse:\n    evt.severity = 2\n\nevt.summary = '{} ({})'.format(evt.summary,\
      \ existing_count)\n"
  /Events/Status/Heartbeat: {}
  /Events/Status/IBMStorwizeCTDB: {}
  /Events/Status/IBMStorwizeCluster: {}
  /Events/Status/IBMStorwizeDrive: {}
  /Events/Status/IBMStorwizeEnclosure: {}
  /Events/Status/IBMStorwizeGPFS: {}
  /Events/Status/IBMStorwizeGPFS_FS: {}
  /Events/Status/IBMStorwizeHostState: {}
  /Events/Status/IBMStorwizeIO_GRP: {}
  /Events/Status/IBMStorwizeMDisk: {}
  /Events/Status/IBMStorwizeMDiskGrp: {}
  /Events/Status/IBMStorwizeMGMTNODE_REPL_STATE: {}
  /Events/Status/IBMStorwizeNetwork: {}
  /Events/Status/IBMStorwizeNode: {}
  /Events/Status/IBMStorwizeRC_Relationship: {}
  /Events/Status/IBMStorwizeSCM: {}
  /Events/Status/IBMStorwizeService: {}
  /Events/Status/IIS: {}
  /Events/Status/IRCD: {}
  /Events/Status/ISAM: {}
  /Events/Status/ISAM/ISAMJunction:
    transform: "if int(float(evt.current)) == 0:\n    msg = 'Junction {}: OK'.format(evt.component)\n\
      if int(float(evt.current)) == 1:\n    msg = 'Junction {}: failure '.format(evt.component)\n\
      elif int(float(evt.current)) == 2:\n    msg = 'Junction {}: major failure'.format(evt.component)\n\
      \nevt.message = msg\nevt.summary = msg"
  /Events/Status/ISAM/ISAMJunctionServer:
    transform: "if int(float(evt.current)) == 0:\n    msg = 'Junctioned Server {}:\
      \ OK'.format(evt.component)\nif int(float(evt.current)) == 1:\n    msg = 'Junctioned\
      \ Server {}: failure '.format(evt.component)\nelif int(float(evt.current)) ==\
      \ 2:\n    msg = 'Junctioned Server {}: major failure'.format(evt.component)\n\
      \nevt.message = msg\nevt.summary = msg"
  /Events/Status/ISAM/ISAMReverseProxy:
    transform: "if int(float(evt.current)) == 0:\n    msg = 'Reverse Proxy {}: OK'.format(evt.component)\n\
      if int(float(evt.current)) == 1:\n    msg = 'Reverse Proxy {}: failure with\
      \ a Junction'.format(evt.component)\nelif int(float(evt.current)) == 2:\n  \
      \  msg = 'Reverse Proxy {}: Reverse Proxy failure'.format(evt.component)\n\n\
      evt.message = msg\nevt.summary = msg"
  /Events/Status/ISAM/LogData:
    mappings:
      iss.0.2:
        eventClassKey: iss.0.2
        example: snmp trap iss.0.2
        sequence: 1001
        zProperties:
          zEventSeverity: 2
  /Events/Status/ISAMJunction:
    transform: "# Count events and adapt severity according to counts ################################\n\
      \n# Count identical events ###################################################\n\
      # Initialize existing_count.\nexisting_count = 0\n# Prefix for fingerprint (dedupid).\n\
      dedupfields = [evt.device, evt.component, evt.eventClass]\nif getattr(evt, 'eventKey',\
      \ False):\n    dedupfields += [evt.eventKey, evt.severity]      # Should always\
      \ be this one\nelse:\n    dedupfields += [evt.severity, evt.summary]\n\nzep\
      \ = getFacade('zep')\n# Filter for New and Ack'd event with same fingerprint\n\
      evt_filter = zep.createEventFilter(status=(0,1), fingerprint='|'.join(map(str,\
      \ dedupfields)))\ntry:\n\tsummaries = zep.getEventSummaries(0, 1, filter=evt_filter)\n\
      except:\n    exit()\n    \nif summaries['total']:\n    existing_count = list(summaries['events'])[0]['count']\n\
      \n# Look for child events ####################################################\n\
      # Filter for New and Ack'd event with severity higher or equal to warn, same\
      \ device, same Reverse Proxy and same Junction\nevt_filter = zep.createEventFilter(status=(0,1),\
      \ severity=(3,4,5), element_identifier=(evt.device), details={'isamRP': evt.isamRP,\
      \ 'isamJ': evt.isamJ})  # Adapt for other classes\ntry:\n    summaries = zep.getEventSummaries(0,\
      \ 10, filter=evt_filter)\nexcept:\n    exit()\n    \nfor e in summaries['events']:\n\
      \    if e['occurrence'][0]['event_class'].startswith('/Status/ISAMJunction'):\n\
      \        # If child event found, set current event severity to Info\n      \
      \  evt.severity = 2\n        break\nelse:\n    # No child event found\n    if\
      \ existing_count < 3:      # Must be higher than for Junction\n        # Delay\
      \ the alert, keep it to Info\n        evt.severity = 2\n    else:\n        #\
      \ Waited for delay, set it to measured severity\n        evt.severity = evt.measured_severity\n\
      \n"
  /Events/Status/ISAMJunctionServer:
    transform: "# Count events and adapt severity according to counts ################################\n\
      # Count identical events ###################################################\n\
      # Initialize existing_count.\nexisting_count = 0\n# Prefix for fingerprint (dedupid).\n\
      dedupfields = [evt.device, evt.component, evt.eventClass]\nif getattr(evt, 'eventKey',False):\n\
      \    dedupfields += [evt.eventKey, evt.severity]      # Should always be this\
      \ one\nelse:\n    dedupfields += [evt.severity, evt.summary]\n\nzep = getFacade('zep')\n\
      # Filter for New and Ack'd event with same fingerprint\nevt_filter = zep.createEventFilter(status=(0,1),\
      \ fingerprint='|'.join(map(str,dedupfields)))\ntry:\n    summaries = zep.getEventSummaries(0,\
      \ 1, filter=evt_filter)\nexcept:\n    exit()\nif summaries['total']:\n    existing_count\
      \ = list(summaries['events'])[0]['count']\n\n# No child event here #####################################################\n\
      if existing_count < 2:\n    # Delay the alert, keep it to Info\n    evt.severity\
      \ = 2\nelse:\n    # Waited for delay, set it to measured severity\n    evt.severity\
      \ = evt.measured_severity\n\n"
  /Events/Status/ISAMReverseProxy:
    transform: "# Count events and adapt severity according to counts ################################\n\
      \n# Count identical events ###################################################\n\
      # Initialize existing_count.\nexisting_count = 0\n# Prefix for fingerprint (dedupid).\n\
      dedupfields = [evt.device, evt.component, evt.eventClass]\nif getattr(evt, 'eventKey',\
      \ False):\n    dedupfields += [evt.eventKey, evt.severity]      # Should always\
      \ be this one\nelse:\n    dedupfields += [evt.severity, evt.summary]\n\nzep\
      \ = getFacade('zep')\n# Filter for New and Ack'd event with same fingerprint\n\
      evt_filter = zep.createEventFilter(status=(0,1), fingerprint='|'.join(map(str,\
      \ dedupfields)))\ntry:\n    summaries = zep.getEventSummaries(0, 1, filter=evt_filter)\n\
      except:\n    exit()\nif summaries['total']:\n    existing_count = list(summaries['events'])[0]['count']\n\
      \n# Look for child events ####################################################\n\
      # Filter for New and Ack'd event with severity higher or equal to warn, same\
      \ device and same Reverse Proxy\nevt_filter = zep.createEventFilter(status=(0,1),\
      \ severity=(3,4,5), element_identifier=(evt.device), details={'isamRP': evt.isamRP})\
      \  # Adapt for other classes\ntry:\n    summaries = zep.getEventSummaries(0,\
      \ 10, filter=evt_filter)\nexcept:\n    exit()\n    \nfor e in summaries['events']:\n\
      \    if e['occurrence'][0]['event_class'].startswith('/Status/ISAMJunction'):\n\
      \        # If child event found, set current event severity to Info\n      \
      \  evt.severity = 2\n        break\nelse:\n    # No child event found\n    if\
      \ existing_count < 4:      # Must be higher than for Junction\n        # Delay\
      \ the alert, keep it to Info\n        evt.severity = 2\n    else:\n        #\
      \ Waited for delay, set it to measured severity\n        evt.severity = evt.measured_severity\n\
      \n"
  /Events/Status/Interface:
    transform: "if 'bytesSentSec' in evt.eventKey:\n    val=float(evt.current)/1024/1024*8\n\
      \    msg = 'Outbound bandwidth on {} is {:.2f} Mbps'.format(evt.component, val)\n\
      \    evt.message = evt.message + '\\r\\n' + msg\n"
  /Events/Status/IpService:
    transform: "# Initialize existing_count.\nexisting_count = 0\n\n# Prefix for fingerprint\
      \ (dedupid)\ndedupfields = [evt.device, evt.component, evt.eventClass]\n \n\
      if getattr(evt, 'eventKey', False):\n    dedupfields += [evt.eventKey, evt.severity]\n\
      else:\n    dedupfields += [evt.severity, evt.summary]\n \nzep = getFacade('zep')\n\
      evt_filter = zep.createEventFilter(\n    status=(0,1,2),\n    fingerprint='|'.join(map(str,\
      \ dedupfields)))\n \ntry:\n\tsummaries = zep.getEventSummaries(0, 1, filter=evt_filter)\n\
      except:\n    summaries = {'total': 0}\n    existing_count = 0\n        \nif\
      \ summaries['total']:\n    existing_count = list(summaries['events'])[0]['count']\n\
      \ \nif existing_count <= 6:\n    evt.severity = 2   \n\n\n\n\n\n"
  /Events/Status/IronPort:
    transform: "if evt.message.startswith('Value changed from None'):\n    evt._action\
      \ = \"drop\"\n"
  /Events/Status/IronPort/License:
    transform: 'import re


      r = re.match(''(.*)Expiration_'', evt.eventKey)

      feature = r.group(1)


      msg = ''Licence expiration warning for {}''.format(feature)

      evt.summary = msg

      evt.message = msg + ''\r\nRemaining days: {}''.format(int(float(evt.current)))



      '
  /Events/Status/JMX: {}
  /Events/Status/JMX/Connection:
    transform: "import re\nr= re.search(r';.*(Failed to connect to.*?)\\[', evt.message)\n\
      if r:\n    msg = 'Connection is down: {}'.format(r.group(1))\n    evt.message\
      \ = msg\n    evt.summary = msg\nelse:\n    evt.message = evt.message + '\\r\\\
      n' + 're match not found'\n"
  /Events/Status/Jabber: {}
  /Events/Status/Jolokia:
    transform: "if 'AMQBroker' in evt.eventKey:\n    evt.comp_type = '/App/AMQ'\n\
      elif 'AMQQueue' in evt.eventKey and 'delivery.notifications' in evt.component\
      \ and evt.component.startswith('DLQ.'):\n    evt.comp_type = '/App/DLV_AMQ'\n\
      elif 'ActiveMQPlugin' in evt.eventKey:\n    evt.comp_type = '/App/AMQ'\nelse:\n\
      \    evt.comp_type = '/Unknown'\n\n# Initialize existing_count.\nexisting_count\
      \ = 0\n\n# Prefix for fingerprint (dedupid)\ndedupfields = [evt.device, evt.component,\
      \ evt.eventClass]\n \nif getattr(evt, 'eventKey', False):\n    dedupfields +=\
      \ [evt.eventKey, evt.severity]\nelse:\n    dedupfields += [evt.severity, evt.summary]\n\
      \ \nzep = getFacade('zep')\nevt_filter = zep.createEventFilter(\n    status=(0,1,2),\n\
      \    fingerprint='|'.join(map(str, dedupfields)))\n \ntry:\n\tsummaries = zep.getEventSummaries(0,\
      \ 1, filter=evt_filter)\nexcept:\n    summaries = {'total': 0}\n    existing_count\
      \ = 0\n        \nif summaries['total']:\n    existing_count = list(summaries['events'])[0]['count']\n\
      \ \nif existing_count <= 6:\n    evt.severity = 2   \n\n    "
  /Events/Status/Kerberos:
    mappings:
      KerberosAuthenticationFailure:
        eventClassKey: KerberosAuthenticationFailure
        zProperties:
          zEventSeverity: 5
      KerberosAuthenticationSuccess:
        eventClassKey: KerberosAuthenticationSuccess
        zProperties:
          zEventSeverity: 0
      KerberosFailure:
        eventClassKey: KerberosFailure
        zProperties:
          zEventSeverity: 5
      KerberosSuccess:
        eventClassKey: KerberosSuccess
        zProperties:
          zEventSeverity: 0
  /Events/Status/LDAP: {}
  /Events/Status/LDOM:
    transform: 'from ZenPacks.zenoss.SolarisMonitor import transforms

      transforms.process(evt, device, dmd, txnCommit)

      '
  /Events/Status/LDOM/vCPU:
    transform: 'from ZenPacks.zenoss.SolarisMonitor import transforms

      transforms.process(evt, device, dmd, txnCommit)

      '
  /Events/Status/Mail: {}
  /Events/Status/Nagios: {}
  /Events/Status/Ntp: {}
  /Events/Status/OCSP: {}
  /Events/Status/OCSP/OCSPQuery: {}
  /Events/Status/OCSP/OCSPResponseVerification: {}
  /Events/Status/OCSP/OCSPSuspiciousRevocationTime: {}
  /Events/Status/OCSP/OCSPUnexpectedResponse: {}
  /Events/Status/OSProcess:
    transform: "#from ConfigParser import SafeConfigParser\n\n#parser = SafeConfigParser()\n\
      #parser.read(\"/opt/zenoss/zenoss/etc/exc_process.conf\")\n\n#processes = parser.get('excluded_processes','processes').split(',')\n\
      #failedprocess = evt.summary.split(':')[1].strip()\n\n#if failedprocess in processes:\n\
      #    evt.summary = \"Process excluded!\"\n#    evt.severity = 0\n\n# Can probably\
      \ be removed and syntax could be better...\nif evt.summary.find('openoffice4')\
      \ > -1:\n    evt.eventClass = \"/Status/OpenOffice\"\n\n#if 'Process set contains\
      \ 0 running' in evt.message:\n#    evt.summary='All processes {} stopped'.format(evt.component)\n\
      \ntry:\n    proc = component.name()\nexcept:\n    proc = evt.component\nmsg\
      \ = ''\nif 'restarted' in evt.summary:\n    msg = 'Process \"{}\" restarted'.format(proc)\n\
      elif evt.severity > 2 and 'stopped' in evt.message:\n    msg = 'Process \"{}\"\
      \ stopped'.format(proc)\nelif evt.message.startswith('Process up'):\n    msg\
      \ = 'Process \"{}\" started'.format(proc)\n\n#evt.message = evt.message + '\\\
      r\\n' + msg\nif msg:\n    evt.message = msg\n    evt.summary = msg\n"
  /Events/Status/OpenOffice: {}
  /Events/Status/Perf:
    transform: "# SET OPERSTATUS ON IPINTERFACE COMPONENT\nif component is not None\
      \ and evt.eventKey == 'ifOperStatus_ifOperStatus|ifOperStatusChange':\n    evt._action='drop'\n\
      \    operStatus = int(float(getattr(evt,'current', '0')))\n    if component.operStatus\
      \ != operStatus:\n        @transact\n        def updateDb():\n            component.operStatus=operStatus\n\
      \        updateDb()\n"
  /Events/Status/Ping:
    transform: "msg = evt.message\nif msg.find('dp_mpg') > -1:\n    evt.message =\
      \ 'MPG {0} is down'.format(evt.device)\n    evt.summary = 'MPG {0} is down'.format(evt.device)\n\
      \    \n# Initialize existing_count.\nexisting_count = 0\n\ndev_class = evt.DeviceClass\t\
      # debug\n# Following line crashes\n# if evt.DeviceClass.startswith('/Server/Microsoft/Windows'):\n\
      if dev_class and (dev_class.startswith('/Server/Microsoft/Windows') or dev_class.startswith('/Server/SSH/Linux/API')):\n\
      \    # Prefix for fingerprint (dedupid)\n    dedupfields = [evt.device, evt.component,\
      \ evt.eventClass]\n \n    if getattr(evt, 'eventKey', False):\n        dedupfields\
      \ += [evt.eventKey, evt.severity]\n    else:\n        dedupfields += [evt.severity,\
      \ evt.summary]\n \n    zep = getFacade('zep')\n    evt_filter = zep.createEventFilter(\n\
      \        status=(0,1,2),\n        fingerprint='|'.join(map(str, dedupfields)))\n\
      \ \n    try:\n    \tsummaries = zep.getEventSummaries(0, 1, filter=evt_filter)\n\
      \    except:\n        summaries = {'total': 0}\n        existing_count = 0\n\
      \        \n    if summaries['total']:\n        existing_count = list(summaries['events'])[0]['count']\n\
      \ \n    if existing_count <= 6:\n        evt.severity = 2   \n"
    zProperties:
      zEventClearClasses:
      - /Status/Wmi/Conn
  /Events/Status/Ping/Lag:
    transform: "# Initialize existing_count.\nexisting_count = 0\n\n# Prefix for fingerprint\
      \ (dedupid)\ndedupfields = [evt.device, evt.component, evt.eventClass]\n \n\
      if getattr(evt, 'eventKey', False):\n    dedupfields += [evt.eventKey, evt.severity]\n\
      else:\n    dedupfields += [evt.severity, evt.summary]\n \nzep = getFacade('zep')\n\
      evt_filter = zep.createEventFilter(\n    status=(0,1,2),\n    fingerprint='|'.join(map(str,\
      \ dedupfields)))\n \ntry:\n\tsummaries = zep.getEventSummaries(0, 1, filter=evt_filter)\n\
      except:\n    summaries = {'total': 0}\n    existing_count = 0\n        \nif\
      \ summaries['total']:\n    existing_count = list(summaries['events'])[0]['count']\n\
      \ \nif existing_count <= 6:\n    evt.severity = 2   \n\n\n\n\n\n\n\n\n\n\n\n"
  /Events/Status/PyDBAPI:
    transform: "if 'Strings are not supported by Failure' in evt.message:\n    evt.severity\
      \ = 1\n"
  /Events/Status/RabbitMQ:
    mappings:
      rabbitmq_node_status:
        eventClassKey: rabbitmq_node_status
        sequence: 7
  /Events/Status/SQL: {}
  /Events/Status/Scality: {}
  /Events/Status/Snmp: {}
  /Events/Status/Snmp/F5 Labs:
    mappings:
      bigipARPConflict:
        evaluation: There is an ARP conflict.
        eventClassKey: bigipARPConflict
        example: snmp trap bigipARPConflict
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipActive:
        evaluation: The system is going into active mode.
        eventClassKey: bigipActive
        example: snmp trap bigipActive
        sequence: 12
        zProperties:
          zEventSeverity: 0
      bigipActiveActive:
        evaluation: The system is going into active-active mode.
        eventClassKey: bigipActiveActive
        example: snmp trap bigipActiveActive
        sequence: 12
        zProperties:
          zEventSeverity: 0
      bigipAgentRestart:
        evaluation: 'An indication that the agent has been restarted.

          (eg. It happens when a SIGHUP is received.)

          This does not imply anything about whether the configuration has

          changed (unlike the standard coldStart or warmStart traps)'
        eventClassKey: bigipAgentRestart
        example: snmp trap bigipAgentRestart
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipAgentStart
          zEventSeverity: 3
      bigipAgentShutdown:
        evaluation: An indication that the agent is in the process of being shut down.
        eventClassKey: bigipAgentShutdown
        example: snmp trap bigipAgentShutdown
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipAgentStart
          zEventSeverity: 3
      bigipAgentStart:
        evaluation: An indication that the agent has started running.
        eventClassKey: bigipAgentStart
        example: snmp trap bigipAgentStart
        sequence: 12
        zProperties:
          zEventSeverity: 0
      bigipAggrReaperStateChange:
        evaluation: "The aggressive reaper state changed. Aggressive reaper \nstate\
          \ changes indicate the system is moving into distress-mode \nfor DOS prevention."
        eventClassKey: bigipAggrReaperStateChange
        example: snmp trap bigipAggrReaperStateChange
        sequence: 21
        zProperties:
          zEventSeverity: 3
      bigipAomCpuTempTooHigh:
        evaluation: AOM reports the air temperature near the host CPU too high.
        eventClassKey: bigipAomCpuTempTooHigh
        example: snmp trap bigipAomCpuTempTooHigh
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipAsmBruteForceAttackDetected:
        evaluation: Brute force attack detected by Application Security Module.
        eventClassKey: bigipAsmBruteForceAttackDetected
        example: snmp trap bigipAsmBruteForceAttackDetected
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipAsmDosAttackDetected:
        evaluation: DoS attack detected by Application Security Module.
        eventClassKey: bigipAsmDosAttackDetected
        example: snmp trap bigipAsmDosAttackDetected
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipAsmFtpRequestBlocked:
        evaluation: 'The FTP request was blocked because it issued (at least one)

          violation(s) which is marked as blocking at the current active

          policy in Application Security Module.'
        eventClassKey: bigipAsmFtpRequestBlocked
        example: snmp trap bigipAsmFtpRequestBlocked
        sequence: 21
        zProperties:
          zEventSeverity: 3
      bigipAsmFtpRequestViolation:
        evaluation: "The FTP request issued a violation to the current active\npolicy.\
          \ This violation is marked as an alerting violation \nin that policy in\
          \ Application Security Module."
        eventClassKey: bigipAsmFtpRequestViolation
        example: snmp trap bigipAsmFtpRequestViolation
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipAsmRequestBlocked:
        evaluation: "The HTTP request was blocked because it issued (at least one)\n\
          violation(s) which is marked as blocking at the current active \npolicy\
          \ in Application Security Module."
        eventClassKey: bigipAsmRequestBlocked
        example: snmp trap bigipAsmRequestBlocked
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipAsmRequestViolation:
        evaluation: "The HTTP request issued a violation to the current active policy.\
          \ \nThis violation is marked as an alerting violation in that policy\nin\
          \ Application Security Module."
        eventClassKey: bigipAsmRequestViolation
        example: snmp trap bigipAsmRequestViolation
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipAsmSmtpRequestBlocked:
        evaluation: 'The SMTP request was blocked because it issued (at least one)

          violation(s) which is marked as blocking at the current active

          policy in Application Security Module.'
        eventClassKey: bigipAsmSmtpRequestBlocked
        example: snmp trap bigipAsmSmtpRequestBlocked
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipAsmSmtpRequestViolation:
        evaluation: "The SMTP request issued a violation to the current active\npolicy.\
          \ This violation is marked as an alerting violation \nin that policy in\
          \ Application Security Module."
        eventClassKey: bigipAsmSmtpRequestViolation
        example: snmp trap bigipAsmSmtpRequestViolation
        sequence: 21
        zProperties:
          zEventSeverity: 3
      bigipAuthFailed:
        evaluation: The login/sshd authentication has failed.
        eventClassKey: bigipAuthFailed
        example: snmp trap bigipAuthFailed
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipAvrAlertsMetricSmtp:
        evaluation: Deprecated! AVR alert metric state changed - notification for
          SMTP (based on SNMP).
        eventClassKey: bigipAvrAlertsMetricSmtp
        example: snmp trap bigipAvrAlertsMetricSmtp
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipAvrAlertsMetricSnmp:
        evaluation: AVR alert metric state changed - notification for SNMP.
        eventClassKey: bigipAvrAlertsMetricSnmp
        example: snmp trap bigipAvrAlertsMetricSnmp
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipBladeNoPower:
        evaluation: A blade lost power. The blade may be pulled out
        eventClassKey: bigipBladeNoPower
        example: snmp trap bigipBladeNoPower
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipBladeOffline:
        evaluation: A blade has failed - offline.
        eventClassKey: bigipBladeOffline
        example: snmp trap bigipBladeOffline
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipBladeTempHigh:
        evaluation: Blade temperature is too high.
        eventClassKey: bigipBladeTempHigh
        example: snmp trap bigipBladeTempHigh
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipChassisFanBad:
        evaluation: Chassis fan status is bad.
        eventClassKey: bigipChassisFanBad
        example: snmp trap bigipChassisFanBad
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipChassisPowerSupplyBad:
        evaluation: Chassis power supply status is bad.
        eventClassKey: bigipChassisPowerSupplyBad
        example: snmp trap bigipChassisPowerSupplyBad
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipChassisTempHigh:
        evaluation: Chassis temperature is too high.
        eventClassKey: bigipChassisTempHigh
        example: snmp trap bigipChassisTempHigh
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipChmandAlertFanTrayBad:
        evaluation: Chassis fan tray is bad or removed.
        eventClassKey: bigipChmandAlertFanTrayBad
        example: snmp trap bigipChmandAlertFanTrayBad
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipClusterdNoResponse:
        evaluation: The cluster daemon failed to respond for 10 or more seconds.
        eventClassKey: bigipClusterdNoResponse
        example: snmp trap bigipClusterdNoResponse
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipCompLimitExceeded:
        evaluation: The compression license limit is exceeded.
        eventClassKey: bigipCompLimitExceeded
        example: snmp trap bigipCompLimitExceeded
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipConfigLoaded:
        evaluation: 'Deprecated! The compoent which created this event has been

          deprecated.  The configuration was loaded.'
        eventClassKey: bigipConfigLoaded
        example: snmp trap bigipConfigLoaded
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipCpuFanSpeedBad:
        evaluation: CPU fan speed signal not received.
        eventClassKey: bigipCpuFanSpeedBad
        example: snmp trap bigipCpuFanSpeedBad
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipCpuFanSpeedLow:
        evaluation: CPU fan speed is too low.
        eventClassKey: bigipCpuFanSpeedLow
        example: snmp trap bigipCpuFanSpeedLow
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipCpuTempHigh:
        evaluation: CPU temperature is too high.
        eventClassKey: bigipCpuTempHigh
        example: snmp trap bigipCpuTempHigh
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipDiskPartitionGrowth:
        evaluation: "The disk partition exceeds the specified growth limit. \nBy default,\
          \ the limit is set to 5% of the total disk space.\nThe growth is difference\
          \ of two consecutive monitoring data."
        eventClassKey: bigipDiskPartitionGrowth
        example: snmp trap bigipDiskPartitionGrowth
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipDiskPartitionWarn:
        evaluation: "The disk partition free space is very limited, which is   \n\
          less than a specified limit. By default, the limit is set\nto 30% of total\
          \ disk space."
        eventClassKey: bigipDiskPartitionWarn
        example: snmp trap bigipDiskPartitionWarn
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipDosAttackStart:
        evaluation: A DOS attack start was detected.
        eventClassKey: bigipDosAttackStart
        example: snmp trap bigipDosAttackStart
        sequence: 12
        zProperties:
          zEventSeverity: 0
      bigipDosAttackStop:
        evaluation: A DOS attack stop was detected.
        eventClassKey: bigipDosAttackStop
        example: snmp trap bigipDosAttackStop
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipDosAttackStart
          zEventSeverity: 3
      bigipExternalLinkChange:
        evaluation: "An external interface link status changes.  \nFor a fixed port,\
          \ this is an occurrence when network cables \nare connected  or removed,\
          \ and the network is reconfigured; \nfor a pluggable port (such as a SFP\
          \ or XFP port), this happens \nwhen the pluggable unit is plugged in or\
          \ unplugged, \nor when a cable is connected or removed from a plugged port.\
          \  \nThe possible values are UP, DOWN, or UNPOPULATED."
        eventClassKey: bigipExternalLinkChange
        example: snmp trap bigipExternalLinkChange
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipFeatureFailed:
        evaluation: A high availability feature triggered action failed.
        eventClassKey: bigipFeatureFailed
        example: snmp trap bigipFeatureFailed
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipFeatureOnline
          zEventSeverity: 3
      bigipFeatureOnline:
        evaluation: A high availability feature is now responding.
        eventClassKey: bigipFeatureOnline
        example: snmp trap bigipFeatureOnline
        sequence: 12
        zProperties:
          zEventSeverity: 0
      bigipGtmAppAvail:
        evaluation: An application is becoming available in global management module.
        eventClassKey: bigipGtmAppAvail
        example: snmp trap bigipGtmAppAvail
        sequence: 12
        zProperties:
          zEventSeverity: 0
      bigipGtmAppNotAvail:
        evaluation: An application is becoming unavailable in global management module.
        eventClassKey: bigipGtmAppNotAvail
        example: snmp trap bigipGtmAppNotAvail
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipGtmAppAvail
          zEventSeverity: 3
      bigipGtmAppObjAvail:
        evaluation: An application object is becoming available in global management
          module.
        eventClassKey: bigipGtmAppObjAvail
        example: snmp trap bigipGtmAppObjAvail
        sequence: 12
        zProperties:
          zEventSeverity: 0
      bigipGtmAppObjNotAvail:
        evaluation: An application object is becoming unavailable in global management
          module.
        eventClassKey: bigipGtmAppObjNotAvail
        example: snmp trap bigipGtmAppObjNotAvail
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipGtmAppObjAvail
          zEventSeverity: 3
      bigipGtmBig3dSslCertExpired:
        evaluation: BIG-IP GTM BIG3D SSL Cert has expired.
        eventClassKey: bigipGtmBig3dSslCertExpired
        example: snmp trap bigipGtmBig3dSslCertExpired
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipGtmBig3dSslCertWillExpire:
        evaluation: BIG-IP GTM BIG3D SSL Cert will expire.
        eventClassKey: bigipGtmBig3dSslCertWillExpire
        example: snmp trap bigipGtmBig3dSslCertWillExpire
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipGtmBoxAvail:
        evaluation: A gtm machine (which equates to an iquery connect to a gtm machine)
          has gone UP
        eventClassKey: bigipGtmBoxAvail
        example: snmp trap bigipGtmBoxAvail
        sequence: 12
        zProperties:
          zEventSeverity: 0
      bigipGtmBoxNotAvail:
        evaluation: A gtm machine (which equates to an iquery connect to a gtm machine)
          has gone DOWN
        eventClassKey: bigipGtmBoxNotAvail
        example: snmp trap bigipGtmBoxNotAvail
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipGtmBoxAvail
          zEventSeverity: 3
      bigipGtmDcAvail:
        evaluation: A data center is becoming available in global traffic management
          module.
        eventClassKey: bigipGtmDcAvail
        example: snmp trap bigipGtmDcAvail
        sequence: 12
        zProperties:
          zEventSeverity: 0
      bigipGtmDcDisabled:
        evaluation: A data center is disabled in global traffic management module.
        eventClassKey: bigipGtmDcDisabled
        example: snmp trap bigipGtmDcDisabled
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipGtmDcEnabled
          zEventSeverity: 3
      bigipGtmDcEnabled:
        evaluation: A data center is enabled in global traffic management module.
        eventClassKey: bigipGtmDcEnabled
        example: snmp trap bigipGtmDcEnabled
        sequence: 12
        zProperties:
          zEventSeverity: 0
      bigipGtmDcNotAvail:
        evaluation: A data center is becoming unavailable in global traffic management
          module.
        eventClassKey: bigipGtmDcNotAvail
        example: snmp trap bigipGtmDcNotAvail
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipGtmDcAvail
          zEventSeverity: 3
      bigipGtmJoinedGroup:
        evaluation: BIG-IP GTM joined sync group.
        eventClassKey: bigipGtmJoinedGroup
        example: snmp trap bigipGtmJoinedGroup
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipGtmKeyGenerationExpiration:
        evaluation: DNSSEC Key generation has expired.
        eventClassKey: bigipGtmKeyGenerationExpiration
        example: snmp trap bigipGtmKeyGenerationExpiration
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipGtmKeyGenerationRollover:
        evaluation: DNSSEC Key generation has rolled over.
        eventClassKey: bigipGtmKeyGenerationRollover
        example: snmp trap bigipGtmKeyGenerationRollover
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipGtmLeftGroup:
        evaluation: BIG-IP GTM left sync group.
        eventClassKey: bigipGtmLeftGroup
        example: snmp trap bigipGtmLeftGroup
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipGtmLinkAvail:
        evaluation: A link is becoming available in global traffic management module.
        eventClassKey: bigipGtmLinkAvail
        example: snmp trap bigipGtmLinkAvail
        sequence: 12
        zProperties:
          zEventSeverity: 0
      bigipGtmLinkDisabled:
        evaluation: A link is disabled in global traffic management module.
        eventClassKey: bigipGtmLinkDisabled
        example: snmp trap bigipGtmLinkDisabled
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipGtmLinkEnabled
          zEventSeverity: 3
      bigipGtmLinkEnabled:
        evaluation: A link is enabled in global traffic management module.
        eventClassKey: bigipGtmLinkEnabled
        example: snmp trap bigipGtmLinkEnabled
        sequence: 12
        zProperties:
          zEventSeverity: 0
      bigipGtmLinkNotAvail:
        evaluation: A link is becoming unavailable in global traffic management module.
        eventClassKey: bigipGtmLinkNotAvail
        example: snmp trap bigipGtmLinkNotAvail
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipGtmLinkAvail
          zEventSeverity: 3
      bigipGtmPoolAvail:
        evaluation: A pool is becoming available in global traffic management module.
        eventClassKey: bigipGtmPoolAvail
        example: snmp trap bigipGtmPoolAvail
        sequence: 12
        zProperties:
          zEventAction: drop
          zEventSeverity: 0
      bigipGtmPoolDisabled:
        evaluation: A pool is disabled in global traffic management module.
        eventClassKey: bigipGtmPoolDisabled
        example: snmp trap bigipGtmPoolDisabled
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipGtmPoolEnabled
          zEventSeverity: 3
      bigipGtmPoolEnabled:
        evaluation: A pool is enabled in global traffic management module.
        eventClassKey: bigipGtmPoolEnabled
        example: snmp trap bigipGtmPoolEnabled
        sequence: 12
        zProperties:
          zEventSeverity: 0
      bigipGtmPoolMbrAvail:
        evaluation: A pool member is becoming available in global traffic management
          module.
        eventClassKey: bigipGtmPoolMbrAvail
        example: snmp trap bigipGtmPoolMbrAvail
        sequence: 12
        zProperties:
          zEventAction: drop
          zEventSeverity: 0
      bigipGtmPoolMbrDisabled:
        evaluation: A pool member is disabled in global traffic management module.
        eventClassKey: bigipGtmPoolMbrDisabled
        example: snmp trap bigipGtmPoolMbrDisabled
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipGtmPoolMbrEnabled
          zEventSeverity: 3
      bigipGtmPoolMbrEnabled:
        evaluation: A pool member is enabled in global traffic management module.
        eventClassKey: bigipGtmPoolMbrEnabled
        example: snmp trap bigipGtmPoolMbrEnabled
        sequence: 12
        zProperties:
          zEventSeverity: 0
      bigipGtmPoolMbrNotAvail:
        evaluation: A pool member is becoming unavailable in global traffic management
          module.
        eventClassKey: bigipGtmPoolMbrNotAvail
        example: snmp trap bigipGtmPoolMbrNotAvail
        sequence: 12
        zProperties:
          zEventAction: drop
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipGtmPoolMbrAvail
          zEventSeverity: 3
      bigipGtmPoolNotAvail:
        evaluation: A pool is becoming unavailable in global traffic management module.
        eventClassKey: bigipGtmPoolNotAvail
        example: snmp trap bigipGtmPoolNotAvail
        sequence: 12
        zProperties:
          zEventAction: drop
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipGtmPoolAvail
          zEventSeverity: 3
      bigipGtmProberPoolDisabled:
        evaluation: Prober Pool Disabled.
        eventClassKey: bigipGtmProberPoolDisabled
        example: snmp trap bigipGtmProberPoolDisabled
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipGtmProberPoolEnabled
          zEventSeverity: 3
      bigipGtmProberPoolEnabled:
        evaluation: Prober Pool Enabled.
        eventClassKey: bigipGtmProberPoolEnabled
        example: snmp trap bigipGtmProberPoolEnabled
        sequence: 12
        zProperties:
          zEventSeverity: 0
      bigipGtmProberPoolMbrDisabled:
        evaluation: Prober Pool Member Disabled.
        eventClassKey: bigipGtmProberPoolMbrDisabled
        example: snmp trap bigipGtmProberPoolMbrDisabled
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipGtmProberPoolMbrEnabled
          zEventSeverity: 3
      bigipGtmProberPoolMbrEnabled:
        evaluation: Prober Pool Member Enabled.
        eventClassKey: bigipGtmProberPoolMbrEnabled
        example: snmp trap bigipGtmProberPoolMbrEnabled
        sequence: 12
        zProperties:
          zEventSeverity: 0
      bigipGtmProberPoolMbrStatusChange:
        evaluation: Prober Pool Member Status Change.
        eventClassKey: bigipGtmProberPoolMbrStatusChange
        example: snmp trap bigipGtmProberPoolMbrStatusChange
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipGtmProberPoolMbrStatusChangeReason:
        evaluation: Prober Pool Member Status Change Reason.
        eventClassKey: bigipGtmProberPoolMbrStatusChangeReason
        example: snmp trap bigipGtmProberPoolMbrStatusChangeReason
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipGtmProberPoolStatusChange:
        evaluation: Prober Pool Status Change.
        eventClassKey: bigipGtmProberPoolStatusChange
        example: snmp trap bigipGtmProberPoolStatusChange
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipGtmProberPoolStatusChangeReason:
        evaluation: Prober Pool Status Change Reason.
        eventClassKey: bigipGtmProberPoolStatusChangeReason
        example: snmp trap bigipGtmProberPoolStatusChangeReason
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipGtmServerAvail:
        evaluation: A server is becoming available in global traffic management module.
        eventClassKey: bigipGtmServerAvail
        example: snmp trap bigipGtmServerAvail
        sequence: 12
        zProperties:
          zEventSeverity: 0
      bigipGtmServerDisabled:
        evaluation: A server is disabled in global traffic management module.
        eventClassKey: bigipGtmServerDisabled
        example: snmp trap bigipGtmServerDisabled
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipGtmServerEnabled
          zEventSeverity: 3
      bigipGtmServerEnabled:
        evaluation: A server is enabled in global traffic management module.
        eventClassKey: bigipGtmServerEnabled
        example: snmp trap bigipGtmServerEnabled
        sequence: 12
        zProperties:
          zEventSeverity: 0
      bigipGtmServerNotAvail:
        evaluation: A server is becoming unavailable in global traffic management
          module.
        eventClassKey: bigipGtmServerNotAvail
        example: snmp trap bigipGtmServerNotAvail
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipGtmServerAvail
          zEventSeverity: 3
      bigipGtmSslCertExpired:
        evaluation: BIG-IP GTM SSL Cert has expired.
        eventClassKey: bigipGtmSslCertExpired
        example: snmp trap bigipGtmSslCertExpired
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipGtmSslCertWillExpire:
        evaluation: BIG-IP GTM SSL Cert will expire.
        eventClassKey: bigipGtmSslCertWillExpire
        example: snmp trap bigipGtmSslCertWillExpire
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipGtmVsAvail:
        evaluation: A virtual server is becoming available in global traffic management
          module.
        eventClassKey: bigipGtmVsAvail
        example: snmp trap bigipGtmVsAvail
        sequence: 12
        zProperties:
          zEventAction: drop
          zEventSeverity: 0
      bigipGtmVsDisabled:
        evaluation: A virtual server is disabled in global traffic management module.
        eventClassKey: bigipGtmVsDisabled
        example: snmp trap bigipGtmVsDisabled
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipGtmVsEnabled
          zEventSeverity: 3
      bigipGtmVsEnabled:
        evaluation: A virtual server is enabled in global traffic management module.
        eventClassKey: bigipGtmVsEnabled
        example: snmp trap bigipGtmVsEnabled
        sequence: 12
        zProperties:
          zEventSeverity: 0
      bigipGtmVsNotAvail:
        evaluation: A virtual server is becoming unavailable in global traffic management
          module.
        eventClassKey: bigipGtmVsNotAvail
        example: snmp trap bigipGtmVsNotAvail
        sequence: 12
        zProperties:
          zEventAction: drop
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipGtmVsAvail
          zEventSeverity: 3
      bigipGtmWideIpAvail:
        evaluation: A wide IP is becoming available in global traffic management module.
        eventClassKey: bigipGtmWideIpAvail
        example: snmp trap bigipGtmWideIpAvail
        sequence: 12
        zProperties:
          zEventAction: drop
          zEventSeverity: 0
      bigipGtmWideIpDisabled:
        evaluation: A wide IP is disabled in global traffic management module.
        eventClassKey: bigipGtmWideIpDisabled
        example: snmp trap bigipGtmWideIpDisabled
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipGtmWideIpEnabled
          zEventSeverity: 3
      bigipGtmWideIpEnabled:
        evaluation: A wide IP is enabled in global traffic management module.
        eventClassKey: bigipGtmWideIpEnabled
        example: snmp trap bigipGtmWideIpEnabled
        sequence: 12
        zProperties:
          zEventSeverity: 0
      bigipGtmWideIpNotAvail:
        evaluation: A wide IP is becoming unavailable in global traffic management
          module.
        eventClassKey: bigipGtmWideIpNotAvail
        example: snmp trap bigipGtmWideIpNotAvail
        sequence: 12
        zProperties:
          zEventAction: drop
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipGtmWideIpAvail
          zEventSeverity: 3
      bigipHardDiskFailure:
        evaluation: 'Deprecated!  This object has been eliminated.

          The hard disk is failing.'
        eventClassKey: bigipHardDiskFailure
        example: snmp trap bigipHardDiskFailure
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipInetPortExhaustion:
        evaluation: The TMM has run out of source ports and cannot open new communications
          channels with other machines.
        eventClassKey: bigipInetPortExhaustion
        example: snmp trap bigipInetPortExhaustion
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipLibhalBladePoweredOff:
        evaluation: Blade is about to be powered off.
        eventClassKey: bigipLibhalBladePoweredOff
        example: snmp trap bigipLibhalBladePoweredOff
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipLibhalDiskBayRemoved:
        evaluation: Disk sled was removed from a bay.
        eventClassKey: bigipLibhalDiskBayRemoved
        example: snmp trap bigipLibhalDiskBayRemoved
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipLibhalSensorAlarmCritical:
        evaluation: Blade hardware sensor indicated critical alarm.
        eventClassKey: bigipLibhalSensorAlarmCritical
        example: snmp trap bigipLibhalSensorAlarmCritical
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipLibhalSsdLogicalDiskRemoved:
        evaluation: SSD logical disk was removed.
        eventClassKey: bigipLibhalSsdLogicalDiskRemoved
        example: snmp trap bigipLibhalSsdLogicalDiskRemoved
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipLibhalSsdPhysicalDiskRemoved:
        evaluation: SSD physical disk was removed.
        eventClassKey: bigipLibhalSsdPhysicalDiskRemoved
        example: snmp trap bigipLibhalSsdPhysicalDiskRemoved
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipLicenseExpired:
        evaluation: The license has expired.
        eventClassKey: bigipLicenseExpired
        example: snmp trap bigipLicenseExpired
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipLicenseFailed:
        evaluation: The license validation failed.
        eventClassKey: bigipLicenseFailed
        example: snmp trap bigipLicenseFailed
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipLogAlert:
        evaluation: 'Action must be taken immediately for the system to work

          properly.'
        eventClassKey: bigipLogAlert
        example: snmp trap bigipLogAlert
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipLogCrit:
        evaluation: The system is in a critical condition.
        eventClassKey: bigipLogCrit
        example: snmp trap bigipLogCrit
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipLogEmerg:
        evaluation: The system is in an unusable situation.
        eventClassKey: bigipLogEmerg
        example: snmp trap bigipLogEmerg
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipLogErr:
        evaluation: The system has some error conditions.
        eventClassKey: bigipLogErr
        example: snmp trap bigipLogErr
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipLogWarning:
        evaluation: The system is experiencing some warning conditions.
        eventClassKey: bigipLogWarning
        example: snmp trap bigipLogWarning
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipMemberRate:
        evaluation: A pool member has exceeded the allowed rate.
        eventClassKey: bigipMemberRate
        example: snmp trap bigipMemberRate
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipNetLinkDown:
        evaluation: "An internal interface link is down. This is for L1 and L2. \n\
          These are internal links within the box connecting the CPU \nand Switch\
          \ subsystems, which should never lose link. \nIf they do, it indicates a\
          \ serious problem."
        eventClassKey: bigipNetLinkDown
        example: snmp trap bigipNetLinkDown
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipNodeDown:
        evaluation: A node is detected DOWN.
        eventClassKey: bigipNodeDown
        example: snmp trap bigipNodeDown
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipNodeUp
          zEventSeverity: 3
      bigipNodeRate:
        evaluation: A node has exceeded the allowed rate.
        eventClassKey: bigipNodeRate
        example: snmp trap bigipNodeRate
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipNodeUp
          zEventSeverity: 3
      bigipNodeUp:
        evaluation: A node is detected UP.
        eventClassKey: bigipNodeUp
        example: snmp trap bigipNodeUp
        sequence: 12
        zProperties:
          zEventSeverity: 0
      bigipPacketRejected:
        evaluation: The packets are rejected.
        eventClassKey: bigipPacketRejected
        example: snmp trap bigipPacketRejected
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipRaidDiskFailure:
        evaluation: Disk failure in a RAID disk array.
        eventClassKey: bigipRaidDiskFailure
        example: snmp trap bigipRaidDiskFailure
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipServiceDown:
        evaluation: A service is detected DOWN.
        eventClassKey: bigipServiceDown
        example: snmp trap bigipServiceDown
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipServiceUp
          zEventSeverity: 3
      bigipServiceUp:
        evaluation: A service is detected UP.
        eventClassKey: bigipServiceUp
        example: snmp trap bigipServiceUp
        sequence: 12
        zProperties:
          zEventSeverity: 0
      bigipSsdMwiNearThreshold:
        evaluation: SSD disk wear-out indicator is near its threshold.
        eventClassKey: bigipSsdMwiNearThreshold
        example: snmp trap bigipSsdMwiNearThreshold
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipSsdMwiReachedThreshold:
        evaluation: SSD disk wear-out indicator has reached its threshold.
        eventClassKey: bigipSsdMwiReachedThreshold
        example: snmp trap bigipSsdMwiReachedThreshold
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipSslLimitExceeded:
        evaluation: "The SSL license limits are exceeded, \neither for TPS (Transactions\
          \ Per Second) or \nfor MPS (Megabits Per Second)."
        eventClassKey: bigipSslLimitExceeded
        example: snmp trap bigipSslLimitExceeded
        sequence: 21
        zProperties:
          zEventSeverity: 3
      bigipStandByFail:
        evaluation: In failover condition, this standby will not be able to go active.
        eventClassKey: bigipStandByFail
        example: snmp trap bigipStandByFail
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipStandby:
        evaluation: The system is going into standby mode.
        eventClassKey: bigipStandby
        example: snmp trap bigipStandby
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipActive
          zEventSeverity: 3
      bigipSystemCheckAlertCurrentHigh:
        evaluation: Current is too high.
        eventClassKey: bigipSystemCheckAlertCurrentHigh
        example: snmp trap bigipSystemCheckAlertCurrentHigh
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipSystemCheckAlertCurrentLow:
        evaluation: Current is too low.
        eventClassKey: bigipSystemCheckAlertCurrentLow
        example: snmp trap bigipSystemCheckAlertCurrentLow
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipSystemCheckAlertFanSpeedLow:
        evaluation: Fan speed is too low.
        eventClassKey: bigipSystemCheckAlertFanSpeedLow
        example: snmp trap bigipSystemCheckAlertFanSpeedLow
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipSystemCheckAlertMilliVoltageHigh:
        evaluation: Milli-Voltage is too high.
        eventClassKey: bigipSystemCheckAlertMilliVoltageHigh
        example: snmp trap bigipSystemCheckAlertMilliVoltageHigh
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipSystemCheckAlertMilliVoltageLow:
        evaluation: Milli-Voltage is too low.
        eventClassKey: bigipSystemCheckAlertMilliVoltageLow
        example: snmp trap bigipSystemCheckAlertMilliVoltageLow
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipSystemCheckAlertPowerHigh:
        evaluation: Power is too high.
        eventClassKey: bigipSystemCheckAlertPowerHigh
        example: snmp trap bigipSystemCheckAlertPowerHigh
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipSystemCheckAlertPowerLow:
        evaluation: Power is too low.
        eventClassKey: bigipSystemCheckAlertPowerLow
        example: snmp trap bigipSystemCheckAlertPowerLow
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipSystemCheckAlertTempHigh:
        evaluation: Temperature is too high.
        eventClassKey: bigipSystemCheckAlertTempHigh
        example: snmp trap bigipSystemCheckAlertTempHigh
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipSystemCheckAlertVoltageHigh:
        evaluation: Voltage is too high.
        eventClassKey: bigipSystemCheckAlertVoltageHigh
        example: snmp trap bigipSystemCheckAlertVoltageHigh
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipSystemCheckAlertVoltageLow:
        evaluation: Voltage is too low.
        eventClassKey: bigipSystemCheckAlertVoltageLow
        example: snmp trap bigipSystemCheckAlertVoltageLow
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipTamdAlert:
        evaluation: 'Too many authentication failures (> 60) in 1 second to

          TMM (Traffic Management Module).'
        eventClassKey: bigipTamdAlert
        example: snmp trap bigipTamdAlert
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipUnsolicitedRepliesExceededThreshold:
        evaluation: 'The DNS cache object received unsolicited query replies

          exceeding a configured threshold.'
        eventClassKey: bigipUnsolicitedRepliesExceededThreshold
        example: snmp trap bigipUnsolicitedRepliesExceededThreshold
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipVcmpAlertsVcmpHBDetected:
        evaluation: A VCMP guest heartbeat is detected or regained.
        eventClassKey: bigipVcmpAlertsVcmpHBDetected
        example: snmp trap bigipVcmpAlertsVcmpHBDetected
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipVcmpAlertsVcmpHBLost:
        evaluation: A VCMP guest heartbeat is lost.
        eventClassKey: bigipVcmpAlertsVcmpHBLost
        example: snmp trap bigipVcmpAlertsVcmpHBLost
        sequence: 12
        zProperties:
          zEventSeverity: 3
      bigipVcmpAlertsVcmpPowerOff:
        evaluation: A VCMP guest is powered off.
        eventClassKey: bigipVcmpAlertsVcmpPowerOff
        example: snmp trap bigipVcmpAlertsVcmpPowerOff
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/bigipVcmpAlertsVcmpPowerOn
          zEventSeverity: 3
      bigipVcmpAlertsVcmpPowerOn:
        evaluation: A VCMP guest is powered on from a suspended or powered off state.
        eventClassKey: bigipVcmpAlertsVcmpPowerOn
        example: snmp trap bigipVcmpAlertsVcmpPowerOn
        sequence: 12
        zProperties:
          zEventSeverity: 0
      bigipVirtualRate:
        evaluation: A virtual has exceeded the allowed rate.
        eventClassKey: bigipVirtualRate
        example: snmp trap bigipVirtualRate
        sequence: 12
        zProperties:
          zEventSeverity: 3
      emASMSigInstallComplete:
        evaluation: ASM signature has been installed on a managed device.
        eventClassKey: emASMSigInstallComplete
        example: snmp trap emASMSigInstallComplete
        sequence: 12
        zProperties:
          zEventSeverity: 0
      emASMSigInstallFailed:
        evaluation: ASM signature installation has failed.
        eventClassKey: emASMSigInstallFailed
        example: snmp trap emASMSigInstallFailed
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/emASMSigInstallComplete
          zEventSeverity: 3
      emASMSigUpdateAvailable:
        evaluation: ASM signature update is available.
        eventClassKey: emASMSigUpdateAvailable
        example: snmp trap emASMSigUpdateAvailable
        sequence: 12
        zProperties:
          zEventSeverity: 0
      emASMSigUpdateFailed:
        evaluation: ASM signature update failed.
        eventClassKey: emASMSigUpdateFailed
        example: snmp trap emASMSigUpdateFailed
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/emASMSigUpdateAvailable
          zEventSeverity: 3
      emCertificateExpiration:
        evaluation: A device certificate will expire soon.
        eventClassKey: emCertificateExpiration
        example: snmp trap emCertificateExpiration
        sequence: 12
        zProperties:
          zEventSeverity: 3
      emCpuUsage:
        evaluation: The cpu is exceeding configured usage limits.
        eventClassKey: emCpuUsage
        example: snmp trap emCpuUsage
        sequence: 12
        zProperties:
          zEventSeverity: 3
      emDeviceActiveMode:
        evaluation: A device changed from non-ACTIVE to ACTIVE state.
        eventClassKey: emDeviceActiveMode
        example: snmp trap emDeviceActiveMode
        sequence: 12
        zProperties:
          zEventSeverity: 3
      emDeviceClockSkew:
        evaluation: A device clock is out of sync with EM.
        eventClassKey: emDeviceClockSkew
        example: snmp trap emDeviceClockSkew
        sequence: 12
        zProperties:
          zEventSeverity: 3
      emDeviceConfigSettingChanged:
        evaluation: A configuration has been changed on a device.
        eventClassKey: emDeviceConfigSettingChanged
        example: snmp trap emDeviceConfigSettingChanged
        sequence: 12
        zProperties:
          zEventSeverity: 3
      emDeviceConfigSync:
        evaluation: A device's configuration is out of sync with its peer.
        eventClassKey: emDeviceConfigSync
        example: snmp trap emDeviceConfigSync
        sequence: 12
        zProperties:
          zEventSeverity: 3
      emDeviceForcedOfflineMode:
        evaluation: A device changed from non-FORCED OFFLINE to FORCED OFFLINE state.
        eventClassKey: emDeviceForcedOfflineMode
        example: snmp trap emDeviceForcedOfflineMode
        sequence: 12
        zProperties:
          zEventSeverity: 3
      emDeviceImpaired:
        evaluation: An managed device is impaired.
        eventClassKey: emDeviceImpaired
        example: snmp trap emDeviceImpaired
        sequence: 12
        zProperties:
          zEventSeverity: 3
      emDeviceOfflineMode:
        evaluation: A device changed from non-OFFLINE to OFFLINE state.
        eventClassKey: emDeviceOfflineMode
        example: snmp trap emDeviceOfflineMode
        sequence: 12
        zProperties:
          zEventSeverity: 3
      emDeviceStandbyMode:
        evaluation: A device changed from non-STANDBY to STANDBY state.
        eventClassKey: emDeviceStandbyMode
        example: snmp trap emDeviceStandbyMode
        sequence: 12
        zProperties:
          zEventSeverity: 3
      emDeviceUnreachable:
        evaluation: An managed device is unreachable.
        eventClassKey: emDeviceUnreachable
        example: snmp trap emDeviceUnreachable
        sequence: 12
        zProperties:
          zEventSeverity: 3
      emDiskUsage:
        evaluation: A disk partition is exceeding configured usage limits.
        eventClassKey: emDiskUsage
        example: snmp trap emDiskUsage
        sequence: 12
        zProperties:
          zEventSeverity: 3
      emGatherServiceContractFailure:
        evaluation: Gathering service contract end date failed.
        eventClassKey: emGatherServiceContractFailure
        example: snmp trap emGatherServiceContractFailure
        sequence: 12
        zProperties:
          zEventSeverity: 3
      emHaSyncFailed:
        evaluation: EM HA Sync has failed.
        eventClassKey: emHaSyncFailed
        example: snmp trap emHaSyncFailed
        sequence: 12
        zProperties:
          zEventSeverity: 3
      emHotfixInstallComplete:
        evaluation: A hotfix has been installed on a managed device.
        eventClassKey: emHotfixInstallComplete
        example: snmp trap emHotfixInstallComplete
        sequence: 12
        zProperties:
          zEventSeverity: 0
      emHotfixInstallFailed:
        evaluation: A hotfix installation has failed.
        eventClassKey: emHotfixInstallFailed
        example: snmp trap emHotfixInstallFailed
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/emHotfixInstallComplete
          zEventSeverity: 3
      emMemoryUsage:
        evaluation: The system memory is exceeding configured usage limits.
        eventClassKey: emMemoryUsage
        example: snmp trap emMemoryUsage
        sequence: 12
        zProperties:
          zEventSeverity: 3
      emPerformanceStorageCap:
        evaluation: Performance storage capacity is lower than the amount of space
          reserved.
        eventClassKey: emPerformanceStorageCap
        example: snmp trap emPerformanceStorageCap
        sequence: 12
        zProperties:
          zEventSeverity: 3
      emPerformanceStorageDays:
        evaluation: Performance storage capacity is about to fall below configured
          number of days.
        eventClassKey: emPerformanceStorageDays
        example: snmp trap emPerformanceStorageDays
        sequence: 12
        zProperties:
          zEventSeverity: 3
      emPerformanceThreshold:
        evaluation: Threshold has been violated for a performance-data object.
        eventClassKey: emPerformanceThreshold
        example: snmp trap emPerformanceThreshold
        sequence: 12
        zProperties:
          zEventSeverity: 3
      emRaidDriveFailureDetected:
        evaluation: The system RAID drive failure has been detected.
        eventClassKey: emRaidDriveFailureDetected
        example: snmp trap emRaidDriveFailureDetected
        sequence: 12
        zProperties:
          zEventSeverity: 3
      emRaidDriveRebuildComplete:
        evaluation: The system RAID drive rebuild is complete.
        eventClassKey: emRaidDriveRebuildComplete
        example: snmp trap emRaidDriveRebuildComplete
        sequence: 12
        zProperties:
          zEventSeverity: 0
      emSchedBackupFailed:
        evaluation: Scheduled performance data backup has failed.
        eventClassKey: emSchedBackupFailed
        example: snmp trap emSchedBackupFailed
        sequence: 12
        zProperties:
          zEventSeverity: 3
      emScheduledArchiveFailed:
        evaluation: A scheduled configuration archive failed.
        eventClassKey: emScheduledArchiveFailed
        example: snmp trap emScheduledArchiveFailed
        sequence: 12
        zProperties:
          zEventSeverity: 3
      emServiceContractExpiry:
        evaluation: Device service contract will expire soon.
        eventClassKey: emServiceContractExpiry
        example: snmp trap emServiceContractExpiry
        sequence: 12
        zProperties:
          zEventSeverity: 3
      emSoftwareInstallComplete:
        evaluation: Software installation has completed.
        eventClassKey: emSoftwareInstallComplete
        example: snmp trap emSoftwareInstallComplete
        sequence: 12
        zProperties:
          zEventSeverity: 0
      emSoftwareInstallFailed:
        evaluation: Software installation has failed.
        eventClassKey: emSoftwareInstallFailed
        example: snmp trap emSoftwareInstallFailed
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/emSoftwareInstallComplete
          zEventSeverity: 3
      emStatsCollectionRateCap:
        evaluation: Performance-monitoring data collection rate exceeds recommended
          limit
        eventClassKey: emStatsCollectionRateCap
        example: snmp trap emStatsCollectionRateCap
        sequence: 12
        zProperties:
          zEventSeverity: 3
      emStatsDBConnectivityLost:
        evaluation: Statistics database connectivity is lost.
        eventClassKey: emStatsDBConnectivityLost
        example: snmp trap emStatsDBConnectivityLost
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/emStatsDBConnectivityRestored
          zEventSeverity: 3
      emStatsDBConnectivityRestored:
        evaluation: Statistics database connectivity is restored.
        eventClassKey: emStatsDBConnectivityRestored
        example: snmp trap emStatsDBConnectivityRestored
        sequence: 12
        zProperties:
          zEventSeverity: 0
      loadBalTrapAddUnit:
        evaluation: Adding unit. This BIG-IP has taken responsibility for a new unit
          id.
        eventClassKey: loadBalTrapAddUnit
        example: snmp trap loadBalTrapAddUnit
        sequence: 12
        zProperties:
          zEventSeverity: 3
      loadBalTrapDenial:
        evaluation: REQUEST DENIAL
        eventClassKey: loadBalTrapDenial
        example: snmp trap loadBalTrapDenial
        sequence: 12
        zProperties:
          zEventSeverity: 3
      loadBalTrapLogin:
        evaluation: Root Login.
        eventClassKey: loadBalTrapLogin
        example: snmp trap loadBalTrapLogin
        sequence: 12
        zProperties:
          zEventSeverity: 3
      loadBalTrapMisc:
        evaluation: Uncategorized trap.
        eventClassKey: loadBalTrapMisc
        example: snmp trap loadBalTrapMisc
        sequence: 12
        zProperties:
          zEventSeverity: 3
      loadBalTrapRemoveUnit:
        evaluation: Removing unit. Potential failover of this BIG-IP.
        eventClassKey: loadBalTrapRemoveUnit
        example: snmp trap loadBalTrapRemoveUnit
        sequence: 12
        zProperties:
          zEventSeverity: 3
      loadBalTrapReset:
        evaluation: System Reset.
        eventClassKey: loadBalTrapReset
        example: snmp trap loadBalTrapReset
        sequence: 12
        zProperties:
          zEventSeverity: 3
      loadBalTrapServiceDown:
        evaluation: Service Came Down.
        eventClassKey: loadBalTrapServiceDown
        example: snmp trap loadBalTrapServiceDown
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/loadBalTrapServiceUP
          zEventSeverity: 3
      loadBalTrapServiceUP:
        evaluation: Service Came Up.
        eventClassKey: loadBalTrapServiceUP
        example: snmp trap loadBalTrapServiceUP
        sequence: 12
        zProperties:
          zEventSeverity: 0
      threednsTrapCRCFailure:
        evaluation: CRC failure.
        eventClassKey: threednsTrapCRCFailure
        example: snmp trap threednsTrapCRCFailure
        sequence: 12
        zProperties:
          zEventSeverity: 3
      threednsTrapServerGreenToRed:
        evaluation: Server change from green to red status.
        eventClassKey: threednsTrapServerGreenToRed
        example: snmp trap threednsTrapServerGreenToRed
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/threednsTrapServerRedToGreen
          zEventSeverity: 3
      threednsTrapServerRedToGreen:
        evaluation: Server change from red to green status.
        eventClassKey: threednsTrapServerRedToGreen
        example: snmp trap threednsTrapServerRedToGreen
        sequence: 12
        zProperties:
          zEventSeverity: 0
      threednsTrapVSGreenToRed:
        evaluation: Virtual server change from green to red status.
        eventClassKey: threednsTrapVSGreenToRed
        example: snmp trap threednsTrapVSGreenToRed
        sequence: 12
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/F5 Labs/instances/threednsTrapVSRedToGreen
          zEventSeverity: 3
      threednsTrapVSRedToGreen:
        evaluation: Virtual server change from red to green status.
        eventClassKey: threednsTrapVSRedToGreen
        example: snmp trap threednsTrapVSRedToGreen
        sequence: 12
        zProperties:
          zEventSeverity: 0
    transform: 'from ZenPacks.zenoss.BigIpMonitor.transforms import *


      process_trap(evt)'
  /Events/Status/Snmp/NSNotify:
    mappings:
      nsNotifyRestart:
        eventClassKey: nsNotifyRestart
        example: snmp trap nsNotifyRestart
        sequence: 7
      nsNotifyShutdown:
        eventClassKey: nsNotifyShutdown
        example: snmp trap nsNotifyShutdown
        sequence: 7
        zProperties:
          zEventSeverity: 0
  /Events/Status/Snmp/Proliant:
    mappings:
      alarmInternal:
        eventClassKey: alarmInternal
        example: snmp trap alarmInternal
        sequence: 101
      alarmSensorInternal:
        eventClassKey: alarmSensorInternal
        example: snmp trap alarmSensorInternal
        sequence: 101
      alarmSensorWaterCoolUnit:
        eventClassKey: alarmSensorWaterCoolUnit
        example: snmp trap alarmSensorWaterCoolUnit
        sequence: 101
      alarmWaterCoolUnit:
        eventClassKey: alarmWaterCoolUnit
        example: snmp trap alarmWaterCoolUnit
        sequence: 101
      cpqClusterDegraded:
        evaluation: 'This trap will be sent any time the condition of the cluster

          becomes degraded.'
        eventClassKey: cpqClusterDegraded
        example: snmp trap cpqClusterDegraded
        zProperties:
          zEventSeverity: 3
      cpqClusterFailed:
        evaluation: 'This trap will be sent any time the condition of the cluster

          becomes failed.'
        eventClassKey: cpqClusterFailed
        example: snmp trap cpqClusterFailed
        zProperties:
          zEventSeverity: 3
      cpqClusterNetworkDegraded:
        evaluation: 'This trap will be sent any time the condition of a cluster

          network becomes degraded.


          User Action: Make a note of the cluster network name then

          check the network for the cause of the degraded condition.'
        eventClassKey: cpqClusterNetworkDegraded
        example: snmp trap cpqClusterNetworkDegraded
        zProperties:
          zEventSeverity: 3
      cpqClusterNetworkFailed:
        evaluation: 'This trap will be sent any time the condition of a cluster

          network becomes failed.


          User Action: Make a note of the cluster network name

          then check the network for the cause of the failure.'
        eventClassKey: cpqClusterNetworkFailed
        example: snmp trap cpqClusterNetworkFailed
        zProperties:
          zEventSeverity: 3
      cpqClusterNodeDegraded:
        evaluation: 'This trap will be sent any time the condition of a node in

          the cluster becomes degraded.


          User Action: Make a note of the cluster node name then

          check the node for the cause of the degraded condition.'
        eventClassKey: cpqClusterNodeDegraded
        example: snmp trap cpqClusterNodeDegraded
        zProperties:
          zEventSeverity: 3
      cpqClusterNodeFailed:
        evaluation: 'This trap will be sent any time the condition of a node in

          the cluster becomes failed.


          User Action: Make a note of the cluster node name

          then check the node for the cause of the failure.'
        eventClassKey: cpqClusterNodeFailed
        example: snmp trap cpqClusterNodeFailed
        zProperties:
          zEventSeverity: 3
      cpqClusterResourceDegraded:
        evaluation: 'This trap will be sent any time the condition of a cluster

          resource becomes degraded.


          User Action: Make a note of the cluster resource name then

          check the resource for the cause of the degraded condition.'
        eventClassKey: cpqClusterResourceDegraded
        example: snmp trap cpqClusterResourceDegraded
        zProperties:
          zEventSeverity: 3
      cpqClusterResourceFailed:
        evaluation: 'This trap will be sent any time the condition of a cluster

          resource becomes failed.


          User Action: Make a note of the cluster resource name

          then check the resource for the cause of the failure.'
        eventClassKey: cpqClusterResourceFailed
        example: snmp trap cpqClusterResourceFailed
        zProperties:
          zEventSeverity: 3
      cpqCmcSetupChanged:
        eventClassKey: cpqCmcSetupChanged
        example: snmp trap cpqCmcSetupChanged
        sequence: 101
      cpqCmcalarm1:
        eventClassKey: cpqCmcalarm1
        example: snmp trap cpqCmcalarm1
        sequence: 101
      cpqCmcalarm2:
        eventClassKey: cpqCmcalarm2
        example: snmp trap cpqCmcalarm2
        sequence: 101
      cpqCmcalarmAux1:
        eventClassKey: cpqCmcalarmAux1
        example: snmp trap cpqCmcalarmAux1
        sequence: 101
      cpqCmcalarmAux2:
        eventClassKey: cpqCmcalarmAux2
        example: snmp trap cpqCmcalarmAux2
        sequence: 101
      cpqCmcalarmFan1:
        eventClassKey: cpqCmcalarmFan1
        example: snmp trap cpqCmcalarmFan1
        sequence: 101
      cpqCmcalarmFan2:
        eventClassKey: cpqCmcalarmFan2
        example: snmp trap cpqCmcalarmFan2
        sequence: 101
      cpqCmcalarmHumidity:
        eventClassKey: cpqCmcalarmHumidity
        example: snmp trap cpqCmcalarmHumidity
        sequence: 101
      cpqCmcalarmInput1:
        eventClassKey: cpqCmcalarmInput1
        example: snmp trap cpqCmcalarmInput1
        sequence: 101
      cpqCmcalarmInput2:
        eventClassKey: cpqCmcalarmInput2
        example: snmp trap cpqCmcalarmInput2
        sequence: 101
      cpqCmcalarmInput3:
        eventClassKey: cpqCmcalarmInput3
        example: snmp trap cpqCmcalarmInput3
        sequence: 101
      cpqCmcalarmInput4:
        eventClassKey: cpqCmcalarmInput4
        example: snmp trap cpqCmcalarmInput4
        sequence: 101
      cpqCmcalarmLock1:
        eventClassKey: cpqCmcalarmLock1
        example: snmp trap cpqCmcalarmLock1
        sequence: 101
      cpqCmcalarmLock1Dev:
        eventClassKey: cpqCmcalarmLock1Dev
        example: snmp trap cpqCmcalarmLock1Dev
        sequence: 101
      cpqCmcalarmLock2:
        eventClassKey: cpqCmcalarmLock2
        example: snmp trap cpqCmcalarmLock2
        sequence: 101
      cpqCmcalarmLock2Dev:
        eventClassKey: cpqCmcalarmLock2Dev
        example: snmp trap cpqCmcalarmLock2Dev
        sequence: 101
      cpqCmcalarmShock:
        eventClassKey: cpqCmcalarmShock
        example: snmp trap cpqCmcalarmShock
        sequence: 101
      cpqCmcalarmSmoke:
        eventClassKey: cpqCmcalarmSmoke
        example: snmp trap cpqCmcalarmSmoke
        sequence: 101
      cpqCmcalarmTemp1:
        eventClassKey: cpqCmcalarmTemp1
        example: snmp trap cpqCmcalarmTemp1
        sequence: 101
      cpqCmcalarmTemp2:
        eventClassKey: cpqCmcalarmTemp2
        example: snmp trap cpqCmcalarmTemp2
        sequence: 101
      cpqCmcalarmVoltage:
        eventClassKey: cpqCmcalarmVoltage
        example: snmp trap cpqCmcalarmVoltage
        sequence: 101
      cpqCrController1FailureTrap:
        evaluation: "The primary controller in the subsytem has failed.\n\nDetails:\n\
          \  The primary Controller has failed.\n\nUser Action:\n  Replace controller.\
          \  Possible causes are controller physically\n  removed, actual hardware\
          \ failure."
        eventClassKey: cpqCrController1FailureTrap
        example: snmp trap cpqCrController1FailureTrap
        zProperties:
          zEventSeverity: 3
      cpqCrController1InformationTrap:
        evaluation: "The primary controller in the subsytem has recovered.\n\nDetails:\n\
          \  The primary controller has recovered.\n\nUser Action:\n  None."
        eventClassKey: cpqCrController1InformationTrap
        example: snmp trap cpqCrController1InformationTrap
        zProperties:
          zEventSeverity: 3
      cpqCrController2FailureTrap:
        evaluation: "The secondary controller in the subsytem has failed.\n\nDetails:\n\
          \  The secondary controller has failed.\n\nUser Action:\n  Replace controller.\
          \  Possible causes are controller\n  physically removed, actual hardware\
          \ failure."
        eventClassKey: cpqCrController2FailureTrap
        example: snmp trap cpqCrController2FailureTrap
        zProperties:
          zEventSeverity: 3
      cpqCrController2InformationTrap:
        evaluation: "The secondary controller in the subsytem has recovered.\n\nDetails:\n\
          \  The secondary controller has recovered.\n\nUser Action:\n  None."
        eventClassKey: cpqCrController2InformationTrap
        example: snmp trap cpqCrController2InformationTrap
        zProperties:
          zEventSeverity: 3
      cpqCrDiskAvailableTrap:
        evaluation: "A disk drive has been made available for use.\n\nDetails:\n \
          \ A disk drive has been physically added or set to the\n  Available state.\
          \ It can be used as a RAIDset member or as a Spare.\n\nUser Action:\n  None."
        eventClassKey: cpqCrDiskAvailableTrap
        example: snmp trap cpqCrDiskAvailableTrap
        zProperties:
          zEventSeverity: 3
      cpqCrDiskFailureTrap:
        evaluation: "A disk drive has failed.\n\nDetails:\n  A disk device has failed.\n\
          \nUser Action:\n  Replace the disk device."
        eventClassKey: cpqCrDiskFailureTrap
        example: snmp trap cpqCrDiskFailureTrap
        zProperties:
          zEventSeverity: 3
      cpqCrDiskInformationTrap:
        evaluation: "A disk drive has recovered.\n\nDetails:\n  A disk device has\
          \ recovered.\n\nUser Action:\n  None."
        eventClassKey: cpqCrDiskInformationTrap
        example: snmp trap cpqCrDiskInformationTrap
        zProperties:
          zEventSeverity: 3
      cpqCrDiskReconstructTrap:
        evaluation: "A disk drive has started the reconstruction process.\n\nDetails:\n\
          \  A disk member of a logical drive has begun the reconstruction\n  process\
          \ and will be available for use when reconstruction is\n  complete.\n\n\
          User Action:\n  Wait for the reconstruction to complete."
        eventClassKey: cpqCrDiskReconstructTrap
        example: snmp trap cpqCrDiskReconstructTrap
        zProperties:
          zEventSeverity: 3
      cpqCrDiskSpareTrap:
        evaluation: "A disk drive has been made a Spare.\n\nDetails:\n  A disk drive\
          \ has been set to Spare status from Available and\n  may be used in a RAID\
          \ 1, RAID 0+1 or RAID 5 logical disk should\n  a member device fail in one\
          \ of those RAIDsets.\n\nUser Action:\n  None."
        eventClassKey: cpqCrDiskSpareTrap
        example: snmp trap cpqCrDiskSpareTrap
        zProperties:
          zEventSeverity: 3
      cpqCrEMUFanFailureTrap:
        evaluation: "Fan has failed.\n\nDetails:\n  One of the cooling fans in the\
          \ primary enclosure has\n  failed.\n\nUser Action:\n  Replace the cooling\
          \ fan. Possible causes are fan\n  physically removed, actual hardware failure."
        eventClassKey: cpqCrEMUFanFailureTrap
        example: snmp trap cpqCrEMUFanFailureTrap
        zProperties:
          zEventSeverity: 3
      cpqCrEMUFanInformationTrap:
        evaluation: "The fan has recovered.\n\nDetails:\n  The cooling fan in the\
          \ primary enclosure has recovered.\n\nUser Action:\n  None."
        eventClassKey: cpqCrEMUFanInformationTrap
        example: snmp trap cpqCrEMUFanInformationTrap
        zProperties:
          zEventSeverity: 3
      cpqCrEMUNormalTrap:
        evaluation: "Primary enclosure state is normal.\n\nDetails:\n  The overall\
          \ condition of the primary enclosure has returned\n  to normal.\n\n\nUser\
          \ Action:\n  None."
        eventClassKey: cpqCrEMUNormalTrap
        example: snmp trap cpqCrEMUNormalTrap
        zProperties:
          zEventSeverity: 0
      cpqCrEMUPowerSupplyFailureTrap:
        evaluation: "Power supply has failed.\n\nDetails:\n  One of the power supplies\
          \ in the primary enclosure has\n  failed.\n\nUser Action:\n  Replace the\
          \ power supply. Possible causes are power\n  supply physically removed,\
          \ power cord unplugged, actual\n  hardware failure."
        eventClassKey: cpqCrEMUPowerSupplyFailureTrap
        example: snmp trap cpqCrEMUPowerSupplyFailureTrap
        zProperties:
          zEventSeverity: 3
      cpqCrEMUPowerSupplyInformationTrap:
        evaluation: "The power supply has recovered.\n\nDetails:\n  The power supply\
          \ in the primary enclosure has recovered.\n\nUser Action:\n  None."
        eventClassKey: cpqCrEMUPowerSupplyInformationTrap
        example: snmp trap cpqCrEMUPowerSupplyInformationTrap
        zProperties:
          zEventSeverity: 3
      cpqCrEMUTemperatureCriticalTrap:
        evaluation: "Primary enclosure temperature critical!.\n\nDetails:\n  The temperature\
          \ in the primary enclosure has triggered a\n  critical condition detected\
          \ by the controller.\n\nUser Action:\n  Check the cooling fans in the primary\
          \ enclosure."
        eventClassKey: cpqCrEMUTemperatureCriticalTrap
        example: snmp trap cpqCrEMUTemperatureCriticalTrap
        zProperties:
          zEventSeverity: 3
      cpqCrEMUTemperatureInformationTrap:
        evaluation: "Primary enclosure temperature normal.\n\nDetails:\n  The temperature\
          \ in the primary enclosure has\n  returned to normal.\n\nUser Action:\n\
          \  None."
        eventClassKey: cpqCrEMUTemperatureInformationTrap
        example: snmp trap cpqCrEMUTemperatureInformationTrap
        zProperties:
          zEventSeverity: 3
      cpqCrEMUTemperatureWarningTrap:
        evaluation: "Primary enclosure temperature warning.\n\nDetails:\n  The temperature\
          \ in the primary enclosure has triggered a\n  warning condition detected\
          \ by the controller.\n\nUser Action:\n  Check the cooling fans in the primary\
          \ enclosure."
        eventClassKey: cpqCrEMUTemperatureWarningTrap
        example: snmp trap cpqCrEMUTemperatureWarningTrap
        zProperties:
          zEventSeverity: 3
      cpqCrExpCabFanFailureTrap:
        evaluation: "Fan has failed in expansion cabinet.\n\nDetails:\n  One of the\
          \ cooling fans in the expansion cabinet has\n  failed.\n\nUser Action:\n\
          \  Replace the cooling fan. Possible causes are fan\n  physically removed,\
          \ actual hardware failure."
        eventClassKey: cpqCrExpCabFanFailureTrap
        example: snmp trap cpqCrExpCabFanFailureTrap
        zProperties:
          zEventSeverity: 3
      cpqCrExpCabFanInformationTrap:
        evaluation: "Fan has recovered.\n\nDetails:\n  A cooling fan in the expansion\
          \ cabinet has returned to a\n  normal state.\n\nUser Action:\n  None."
        eventClassKey: cpqCrExpCabFanInformationTrap
        example: snmp trap cpqCrExpCabFanInformationTrap
        zProperties:
          zEventSeverity: 3
      cpqCrExpCabPowerSupplyFailureTrap:
        evaluation: "Power supply has failed.\n\nDetails:\n  One of the power supplies\
          \ in the expansion cabinet has\n  failed.\n\nUser Action:\n  Replace the\
          \ power supply. Possible causes are power\n  supply physically removed,\
          \ power cord unplugged, actual\n  hardware failure."
        eventClassKey: cpqCrExpCabPowerSupplyFailureTrap
        example: snmp trap cpqCrExpCabPowerSupplyFailureTrap
        zProperties:
          zEventSeverity: 3
      cpqCrExpCabPowerSupplyInformationTrap:
        evaluation: "The power supply has recovered.\n\nDetails:\n  The power supply\
          \ in the expansion cabinet has recovered.\n\nUser Action:\n  None."
        eventClassKey: cpqCrExpCabPowerSupplyInformationTrap
        example: snmp trap cpqCrExpCabPowerSupplyInformationTrap
        zProperties:
          zEventSeverity: 3
      cpqCrExpCabTemperatureCriticalTrap:
        evaluation: "Expansion cabinet temperature critical!\n\nDetails:\n  The temperature\
          \ in the expansion cabinet has triggered a\n  critical condition detected\
          \ by the controller.\n\nUser Action:\n  Check the cooling fans in the expansion\
          \ cabinet."
        eventClassKey: cpqCrExpCabTemperatureCriticalTrap
        example: snmp trap cpqCrExpCabTemperatureCriticalTrap
        zProperties:
          zEventSeverity: 3
      cpqCrExpCabTemperatureInformationTrap:
        evaluation: "Expansion cabinet temperature normal.\n\nDetails:\n  The temperature\
          \ in the expansion cabinet has returned to\n  normal.\n\nUser Action:\n\
          \  None."
        eventClassKey: cpqCrExpCabTemperatureInformationTrap
        example: snmp trap cpqCrExpCabTemperatureInformationTrap
        zProperties:
          zEventSeverity: 3
      cpqCrExpCabTemperatureWarningTrap:
        evaluation: "Expansion cabinet temperature warning.\n\nDetails:\n  The temperature\
          \ in the expansion cabinet has triggered a\n  warning condition detected\
          \ by the controller.\n\nUser Action:\n  Check the cooling fans in the expansion\
          \ cabinet."
        eventClassKey: cpqCrExpCabTemperatureWarningTrap
        example: snmp trap cpqCrExpCabTemperatureWarningTrap
        zProperties:
          zEventSeverity: 3
      cpqCrLogDriveFailureTrap:
        evaluation: "A RAIDset has failed.\n\nDetails:\n  The RAIDset has failed and\
          \ is off-line.\n\nUser Action:\n  Possible cause is too many failed disk\
          \ drives that make up\n  the RAIDset, the OS can no longer communicate with\
          \ the RAIDset\n  for other reasons."
        eventClassKey: cpqCrLogDriveFailureTrap
        example: snmp trap cpqCrLogDriveFailureTrap
        zProperties:
          zEventSeverity: 3
      cpqCrLogDriveInformationTrap:
        evaluation: "A RAIDset has become optimal.\n\nDetails:\n  A RAIDset has become\
          \ optimal due to a successful completion\n  of the reconstruction process.\n\
          \nUser Action:\n  None."
        eventClassKey: cpqCrLogDriveInformationTrap
        example: snmp trap cpqCrLogDriveInformationTrap
        zProperties:
          zEventSeverity: 3
      cpqCrLogDriveInitializingTrap:
        evaluation: "A RAIDset is initializing.\n\nDetails:\n  A RAIDset is in the\
          \ process of being intialized.\n\nUser Action:\n  None."
        eventClassKey: cpqCrLogDriveInitializingTrap
        example: snmp trap cpqCrLogDriveInitializingTrap
        zProperties:
          zEventSeverity: 3
      cpqCrLogDriveReconstructTrap:
        evaluation: "A RAIDset has started the reconstruction process.\n\nDetails:\n\
          \  The RAIDset has started the reconstruction process but is available\n\
          \  for normal use.\n  Possible causes are an available disk drive was created\
          \ as\n  a spare to be inserted into the set, an existing spare was\n  automatically\
          \ added to the set for reconstruction upon failure\n  of a member disk device.\n\
          \nUser Action:\n  None."
        eventClassKey: cpqCrLogDriveReconstructTrap
        example: snmp trap cpqCrLogDriveReconstructTrap
        zProperties:
          zEventSeverity: 3
      cpqCrLogDriveReducedTrap:
        evaluation: "A RAIDset has become degraded.\n\nDetails:\n  A RAIDset has become\
          \ degraded due to a member disk device\n  failure.\n\nUser Action:\n  Replace\
          \ the failed disk device; add a spare to the system\n  to cause a reconstruct."
        eventClassKey: cpqCrLogDriveReducedTrap
        example: snmp trap cpqCrLogDriveReducedTrap
        zProperties:
          zEventSeverity: 3
      cpqCrPhyDiskAvailableTrap:
        evaluation: "A disk drive has been made available for use.\n\nDetails:\n \
          \ A disk drive has been physically added or set to the\n  Available state.\
          \ It can be used as a RAIDset member or as a Spare.\n\nUser Action:\n  None."
        eventClassKey: cpqCrPhyDiskAvailableTrap
        example: snmp trap cpqCrPhyDiskAvailableTrap
        zProperties:
          zEventSeverity: 3
      cpqCrPhyDiskFailureTrap:
        evaluation: "A disk drive has failed.\n\nDetails:\n  A disk device has failed.\n\
          \nUser Action:\n  Replace the disk device."
        eventClassKey: cpqCrPhyDiskFailureTrap
        example: snmp trap cpqCrPhyDiskFailureTrap
        zProperties:
          zEventSeverity: 3
      cpqCrPhyDiskInformationTrap:
        evaluation: "A disk drive has recovered.\n\nDetails:\n  A disk device has\
          \ recovered.\n\nUser Action:\n  None."
        eventClassKey: cpqCrPhyDiskInformationTrap
        example: snmp trap cpqCrPhyDiskInformationTrap
        zProperties:
          zEventSeverity: 3
      cpqCrPhyDiskReconstructTrap:
        evaluation: "A disk drive has started the reconstruction process.\n\nDetails:\n\
          \  A disk member of a logical drive has begun the reconstruction\n  process\
          \ and will be available for use when reconstruction is\n  complete.\n\n\
          User Action:\n  Wait for the reconstruction to complete."
        eventClassKey: cpqCrPhyDiskReconstructTrap
        example: snmp trap cpqCrPhyDiskReconstructTrap
        zProperties:
          zEventSeverity: 3
      cpqCrPhyDiskSpareTrap:
        evaluation: "A disk drive has been made a Spare.\n\nDetails:\n  A disk drive\
          \ has been set to Spare status from Available and\n  may be used in a RAID\
          \ 1, RAID 0+1 or RAID 5 logical disk should\n  a member device fail in one\
          \ of those RAIDsets.\n\nUser Action:\n  None."
        eventClassKey: cpqCrPhyDiskSpareTrap
        example: snmp trap cpqCrPhyDiskSpareTrap
        zProperties:
          zEventSeverity: 3
      cpqDMIIndicationCritical:
        evaluation: "This trap will be sent whenever a DMI Indication occurs which\
          \ \nis Critical level.\n\n User Action: Examine machine in question."
        eventClassKey: cpqDMIIndicationCritical
        example: snmp trap cpqDMIIndicationCritical
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqDMIIndicationOK
          zEventSeverity: 3
      cpqDMIIndicationInfo:
        evaluation: 'This trap will be sent whenever a DMI Indication occurs which
          is Informational.


          User Action: None required.'
        eventClassKey: cpqDMIIndicationInfo
        example: snmp trap cpqDMIIndicationInfo
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqDMIIndicationOK
          zEventSeverity: 3
      cpqDMIIndicationMonitor:
        evaluation: "This trap will be sent whenever a DMI Indication occurs which\
          \ \nis Monitor level.\n\n User Action: None required."
        eventClassKey: cpqDMIIndicationMonitor
        example: snmp trap cpqDMIIndicationMonitor
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqDMIIndicationOK
          zEventSeverity: 3
      cpqDMIIndicationNonCritical:
        evaluation: "This trap will be sent whenever a DMI Indication occurs which\
          \ \nis Non-Critical level.\n\n User Action: Examine machine in question."
        eventClassKey: cpqDMIIndicationNonCritical
        example: snmp trap cpqDMIIndicationNonCritical
        zProperties:
          zEventSeverity: 3
      cpqDMIIndicationNonNonRecoverable:
        evaluation: "This trap will be sent whenever a DMI Indication occurs which\
          \ \nis Non-Recoverable level.\n\n User Action: Examine machine in question."
        eventClassKey: cpqDMIIndicationNonNonRecoverable
        example: snmp trap cpqDMIIndicationNonNonRecoverable
        zProperties:
          zEventSeverity: 3
      cpqDMIIndicationOK:
        evaluation: "This trap will be sent whenever a DMI Indication occurs which\
          \ \nis OK level.\n\n User Action: None required."
        eventClassKey: cpqDMIIndicationOK
        example: snmp trap cpqDMIIndicationOK
        zProperties:
          zEventSeverity: 0
      cpqDa2AccelBadDataTrap:
        evaluation: 'Accelerator Board Bad Data.


          This trap signifies that the agent has detected an array

          accelerator cache board that has lost battery power.  If data

          was being stored in the accelerator memory when the server lost

          power, that data has been lost.'
        eventClassKey: cpqDa2AccelBadDataTrap
        example: snmp trap cpqDa2AccelBadDataTrap
        zProperties:
          zEventSeverity: 3
      cpqDa2AccelBatteryFailed:
        evaluation: 'Accelerator Board Battery Failed.


          This trap signifies that the agent has detected a battery

          failure associated with the array accelerator cache board.  The

          current battery status is indicated by the cpqDaAccelBattery

          variable.'
        eventClassKey: cpqDa2AccelBatteryFailed
        example: snmp trap cpqDa2AccelBatteryFailed
        zProperties:
          zEventSeverity: 3
      cpqDa2AccelStatusChange:
        evaluation: 'Accelerator Board Status Change.


          This trap signifies that the Insight Agent has detected a

          change in the cpqDaAccelStatus of array accelerator cache.

          The current status is represented by the variable

          cpqDaAccelStatus.'
        eventClassKey: cpqDa2AccelStatusChange
        example: snmp trap cpqDa2AccelStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDa2LogDrvStatusChange:
        evaluation: 'Logical Drive Status Change.


          This trap signifies that the agent has detected a change in the

          status of a drive array logical drive.  The variable

          cpqDaLogDrvStatus indicates the current logical drive status.'
        eventClassKey: cpqDa2LogDrvStatusChange
        example: snmp trap cpqDa2LogDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDa2PhyDrvStatusChange:
        evaluation: 'Physical Drive Status Change.


          This trap signifies that the agent has detected a change in the

          status of a drive array physical drive.  The variable

          cpaDaPhyDrvStatus indicates the current physical drive status.

          The variable cpqDaPhyDrvBusNumber indicates the SCSI bus number

          associated with this drive.'
        eventClassKey: cpqDa2PhyDrvStatusChange
        example: snmp trap cpqDa2PhyDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDa2PhyDrvThreshPassedTrap:
        evaluation: 'Physical Drive Threshold Passed.


          This trap signifies that the agent has detected a factory

          threshold associated with one of the physical drive objects on

          a drive array has been exceeded.  The variable

          cpqDaPhyDrvBusNumber indicates the SCSI bus number associated

          with the drive.'
        eventClassKey: cpqDa2PhyDrvThreshPassedTrap
        example: snmp trap cpqDa2PhyDrvThreshPassedTrap
        zProperties:
          zEventSeverity: 3
      cpqDa2SpareStatusChange:
        evaluation: 'Spare Drive Status Change.


          This trap signifies that the agent has detected a change in the

          status of a drive array spare drive.  The variable

          cpqDaSpareStatus indicates the current spare drive status.

          The variable cpqDaSpareBusNumber indicates the SCSI bus number

          associated with this drive.'
        eventClassKey: cpqDa2SpareStatusChange
        example: snmp trap cpqDa2SpareStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDa2TapeDriveStatusChange:
        evaluation: 'Tape Drive Status Change.


          This trap signifies that the agent has detected a change in

          the status of a tape drive.  The variable cpqDaTapeDrvStatus

          indicates the current tape status.  The variable

          cpqDaTapeDrvScsiIdIndex indicates the the SCSI ID of the tape

          drive.


          User Action: If the tape is failed, check the tape and

          all SCSI connections.'
        eventClassKey: cpqDa2TapeDriveStatusChange
        example: snmp trap cpqDa2TapeDriveStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDa2TapeLibraryStatusChange:
        evaluation: 'Tape Library Status Change.


          This trap signifies that the agent has detected a change in

          the status of a tape library.  The variable

          cpqDaTapeLibraryStatus indicates the current tape library

          status.  The variable cpqDaTapeLibraryScsiTarget indicates

          the SCSI ID of the tape library.


          User Action: If the tape library is failed, check the tape

          library front panel.'
        eventClassKey: cpqDa2TapeLibraryStatusChange
        example: snmp trap cpqDa2TapeLibraryStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDa3AccelBadDataTrap:
        evaluation: 'Accelerator Board Bad Data.


          This trap signifies that the agent has detected an array

          accelerator cache board that has lost battery power.  If data

          was being stored in the accelerator memory when the server lost

          power, that data has been lost.'
        eventClassKey: cpqDa3AccelBadDataTrap
        example: snmp trap cpqDa3AccelBadDataTrap
        zProperties:
          zEventSeverity: 3
      cpqDa3AccelBatteryFailed:
        evaluation: 'Accelerator Board Battery Failed.


          This trap signifies that the agent has detected a battery

          failure associated with the array accelerator cache board.  The

          current battery status is indicated by the cpqDaAccelBattery

          variable.'
        eventClassKey: cpqDa3AccelBatteryFailed
        example: snmp trap cpqDa3AccelBatteryFailed
        zProperties:
          zEventSeverity: 3
      cpqDa3AccelStatusChange:
        evaluation: 'Accelerator Board Status Change.


          This trap signifies that the agent has detected a change in the

          cpqDaAccelStatus of an array accelerator cache board.  The

          current status is represented by the variable cpqDaAccelStatus.'
        eventClassKey: cpqDa3AccelStatusChange
        example: snmp trap cpqDa3AccelStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDa3LogDrvStatusChange:
        evaluation: 'Logical Drive Status Change.


          This trap signifies that the agent has detected a change in the

          status of a drive array logical drive.  The variable

          cpqDaLogDrvStatus indicates the current logical drive status.'
        eventClassKey: cpqDa3LogDrvStatusChange
        example: snmp trap cpqDa3LogDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDa3PhyDrvStatusChange:
        evaluation: 'Physical Drive Status Change.


          This trap signifies that the agent has detected a change in the

          status of a drive array physical drive.  The variable

          cpaDaPhyDrvStatus indicates the current physical drive status.

          The variable cpqDaPhyDrvBusNumber indicates the SCSI bus number

          associated with this drive.'
        eventClassKey: cpqDa3PhyDrvStatusChange
        example: snmp trap cpqDa3PhyDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDa3PhyDrvThreshPassedTrap:
        evaluation: 'Physical Drive Threshold Passed.


          This trap signifies that the agent has detected a factory

          threshold associated with one of the physical drive objects on

          a drive array has been exceeded.  The variable

          cpqDaPhyDrvBusNumber indicates the SCSI bus number associated

          with the drive.'
        eventClassKey: cpqDa3PhyDrvThreshPassedTrap
        example: snmp trap cpqDa3PhyDrvThreshPassedTrap
        zProperties:
          zEventSeverity: 3
      cpqDa3SpareStatusChange:
        evaluation: 'Spare Drive Status Change.


          This trap signifies that the agent has detected a change in the

          status of a drive array spare drive.  The variable

          cpqDaSpareStatus indicates the current spare drive status.  The

          variable cpqDaSpareBusNumber indicates the SCSI bus number

          associated with this drive.'
        eventClassKey: cpqDa3SpareStatusChange
        example: snmp trap cpqDa3SpareStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDa4PhyDrvStatusChange:
        evaluation: 'Physical Drive Status Change.


          This trap signifies that the agent has detected a change in the

          status of a drive array physical drive.  The variable

          cpaDaPhyDrvStatus indicates the current physical drive status.


          User Action: If the physical drive failed or predicting

          failure, replace the drive.'
        eventClassKey: cpqDa4PhyDrvStatusChange
        example: snmp trap cpqDa4PhyDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDa4PhyDrvThreshPassedTrap:
        evaluation: 'Physical Drive Threshold Passed.


          This trap signifies that the agent has detected a factory

          threshold associated with one of the physical drive objects on

          a drive array has been exceeded.


          User Action: If the physical drive is predicting failure,

          replace the drive.'
        eventClassKey: cpqDa4PhyDrvThreshPassedTrap
        example: snmp trap cpqDa4PhyDrvThreshPassedTrap
        zProperties:
          zEventSeverity: 3
      cpqDa4SpareStatusChange:
        evaluation: 'Spare Drive Status Change.


          This trap signifies that the agent has detected a change in the

          status of a drive array spare drive.  The variable

          cpqDaSpareStatus indicates the current spare drive status.


          User Action: If the spare drive status is failed, replace

          the drive.'
        eventClassKey: cpqDa4SpareStatusChange
        example: snmp trap cpqDa4SpareStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDa5AccelBadDataTrap:
        evaluation: 'Accelerator Board Bad Data.


          This trap signifies that the agent has detected an array

          accelerator cache board that has lost battery power.  If

          data was being stored in the accelerator cache memory when the

          server lost power, that data has been lost.


          User Action: Verify that no data has been lost.'
        eventClassKey: cpqDa5AccelBadDataTrap
        example: snmp trap cpqDa5AccelBadDataTrap
        zProperties:
          zEventSeverity: 3
      cpqDa5AccelBatteryFailed:
        evaluation: 'Accelerator Board Battery Failed.


          This trap signifies that the agent has detected a battery

          failure associated with the array accelerator cache board.


          User Action: Replace the Accelerator Cache Board.'
        eventClassKey: cpqDa5AccelBatteryFailed
        example: snmp trap cpqDa5AccelBatteryFailed
        zProperties:
          zEventSeverity: 3
      cpqDa5AccelStatusChange:
        evaluation: 'Accelerator Board Status Change.


          This trap signifies that the agent has detected a change in

          the status of an array accelerator cache board.  The current

          status is represented by the variable cpqDaAccelStatus.


          User Action: If the accelerator board status is permDisabled(5),

          you may need to replace the accelerator board.'
        eventClassKey: cpqDa5AccelStatusChange
        example: snmp trap cpqDa5AccelStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDa5CntlrStatusChange:
        evaluation: 'Controller Status Change.


          This trap signifies that the agent has detected a change in

          the status of a drive array controller.  The variable

          cpqDaCntlrBoardStatus indicates the current controller status.


          User Action: If the board status is generalFailure(3), you

          may need to replace the controller.  If the board status is

          cableProblem(4), check the cable connections between the

          controller and the storage system.'
        eventClassKey: cpqDa5CntlrStatusChange
        example: snmp trap cpqDa5CntlrStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDa5PhyDrvStatusChange:
        evaluation: 'Physical Drive Status Change.


          This trap signifies that the agent has detected a change in the

          status of a drive array physical drive.  The variable

          cpaDaPhyDrvStatus indicates the current physical drive status.


          User Action: If the physical drive status is failed(3) or

          predictiveFailure(4), replace the drive.'
        eventClassKey: cpqDa5PhyDrvStatusChange
        example: snmp trap cpqDa5PhyDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDa5PhyDrvThreshPassedTrap:
        evaluation: 'Physical Drive Threshold Passed.


          This trap signifies that the agent has detected a factory

          threshold associated with one of the physical drive objects

          on a drive array has been exceeded.


          User Action: Replace the physical drive.'
        eventClassKey: cpqDa5PhyDrvThreshPassedTrap
        example: snmp trap cpqDa5PhyDrvThreshPassedTrap
        zProperties:
          zEventSeverity: 3
      cpqDa6AccelBadDataTrap:
        evaluation: "Cache Module Board Bad Data.\n\nThis trap signifies that the\
          \ agent has detected a cache\nmodule board that has lost backup power. \
          \ If\ndata was being stored in the cache module memory when the\nserver\
          \ lost power, that data has been lost. The backup power \nsource is indicated\
          \ by cpqDaAccelBackupPowerSource.\n\nUser Action: Verify that no data has\
          \ been lost."
        eventClassKey: cpqDa6AccelBadDataTrap
        example: snmp trap cpqDa6AccelBadDataTrap
        zProperties:
          zEventSeverity: 3
      cpqDa6AccelBatteryFailed:
        evaluation: "Cache Module Board Backup Power Source Failed.\n\nThis trap signifies\
          \ that the agent has detected a backup\npower source failure associated\
          \ with the cache module \nboard. The backup power source is indicated by\
          \ \ncpqDaAccelBackupPowerSource.\n\nUser Action: Replace the Backup Power\
          \ Source."
        eventClassKey: cpqDa6AccelBatteryFailed
        example: snmp trap cpqDa6AccelBatteryFailed
        zProperties:
          zEventSeverity: 3
      cpqDa6AccelStatusChange:
        evaluation: 'Cache Module Board Status Change.


          This trap signifies that the agent has detected a change in

          the status of a cache module board.  The current

          status is represented by the variable cpqDaAccelStatus.


          User Action: If cpqDaAccelStatus is ''permDisabled(5)'', you may

          need to replace the cache module board. If cpqDaAccelStatus is

          ''cacheModFlashMemNotAttached(6)'', install the flash memory.'
        eventClassKey: cpqDa6AccelStatusChange
        example: snmp trap cpqDa6AccelStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDa6CntlrStatusChange:
        evaluation: "Controller Status Change.\n\nThis trap signifies that the agent\
          \ has detected a change in\nthe status of a drive array controller.  The\
          \ variable\ncpqDaCntlrBoardStatus indicates the current controller status.\n\
          \nUser Action: If cpqDaCntlrBoardStatus is 'generalFailure(3)', you\nmay\
          \ need to reboot the server or replace the controller.  \nAfter the system\
          \ is rebooted, check the variable \ncpqDaCntlrLastLockupCode for the controllers\
          \ last lockup code. \nIf cpqDaCntlrBoardStatus is 'cableProblem(4)', check\
          \ the cable \nconnections between the controller and the storage system.\
          \ If \ncpqDaCntlrBoardStatus is 'cacheModuleMissing(6)', the array\ncontroller\
          \ is operating in an unsupported configuration and\nrequires that a cache\
          \ module be attached to the controller."
        eventClassKey: cpqDa6CntlrStatusChange
        example: snmp trap cpqDa6CntlrStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDa6LogDrvStatusChange:
        evaluation: 'Logical Drive Status Change.


          This trap signifies that the agent has detected a change in the

          status of a drive array logical drive.  The variable

          cpqDaLogDrvStatus indicates the current logical drive status.'
        eventClassKey: cpqDa6LogDrvStatusChange
        example: snmp trap cpqDa6LogDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDa6PhyDrvStatusChange:
        evaluation: 'Physical Drive Status Change.


          This trap signifies that the agent has detected a change in the

          status of a drive array physical drive.  The variable

          cpaDaPhyDrvStatus indicates the current physical drive status.


          User Action: If the physical drive status is failed(3) or

          predictiveFailure(4), replace the drive.'
        eventClassKey: cpqDa6PhyDrvStatusChange
        example: snmp trap cpqDa6PhyDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDa6PhyDrvThreshPassedTrap:
        evaluation: 'Physical Drive Threshold Passed.


          This trap signifies that the agent has detected a factory

          threshold associated with one of the physical drive objects

          on a drive array has been exceeded.


          User Action: Replace the physical drive.'
        eventClassKey: cpqDa6PhyDrvThreshPassedTrap
        example: snmp trap cpqDa6PhyDrvThreshPassedTrap
        zProperties:
          zEventSeverity: 3
      cpqDa6SpareStatusChange:
        evaluation: 'Spare Drive Status Change.


          This trap signifies that the agent has detected a change in the

          status of a drive array spare drive.  The variable

          cpqDaSpareStatus indicates the current spare drive status.


          User Action: If the spare drive status is failed, replace

          the drive.'
        eventClassKey: cpqDa6SpareStatusChange
        example: snmp trap cpqDa6SpareStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDa6TapeDriveCleanTapeReplace:
        evaluation: 'Tape Drive Cleaning Tape Needs Replacing.


          The agent has detected that an autoloader tape unit has a

          cleaning tape that has been fully used and therefore needs to

          be replaced with a new cleaning tape.'
        eventClassKey: cpqDa6TapeDriveCleanTapeReplace
        example: snmp trap cpqDa6TapeDriveCleanTapeReplace
        zProperties:
          zEventSeverity: 3
      cpqDa6TapeDriveCleaningRequired:
        evaluation: 'Tape Drive Cleaning Required trap.


          The agent has detected a tape drive that needs to have a

          cleaning tape inserted and run.  This will cause the tape

          drive heads to be cleaned.'
        eventClassKey: cpqDa6TapeDriveCleaningRequired
        example: snmp trap cpqDa6TapeDriveCleaningRequired
        zProperties:
          zEventSeverity: 3
      cpqDa6TapeDriveStatusChange:
        evaluation: 'Tape Drive Status Change.


          This trap signifies that the agent has detected a change in

          the status of a tape drive.  The variable cpqDaTapeDrvStatus

          indicates the current tape status.  The variable

          cpqDaTapeDrvScsiIdIndex indicates the the SCSI ID of the tape

          drive.


          User Action: If cpqDaTapeDrvStatus is ''failed(4)'', check the tape

          and all SCSI connections.'
        eventClassKey: cpqDa6TapeDriveStatusChange
        example: snmp trap cpqDa6TapeDriveStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDa6TapeLibraryDoorStatusChange:
        evaluation: "Tape Library Door Status Change.\n\nThis trap signifies that\
          \ the agent has detected a change in\nthe door status of a tape library.\
          \  The variable\ncpqDaTapeLibraryDoorStatus indicates the current tape library\n\
          door status.  The variable cpqDaTapeLibraryScsiTarget indicates\nthe the\
          \ SCSI ID of the tape library.\n\nUser Action: If cpqDaTapeLibraryDoorStatus\
          \ is 'open(4)', close the \ntape library door."
        eventClassKey: cpqDa6TapeLibraryDoorStatusChange
        example: snmp trap cpqDa6TapeLibraryDoorStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDa6TapeLibraryStatusChange:
        evaluation: "Tape Library Status Change.\n\nThis trap signifies that the agent\
          \ has detected a change in\nthe status of a tape library.  The variable\n\
          cpqDaTapeLibraryStatus indicates the current tape library\nstatus.  The\
          \ variable cpqDaTapeLibraryScsiTarget indicates\nthe SCSI ID of the tape\
          \ library.\n\nUser Action: If cpqDaTapeLibraryStatus is 'failed(4)', check\
          \ the \ntape library front panel."
        eventClassKey: cpqDa6TapeLibraryStatusChange
        example: snmp trap cpqDa6TapeLibraryStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDa7PhyDrvStatusChange:
        evaluation: 'Physical Drive Status Change.


          This trap signifies that the agent has detected a change in the

          status of a drive array physical drive.  The variable

          cpaDaPhyDrvStatus indicates the current physical drive status.


          User Action: If cpaDaPhyDrvStatus is ''failed(3)'',

          ''predictiveFailure(4)'', ''ssdWearOut(8)'', or ''notAuthenticated(9)'',

          replace the drive.'
        eventClassKey: cpqDa7PhyDrvStatusChange
        example: snmp trap cpqDa7PhyDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDa7SpareStatusChange:
        evaluation: "Spare Drive Status Change.\n\nThis trap signifies that the agent\
          \ has detected a change in the\nstatus of a drive array spare drive.  The\
          \ variable\ncpqDaSpareStatus indicates the current spare drive status.\n\
          \nUser Action: If cpqDaSpareStatus is 'failed(3)', replace the \ndrive."
        eventClassKey: cpqDa7SpareStatusChange
        example: snmp trap cpqDa7SpareStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDaAccelBadDataTrap:
        evaluation: 'Accelerator Board Bad Data.


          This trap signifies that the agent has detected an array

          accelerator cache board that has lost battery power.  If data

          was being stored in the accelerator memory when the server lost

          power, that data has been lost.'
        eventClassKey: cpqDaAccelBadDataTrap
        example: snmp trap cpqDaAccelBadDataTrap
        zProperties:
          zEventSeverity: 3
      cpqDaAccelBatteryFailed:
        evaluation: 'Accelerator Board Battery Failed.


          This trap signifies that the agent has detected a battery

          failure associated with the array accelerator cache board.

          The current battery status is indicated by the

          cpqDaAccelBattery variable.'
        eventClassKey: cpqDaAccelBatteryFailed
        example: snmp trap cpqDaAccelBatteryFailed
        zProperties:
          zEventSeverity: 3
      cpqDaAccelStatusChange:
        evaluation: 'Accelerator Board Status Change.


          This trap signifies that the agent has detected a change in the

          cpqDaAccelStatus of an array accelerator write cache.  The

          current status is represented by the variable cpqDaAccelStatus.'
        eventClassKey: cpqDaAccelStatusChange
        example: snmp trap cpqDaAccelStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDaCntlrActive:
        evaluation: 'Controller Active.


          This trap signifies that the agent has detected that a backup

          array controller in a duplexed pair has switched over to the

          active role.  The variable cpqDaCntlrSlot indicates the

          active controller slot and cpqDaCntlrPartnerSlot indicates the

          backup.


          User Action: Check the partner controller for problems.

          If this was the result of a user initiated switch over,

          no action is required.'
        eventClassKey: cpqDaCntlrActive
        example: snmp trap cpqDaCntlrActive
        zProperties:
          zEventSeverity: 0
      cpqDaCntlrPartnerStatusChange:
        evaluation: "Partner Controller Status Change.\n\nThis trap signifies that\
          \ the agent has detected a change in\nthe status of a drive array partner\
          \ controller.  The variable\ncpqDaCntlrPartnerBoardStatus indicates the\
          \ current partner \ncontroller status. The variable cpqDaCntlrSerialNumber\
          \ indicates\nthe controllers serial number and cpqDaCntlrPartnerSerialNumber\n\
          indicates the partner controllers serial number.\n\nUser Action: Check the\
          \ partner controller for problems. If lost \ncommunication with the partner\
          \ controller is the result of a user \ninitiated action, no remedial action\
          \ is required."
        eventClassKey: cpqDaCntlrPartnerStatusChange
        example: snmp trap cpqDaCntlrPartnerStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDaCntlrStatusChange:
        evaluation: 'Controller Status Change.


          This trap signifies that the agent has detected a change in the

          status of a drive array controller.  The variable

          cpqDaCntlrBoardStatus indicates the current controller status.


          User Action: If the board status is generalFailure(3), the

          you may need to replace the controller.  If the board status

          is cableProblem(4), check the cable connections between the

          controller and the storage system.'
        eventClassKey: cpqDaCntlrStatusChange
        example: snmp trap cpqDaCntlrStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDaLogDrvStatusChange:
        evaluation: 'Logical Drive Status Change.


          This trap signifies that the agent has detected a change in the

          status of a drive array logical drive.  The variable

          cpqDaLogDrvStatus indicates the current logical drive status.'
        eventClassKey: cpqDaLogDrvStatusChange
        example: snmp trap cpqDaLogDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDaPhyDrvSSDWearStatusChange:
        evaluation: 'Solid State Disk Wear Status Change.


          This trap signifies that the agent has detected a change in the

          SSD wear status of a drive array physical drive.  The variable

          cpqDaPhyDrvSSDWearStatus indicates the current SSD wear status.


          User Action: If cpqDaPhyDrvSSDWearStatus is ''ssdWearOut(6)'', replace

          the drive.'
        eventClassKey: cpqDaPhyDrvSSDWearStatusChange
        example: snmp trap cpqDaPhyDrvSSDWearStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDaPhyDrvStatusChange:
        evaluation: 'Physical Drive Status Change.


          This trap signifies that the agent has detected a change in the

          status of a drive array physical drive.  The variable

          cpaDaPhyDrvStatus indicates the current physical drive status.

          The variable cpqDaPhyDrvBusNumber indicates the SCSI bus number

          associated with this drive.'
        eventClassKey: cpqDaPhyDrvStatusChange
        example: snmp trap cpqDaPhyDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDaPhyDrvThreshPassedTrap:
        evaluation: 'Physical Drive Threshold Passed.


          This trap signifies that the agent has detected a factory

          threshold associated with one of the physical drive objects on

          a drive array has been exceeded.  The variable

          cpqDaPhyDrvBusNumber indicates the SCSI bus number associated

          with the drive.'
        eventClassKey: cpqDaPhyDrvThreshPassedTrap
        example: snmp trap cpqDaPhyDrvThreshPassedTrap
        zProperties:
          zEventSeverity: 3
      cpqDaSpareStatusChange:
        evaluation: 'Spare Drive Status Change.


          This trap signifies that the agent has detected a change in the

          status of a drive array spare drive.  The variable

          cpqDaSpareStatus indicates the current spare drive status.  The

          variable cpqDaSpareBusNumber indicates the SCSI bus number

          associated with this drive.'
        eventClassKey: cpqDaSpareStatusChange
        example: snmp trap cpqDaSpareStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDaTapeDriveCleanTapeReplace:
        evaluation: 'Tape Drive Cleaning Tape Needs Replacing.


          The agent has detected that an autoloader tape unit has a

          cleaning tape that has been fully used and therefore needs to

          be replaced with a new cleaning tape.'
        eventClassKey: cpqDaTapeDriveCleanTapeReplace
        example: snmp trap cpqDaTapeDriveCleanTapeReplace
        zProperties:
          zEventSeverity: 3
      cpqDaTapeDriveCleaningRequired:
        evaluation: 'Tape Drive Cleaning Required trap.


          The agent has detected a tape drive that needs to have a

          cleaning tape inserted and run.  This will cause the tape

          drive heads to be cleaned.'
        eventClassKey: cpqDaTapeDriveCleaningRequired
        example: snmp trap cpqDaTapeDriveCleaningRequired
        zProperties:
          zEventSeverity: 3
      cpqDaTapeDriveStatusChange:
        evaluation: 'Tape Drive Status Change.


          This trap signifies that the agent has detected a change in

          the status of a tape drive.  The variable cpqDaTapeDrvStatus

          indicates the current tape status.  The variable

          cpqDaTapeDrvScsiIdIndex indicates the the SCSI ID of the tape

          drive.


          User Action: If the tape is failed, check the tape and

          all SCSI connections.'
        eventClassKey: cpqDaTapeDriveStatusChange
        example: snmp trap cpqDaTapeDriveStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDaTapeLibraryDoorStatusChange:
        evaluation: 'Tape Library Door Status Change.


          This trap signifies that the agent has detected a change in

          the door status of a tape library.  The variable

          cpqDaTapeLibraryDoorStatus indicates the current tape library

          door status.  The variable cpqDaTapeLibraryScsiTarget indicates

          the the SCSI ID of the tape library.


          User Action: If the tape library door is open, close the tape

          library door.'
        eventClassKey: cpqDaTapeLibraryDoorStatusChange
        example: snmp trap cpqDaTapeLibraryDoorStatusChange
        zProperties:
          zEventSeverity: 3
      cpqDaTapeLibraryStatusChange:
        evaluation: 'Tape Library Status Change.


          This trap signifies that the agent has detected a change in

          the status of a tape library.  The variable

          cpqDaTapeLibraryStatus indicates the current tape library

          status.  The variable cpqDaTapeLibraryScsiTarget indicates

          the SCSI ID of the tape library.


          User Action: If the tape library is failed, check the tape

          library front panel.'
        eventClassKey: cpqDaTapeLibraryStatusChange
        example: snmp trap cpqDaTapeLibraryStatusChange
        zProperties:
          zEventSeverity: 3
      cpqExtArrayLogDrvStatusChange:
        evaluation: 'External Array Logical Drive Status Change.


          This trap signifies that the agent has detected a change in the

          status of an External Array logical drive.  The variable

          cpqFcaLogDrvStatus indicates the current logical drive status.


          User Action: If the logical drive status is failed, examine

          the array for failed drives that need replacement.'
        eventClassKey: cpqExtArrayLogDrvStatusChange
        example: snmp trap cpqExtArrayLogDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqExtTapeDriveCleanTapeReplace:
        evaluation: 'External Tape Drive Cleaning Tape Needs Replacing.


          The agent has detected that an autoloader tape unit has a

          cleaning tape that has been fully used and therefore needs to be

          replaced with a new cleaning tape.'
        eventClassKey: cpqExtTapeDriveCleanTapeReplace
        example: snmp trap cpqExtTapeDriveCleanTapeReplace
        zProperties:
          zEventSeverity: 3
      cpqExtTapeDriveCleaningRequired:
        evaluation: 'External Tape Drive Cleaning Required.


          The agent has detected a tape drive that needs to have a

          cleaning tape inserted and run.  This will cause the tape drive

          heads to be cleaned.'
        eventClassKey: cpqExtTapeDriveCleaningRequired
        example: snmp trap cpqExtTapeDriveCleaningRequired
        zProperties:
          zEventSeverity: 3
      cpqExtTapeDriveStatusChange:
        evaluation: 'External Tape Drive Status Change.


          This trap signifies that the agent has detected a change in the

          status of an External Tape Drive.  The variable

          cpqFcTapeDriveStatus indicates the current tape status.


          User Action: If the tape is failed or offline, check the tape

          and all connections.'
        eventClassKey: cpqExtTapeDriveStatusChange
        example: snmp trap cpqExtTapeDriveStatusChange
        zProperties:
          zEventSeverity: 3
      cpqExtTapeLibraryDoorStatusChange:
        evaluation: 'External Tape Library Door Status Change.


          This trap signifies that the agent has detected a change

          in the door status of an External Tape library.  The variable

          cpqFcTapeLibraryDoorStatus indicates the current tape library

          door status.


          User Action: If the tape library door is open, close the

          tape library door.'
        eventClassKey: cpqExtTapeLibraryDoorStatusChange
        example: snmp trap cpqExtTapeLibraryDoorStatusChange
        zProperties:
          zEventSeverity: 3
      cpqExtTapeLibraryStatusChange:
        evaluation: 'External Tape Library Status Change.


          This trap signifies that the agent has detected a change in

          the status of an External Tape library.  The variable

          cpqFcTapeLibraryStatus indicates the current tape library

          status.


          User Action: If the tape library is failed or offline, check

          the tape library front panel and all connections.'
        eventClassKey: cpqExtTapeLibraryStatusChange
        example: snmp trap cpqExtTapeLibraryStatusChange
        zProperties:
          zEventSeverity: 3
      cpqFcTapeCntlrStatusChange:
        evaluation: 'Fibre Channel Tape Controller Status Change.


          This trap signifies that the agent has detected a change in the

          status of a Fiber Channel Tape Controller.  The variable

          cpqFcTapeCntlrStatus indicates the current tape controller

          status.  The variable cpqFcTapeCntlrWWN indicates the unique

          tape controller world wide name associated with this controller.


          User Action: If the tape controller status is offline, access to

          the tape library and tapes has been lost.  Check the tape library

          and all Fibre connections for problems.'
        eventClassKey: cpqFcTapeCntlrStatusChange
        example: snmp trap cpqFcTapeCntlrStatusChange
        zProperties:
          zEventSeverity: 3
      cpqFcTapeDriveCleanTapeReplace:
        evaluation: 'Fibre Channel Tape Drive Cleaning Tape Needs Replacing.


          The agent has detected that an autoloader tape unit has a

          cleaning tape that has been fully used and therefore needs to be

          replaced with a new cleaning tape.'
        eventClassKey: cpqFcTapeDriveCleanTapeReplace
        example: snmp trap cpqFcTapeDriveCleanTapeReplace
        zProperties:
          zEventSeverity: 3
      cpqFcTapeDriveCleaningRequired:
        evaluation: 'Fibre Channel Tape Drive Cleaning Required trap.


          The agent has detected a tape drive that needs to have a

          cleaning tape inserted and run.  This will cause the tape drive

          heads to be cleaned.'
        eventClassKey: cpqFcTapeDriveCleaningRequired
        example: snmp trap cpqFcTapeDriveCleaningRequired
        zProperties:
          zEventSeverity: 3
      cpqFcTapeDriveStatusChange:
        evaluation: 'Fibre Channel Tape Drive Status Change.


          This trap signifies that the agent has detected a change in the

          status of a Fiber Channel Tape Drive.  The variable

          cpqFcTapeDriveStatus indicates the current tape status.  The

          variable cpqFcTapeDriveScsiTarget indicates the the SCSI ID of

          the tape drive.


          User Action: If the tape is failed or offline, check the tape

          and all fibre channel connections.'
        eventClassKey: cpqFcTapeDriveStatusChange
        example: snmp trap cpqFcTapeDriveStatusChange
        zProperties:
          zEventSeverity: 3
      cpqFcTapeLibraryDoorStatusChange:
        evaluation: 'Fibre Channel Tape Library Door Status Change.


          This trap signifies that the agent has detected a change in the

          door status of a Fiber Channel Tape library.  The variable

          cpqFcTapeLibraryDoorStatus indicates the current tape library

          door status.  The variable cpqFcTapeLibraryScsiTarget indicates

          the the SCSI ID of the tape library.


          User Action: If the tape library door is open, close the tape

          library door.'
        eventClassKey: cpqFcTapeLibraryDoorStatusChange
        example: snmp trap cpqFcTapeLibraryDoorStatusChange
        zProperties:
          zEventSeverity: 3
      cpqFcTapeLibraryStatusChange:
        evaluation: 'Fibre Channel Tape Library Status Change.


          This trap signifies that the agent has detected a change in the

          status of a Fiber Channel Tape library.  The variable

          cpqFcTapeLibraryStatus indicates the current tape library

          status.  The variable cpqFcTapeLibraryScsiTarget indicates the

          SCSI ID of the tape library.


          User Action: If the tape library is failed or offline, check the tape

          library front panel and all fibre channel connections.'
        eventClassKey: cpqFcTapeLibraryStatusChange
        example: snmp trap cpqFcTapeLibraryStatusChange
        zProperties:
          zEventSeverity: 3
      cpqFca2AccelBadDataTrap:
        evaluation: 'External Array Accelerator Board Bad Data.


          This trap signifies that the agent has detected a Array

          Accelerator Cache Board that has lost battery power.  If data

          was being stored in the accelerator memory when the system lost

          power, that data has been lost.


          User Action: Verify that no data has been lost.'
        eventClassKey: cpqFca2AccelBadDataTrap
        example: snmp trap cpqFca2AccelBadDataTrap
        zProperties:
          zEventSeverity: 3
      cpqFca2AccelBatteryFailed:
        evaluation: 'External Array Accelerator Board Battery Failed.


          This trap signifies that the agent has detected a battery

          failure associated with the Array Accelerator Cache Board.


          User Action: Replace the Accelerator Cache Board.'
        eventClassKey: cpqFca2AccelBatteryFailed
        example: snmp trap cpqFca2AccelBatteryFailed
        zProperties:
          zEventSeverity: 3
      cpqFca2AccelStatusChange:
        evaluation: 'External Array Accelerator Board Status Change.


          This trap signifies that the agent has detected a change in the

          status of a Array Accelerator Cache Board.  The current status

          is represented by the variable cpqFcaAccelStatus.


          User Action: If the accelerator board status is permDisabled(5),

          you may need to replace the accelerator board.'
        eventClassKey: cpqFca2AccelStatusChange
        example: snmp trap cpqFca2AccelStatusChange
        zProperties:
          zEventSeverity: 3
      cpqFca2CntlrStatusChange:
        evaluation: 'External Array Controller Status Change.


          This trap signifies that the agent has detected a change in the

          status of a External Array Controller.  The variable

          cpqFcaCntlrStatus indicates the current controller status.


          User Action: If the controller status is offline(4), access to

          the storage box has been lost.  Check the storage box and all

          fibre channel connections for problems.'
        eventClassKey: cpqFca2CntlrStatusChange
        example: snmp trap cpqFca2CntlrStatusChange
        zProperties:
          zEventSeverity: 3
      cpqFca2HostCntlrStatusChange:
        evaluation: 'Fibre Channel Host Controller Status Change.


          This trap signifies that the agent has detected a change in the

          status of a Fibre Channel Host Controller.  The variable

          cpqFcaHostCntlrStatus indicates the current controller status.


          User Action: If the controller status is failed, replace the

          controller.'
        eventClassKey: cpqFca2HostCntlrStatusChange
        example: snmp trap cpqFca2HostCntlrStatusChange
        zProperties:
          zEventSeverity: 3
      cpqFca2PhyDrvStatusChange:
        evaluation: 'External Array Physical Drive Status Change.


          This trap signifies that the agent has detected a change in the

          status of a physical drive.  The variable cpaFcaPhyDrvStatus

          indicates the current physical drive status.


          User Action: If the physical drive status is threshExceeded(4),

          predictiveFailure(5), failed(6) or unsupportedDrive(7), replace

          the drive.'
        eventClassKey: cpqFca2PhyDrvStatusChange
        example: snmp trap cpqFca2PhyDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqFca3HostCntlrStatusChange:
        evaluation: 'Fibre Channel Host Controller Status Change.


          This trap signifies that the agent has detected a change in the

          status of a Fibre Channel Host Controller.  The variable

          cpqFcaHostCntlrStatus indicates the current controller status.


          User Action: If the controller status is failed, replace the

          controller.'
        eventClassKey: cpqFca3HostCntlrStatusChange
        example: snmp trap cpqFca3HostCntlrStatusChange
        zProperties:
          zEventSeverity: 3
      cpqFcaAccelBadDataTrap:
        evaluation: 'External Array Accelerator Board Bad Data.


          This trap signifies that the agent has detected a Array

          Accelerator Cache Board that has lost battery power.  If data

          was being stored in the accelerator memory when the system lost

          power, that data has been lost.


          User Action: Verify that no data has been lost.'
        eventClassKey: cpqFcaAccelBadDataTrap
        example: snmp trap cpqFcaAccelBadDataTrap
        zProperties:
          zEventSeverity: 3
      cpqFcaAccelBatteryFailed:
        evaluation: 'External Array Accelerator Board Battery Failed.


          This trap signifies that the agent has detected a battery

          failure associated with the Array Accelerator Cache Board.


          User Action: Replace the Accelerator Cache Board.'
        eventClassKey: cpqFcaAccelBatteryFailed
        example: snmp trap cpqFcaAccelBatteryFailed
        zProperties:
          zEventSeverity: 3
      cpqFcaAccelStatusChange:
        evaluation: 'External Array Accelerator Board Status Change.


          This trap signifies that the agent has detected a change in the

          cpqFcaAccelStatus of a Array Accelerator Cache Board.  The

          current status is represented by the variable cpqFcaAccelStatus.


          User Action: None.'
        eventClassKey: cpqFcaAccelStatusChange
        example: snmp trap cpqFcaAccelStatusChange
        zProperties:
          zEventSeverity: 3
      cpqFcaCntlrActive:
        evaluation: 'External Array Redundant Controller Active.


          This trap signifies that the Storage Agent has detected that

          a backup array controller in a duplexed pair has switched over

          to the active role.  The variable cpqFcaCntlrBoxIoSlot indicates

          the new active controller index.


          User Action: Check the partner controller for problems.

          If this was the result of a user initiated switch over,

          no action is required.'
        eventClassKey: cpqFcaCntlrActive
        example: snmp trap cpqFcaCntlrActive
        zProperties:
          zEventSeverity: 0
      cpqFcaCntlrStatusChange:
        evaluation: 'External Array Controller Status Change.


          This trap signifies that the agent has detected a change in the

          status of a External Array Controller.  The variable

          cpqFcaCntlrStatus indicates the current controller status.


          User Action: If the controller status is offline, access to the

          storage box has been lost.  Check the storage box and all fibre

          channel connections for problems.'
        eventClassKey: cpqFcaCntlrStatusChange
        example: snmp trap cpqFcaCntlrStatusChange
        zProperties:
          zEventSeverity: 3
      cpqFcaHostCntlrStatusChange:
        evaluation: 'Fibre Channel Host Controller Status Change.


          This trap signifies that the Insight Agent has detected a change

          in the status of a Fibre Channel Host Controller.  The variable

          cpqFcaHostCntlrStatus indicates the current controller status.


          User Action: If the controller status is failed, replace the

          controller.'
        eventClassKey: cpqFcaHostCntlrStatusChange
        example: snmp trap cpqFcaHostCntlrStatusChange
        zProperties:
          zEventSeverity: 3
      cpqFcaLogDrvStatusChange:
        evaluation: 'External Array Logical Drive Status Change.


          This trap signifies that the agent has detected a change in the

          status of a External Array logical drive.  The variable

          cpqFcaLogDrvStatus indicates the current logical drive status.


          User Action: If the logical drive status is failed, examine

          the array for failed drives that need replacement.'
        eventClassKey: cpqFcaLogDrvStatusChange
        example: snmp trap cpqFcaLogDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqFcaPhyDrvStatusChange:
        evaluation: 'External Array Physical Drive Status Change.


          This trap signifies that the agent has detected a change in the

          status of a physical drive.  The variable cpaFcaPhyDrvStatus

          indicates the current physical drive status.  The variable

          cpqFcaPhyDrvBusNumber indicates the SCSI bus number associated

          with this drive.


          User Action: If the physical drive status is threshExceeded(4),

          predictiveFailure(5) or failed(6), replace the drive.'
        eventClassKey: cpqFcaPhyDrvStatusChange
        example: snmp trap cpqFcaPhyDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqFcaSpareStatusChange:
        evaluation: 'External Array Spare Drive Status Change.


          This trap signifies that the agent has detected a change in the

          status of a External Array spare drive.  The variable

          cpqFcaSpareStatus indicates the current spare drive status.  The

          variable cpqFcaSpareBusNumber indicates the SCSI bus number

          associated with this drive.


          User Action: If the spare drive status is failed, replace the

          drive.'
        eventClassKey: cpqFcaSpareStatusChange
        example: snmp trap cpqFcaSpareStatusChange
        zProperties:
          zEventSeverity: 3
      cpqHe2CorrectableMemoryError:
        evaluation: 'A correctable memory error occurred.


          The error has been corrected.  The current number of correctable

          memory errors is reported in the variable cpqHeCorrMemTotalErrs.'
        eventClassKey: cpqHe2CorrectableMemoryError
        example: snmp trap cpqHe2CorrectableMemoryError
        zProperties:
          zEventSeverity: 3
      cpqHe2CorrectableMemoryLogDisabled:
        evaluation: 'Correctable memory error tracking disabled.


          The frequency of errors is so high that the error tracking

          logic has been temporarily disabled.  The cpqHeCorrMemLogStatus

          variable indicated the current tracking status.'
        eventClassKey: cpqHe2CorrectableMemoryLogDisabled
        example: snmp trap cpqHe2CorrectableMemoryLogDisabled
        zProperties:
          zEventSeverity: 3
      cpqHe3AsrConfirmation:
        evaluation: 'The server is operational again.


          The server has previously been shutdown by the

          Automatic Server Recovery (ASR) feature and has just

          become operational again.'
        eventClassKey: cpqHe3AsrConfirmation
        example: snmp trap cpqHe3AsrConfirmation
        zProperties:
          zEventSeverity: 0
      cpqHe3CacheAccelParityError:
        evaluation: 'A cache accelerator parity error indicates a cache module

          needs to be replaced.


          The error information is reported in the variable

          cpqHeEventLogErrorDesc.'
        eventClassKey: cpqHe3CacheAccelParityError
        example: snmp trap cpqHe3CacheAccelParityError
        zProperties:
          zEventSeverity: 3
      cpqHe3CorrMemReplaceMemModule:
        evaluation: 'A correctable memory log entry indicates a memory module needs

          to be replaced.


          The errors have been corrected, but the memory module should be

          replaced.  The error information is reported in the variable

          cpqHeCorrMemErrDesc.'
        eventClassKey: cpqHe3CorrMemReplaceMemModule
        example: snmp trap cpqHe3CorrMemReplaceMemModule
        zProperties:
          zEventSeverity: 3
      cpqHe3CorrectableMemoryError:
        evaluation: 'A correctable memory error occurred.


          The error has been corrected.  The current number of correctable

          memory errors is reported in the variable cpqHeCorrMemTotalErrs.'
        eventClassKey: cpqHe3CorrectableMemoryError
        example: snmp trap cpqHe3CorrectableMemoryError
        zProperties:
          zEventSeverity: 3
      cpqHe3CorrectableMemoryLogDisabled:
        evaluation: 'Correctable memory error tracking disabled.


          The frequency of errors is so high that the error tracking

          logic has been temporarily disabled.  The cpqHeCorrMemLogStatus

          variable indicated the current tracking status.'
        eventClassKey: cpqHe3CorrectableMemoryLogDisabled
        example: snmp trap cpqHe3CorrectableMemoryLogDisabled
        zProperties:
          zEventSeverity: 3
      cpqHe3FltTolFanDegraded:
        evaluation: 'The Fault Tolerant Fan condition has been set to degraded

          for the specified chassis and fan.'
        eventClassKey: cpqHe3FltTolFanDegraded
        example: snmp trap cpqHe3FltTolFanDegraded
        zProperties:
          zEventSeverity: 3
      cpqHe3FltTolFanFailed:
        evaluation: 'The Fault Tolerant Fan condition has been set to failed

          for the specified chassis and fan.'
        eventClassKey: cpqHe3FltTolFanFailed
        example: snmp trap cpqHe3FltTolFanFailed
        zProperties:
          zEventSeverity: 3
      cpqHe3FltTolFanInserted:
        evaluation: 'A Fault Tolerant Fan has been inserted into the specified

          chassis and fan location.'
        eventClassKey: cpqHe3FltTolFanInserted
        example: snmp trap cpqHe3FltTolFanInserted
        zProperties:
          zEventSeverity: 3
      cpqHe3FltTolFanRedundancyLost:
        evaluation: 'The Fault Tolerant Fans have lost redundancy for the

          specified chassis.'
        eventClassKey: cpqHe3FltTolFanRedundancyLost
        example: snmp trap cpqHe3FltTolFanRedundancyLost
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqHe3FltTolFanRedundancyRestored
          zEventSeverity: 3
      cpqHe3FltTolFanRedundancyRestored:
        evaluation: 'The Fault Tolerant Fans have returned to a redundant state for

          the specified chassis.'
        eventClassKey: cpqHe3FltTolFanRedundancyRestored
        example: snmp trap cpqHe3FltTolFanRedundancyRestored
        zProperties:
          zEventSeverity: 0
      cpqHe3FltTolFanRemoved:
        evaluation: 'A Fault Tolerant Fan has been removed from the specified

          chassis and fan location.'
        eventClassKey: cpqHe3FltTolFanRemoved
        example: snmp trap cpqHe3FltTolFanRemoved
        zProperties:
          zEventSeverity: 3
      cpqHe3FltTolPowerRedundancyLost:
        evaluation: 'The Fault Tolerant Power Supplies have lost redundancy for

          the specified chassis.'
        eventClassKey: cpqHe3FltTolPowerRedundancyLost
        example: snmp trap cpqHe3FltTolPowerRedundancyLost
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqHe3FltTolPowerRedundancyRestored
          zEventSeverity: 3
      cpqHe3FltTolPowerRedundancyRestored:
        evaluation: 'The Fault Tolerant Power Supplies have returned to a redundant

          state for the specified chassis.'
        eventClassKey: cpqHe3FltTolPowerRedundancyRestored
        example: snmp trap cpqHe3FltTolPowerRedundancyRestored
        zProperties:
          zEventSeverity: 0
      cpqHe3FltTolPowerSupplyDegraded:
        evaluation: 'The fault tolerant power supply condition has been set

          to degraded for the specified chassis and bay location.'
        eventClassKey: cpqHe3FltTolPowerSupplyDegraded
        example: snmp trap cpqHe3FltTolPowerSupplyDegraded
        zProperties:
          zEventSeverity: 3
      cpqHe3FltTolPowerSupplyFailed:
        evaluation: 'The fault tolerant power supply condition has been set

          to failed for the specified chassis and bay location.'
        eventClassKey: cpqHe3FltTolPowerSupplyFailed
        example: snmp trap cpqHe3FltTolPowerSupplyFailed
        zProperties:
          zEventSeverity: 3
      cpqHe3FltTolPowerSupplyInserted:
        evaluation: 'A Fault Tolerant Power Supply has been inserted into the

          specified chassis and bay location.'
        eventClassKey: cpqHe3FltTolPowerSupplyInserted
        example: snmp trap cpqHe3FltTolPowerSupplyInserted
        zProperties:
          zEventSeverity: 3
      cpqHe3FltTolPowerSupplyRemoved:
        evaluation: 'A Fault Tolerant Power Supply has been removed from the

          specified chassis and bay location.'
        eventClassKey: cpqHe3FltTolPowerSupplyRemoved
        example: snmp trap cpqHe3FltTolPowerSupplyRemoved
        zProperties:
          zEventSeverity: 3
      cpqHe3FltTolPwrSupplyDegraded:
        evaluation: 'The fault tolerant power supply sub-system condition has been

          set to degraded.'
        eventClassKey: cpqHe3FltTolPwrSupplyDegraded
        example: snmp trap cpqHe3FltTolPwrSupplyDegraded
        zProperties:
          zEventSeverity: 3
      cpqHe3PostError:
        evaluation: 'One or more POST errors occurred.


          Power On Self-Test (POST) errors occur during the server

          restart process. Details of the POST error messages can

          be found in Integrated Management Log'
        eventClassKey: cpqHe3PostError
        example: snmp trap cpqHe3PostError
        zProperties:
          zEventSeverity: 3
      cpqHe3PowerConverterDegraded:
        evaluation: 'The DC-DC Power Converter condition has been set to degraded

          for the specified chassis, slot and socket.'
        eventClassKey: cpqHe3PowerConverterDegraded
        example: snmp trap cpqHe3PowerConverterDegraded
        zProperties:
          zEventSeverity: 3
      cpqHe3PowerConverterFailed:
        evaluation: 'The DC-DC Power Converter condition has been set to failed

          for the specified chassis, slot and socket.'
        eventClassKey: cpqHe3PowerConverterFailed
        example: snmp trap cpqHe3PowerConverterFailed
        zProperties:
          zEventSeverity: 3
      cpqHe3PowerConverterRedundancyLost:
        evaluation: 'The DC-DC Power Converters have lost redundancy for the

          specified chassis.'
        eventClassKey: cpqHe3PowerConverterRedundancyLost
        example: snmp trap cpqHe3PowerConverterRedundancyLost
        zProperties:
          zEventSeverity: 3
      cpqHe3TemperatureDegraded:
        evaluation: 'The temperature status has been set to degraded in the

          specified chassis and location.


          The server''s temperature is outside of the normal operating

          range.  The server will be shutdown if the

          cpqHeThermalDegradedAction variable is set to shutdown(3).'
        eventClassKey: cpqHe3TemperatureDegraded
        example: snmp trap cpqHe3TemperatureDegraded
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqHe3TemperatureOk
          zEventSeverity: 3
      cpqHe3TemperatureFailed:
        evaluation: 'The temperature status has been set to failed in the

          specified chassis and location.


          The system will be shutdown due to this condition.'
        eventClassKey: cpqHe3TemperatureFailed
        example: snmp trap cpqHe3TemperatureFailed
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqHe3TemperatureOk
          zEventSeverity: 3
      cpqHe3TemperatureOk:
        evaluation: 'The temperature status has been set to ok in the

          specified chassis and location.


          The server''s temperature has returned to the normal operating

          range.'
        eventClassKey: cpqHe3TemperatureOk
        example: snmp trap cpqHe3TemperatureOk
        zProperties:
          zEventSeverity: 0
      cpqHe3ThermalConfirmation:
        evaluation: 'The server is operational again.


          The server has previously been shutdown due to a thermal

          anomaly on the server and has just become operational again.'
        eventClassKey: cpqHe3ThermalConfirmation
        example: snmp trap cpqHe3ThermalConfirmation
        zProperties:
          zEventSeverity: 0
      cpqHe3ThermalCpuFanFailed:
        evaluation: 'The CPU fan status has been set to failed.


          A processor fan is not operating normally.  The server will be

          shutdown.'
        eventClassKey: cpqHe3ThermalCpuFanFailed
        example: snmp trap cpqHe3ThermalCpuFanFailed
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqHe3ThermalCpuFanOk
          zEventSeverity: 3
      cpqHe3ThermalCpuFanOk:
        evaluation: 'The CPU fan status has been set to ok.


          Any previously non-operational processor fans have returned

          to normal operation.'
        eventClassKey: cpqHe3ThermalCpuFanOk
        example: snmp trap cpqHe3ThermalCpuFanOk
        zProperties:
          zEventSeverity: 0
      cpqHe3ThermalSystemFanDegraded:
        evaluation: 'The system fan status has been set to degraded.


          An optional system fan is not operating normally.'
        eventClassKey: cpqHe3ThermalSystemFanDegraded
        example: snmp trap cpqHe3ThermalSystemFanDegraded
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqHe3ThermalSystemFanOk
          zEventSeverity: 3
      cpqHe3ThermalSystemFanFailed:
        evaluation: 'The system fan status has been set to failed.


          A required system fan is not operating normally.  The system

          will be shutdown if the cpqHeThermalDegradedAction variable

          is set to shutdown(3).'
        eventClassKey: cpqHe3ThermalSystemFanFailed
        example: snmp trap cpqHe3ThermalSystemFanFailed
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqHe3ThermalSystemFanOk
          zEventSeverity: 3
      cpqHe3ThermalSystemFanOk:
        evaluation: 'The system fan status has been set to ok.


          Any previously non-operational system fans have returned to

          normal operation.'
        eventClassKey: cpqHe3ThermalSystemFanOk
        example: snmp trap cpqHe3ThermalSystemFanOk
        zProperties:
          zEventSeverity: 0
      cpqHe3ThermalTempDegraded:
        evaluation: 'The temperature status has been set to degraded.


          The server''s temperature is outside of the normal operating

          range.  The server will be shutdown if the

          cpqHeThermalDegradedAction variable is set to shutdown(3).'
        eventClassKey: cpqHe3ThermalTempDegraded
        example: snmp trap cpqHe3ThermalTempDegraded
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqHe3ThermalTempOk
          zEventSeverity: 3
      cpqHe3ThermalTempFailed:
        evaluation: 'The temperature status has been set to failed.


          The system will be shutdown due to this thermal condition.'
        eventClassKey: cpqHe3ThermalTempFailed
        example: snmp trap cpqHe3ThermalTempFailed
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqHe3ThermalTempOk
          zEventSeverity: 3
      cpqHe3ThermalTempOk:
        evaluation: 'The temperature status has been set to ok.


          The server''s temperature has returned to the normal operating

          range.'
        eventClassKey: cpqHe3ThermalTempOk
        example: snmp trap cpqHe3ThermalTempOk
        zProperties:
          zEventSeverity: 0
      cpqHe4CorrMemReplaceMemModule:
        evaluation: 'Corrected Memory Errors Detected


          The errors have been corrected, but the memory module should be

          replaced.'
        eventClassKey: cpqHe4CorrMemReplaceMemModule
        example: snmp trap cpqHe4CorrMemReplaceMemModule
        zProperties:
          zEventSeverity: 3
      cpqHe4FltTolPowerSupplyACpowerloss:
        evaluation: The fault tolerant power supply AC power loss for the specified
          chassis and bay location.
        eventClassKey: cpqHe4FltTolPowerSupplyACpowerloss
        example: snmp trap cpqHe4FltTolPowerSupplyACpowerloss
        zProperties:
          zEventSeverity: 3
      cpqHe4FltTolPowerSupplyDegraded:
        evaluation: 'The fault tolerant power supply condition has been set

          to degraded for the specified chassis and bay location.'
        eventClassKey: cpqHe4FltTolPowerSupplyDegraded
        example: snmp trap cpqHe4FltTolPowerSupplyDegraded
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqHe4FltTolPowerSupplyOk
          zEventSeverity: 3
      cpqHe4FltTolPowerSupplyFailed:
        evaluation: 'The fault tolerant power supply condition has been set

          to failed for the specified chassis and bay location.'
        eventClassKey: cpqHe4FltTolPowerSupplyFailed
        example: snmp trap cpqHe4FltTolPowerSupplyFailed
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqHe4FltTolPowerSupplyOk
          zEventSeverity: 3
      cpqHe4FltTolPowerSupplyOk:
        evaluation: 'The fault tolerant power supply condition has been set back

          to the OK state for the specified chassis and bay location.'
        eventClassKey: cpqHe4FltTolPowerSupplyOk
        example: snmp trap cpqHe4FltTolPowerSupplyOk
        zProperties:
          zEventSeverity: 0
      cpqHe5CorrMemReplaceMemModule:
        evaluation: 'Corrected \ uncorrected Memory Errors Detected


          The errors have been corrected, but the memory module should be

          replaced. Value 0 for CPU means memory is not Processor based'
        eventClassKey: cpqHe5CorrMemReplaceMemModule
        example: snmp trap cpqHe5CorrMemReplaceMemModule
        zProperties:
          zEventSeverity: 3
      cpqHe5ResMemBoardBusError:
        evaluation: 'Memory board or cartridge or Riser bus error detected.


          An Advanced Memory Protection sub-system board or cartridge or Riser

          bus error has been detected. Value 0 for CPU means memory is not processor
          based.


          User Action: Replace the indicated board or cartridge or Riser.'
        eventClassKey: cpqHe5ResMemBoardBusError
        example: snmp trap cpqHe5ResMemBoardBusError
        zProperties:
          zEventSeverity: 3
      cpqHe5ResMemBoardInserted:
        evaluation: 'Memory board or cartridge or riser inserted.


          An Advanced Memory Protection sub-system board or cartridge or riser

          Has been inserted into the system. Value 0 for CPU means memory is not processor
          based.


          User Action: None.'
        eventClassKey: cpqHe5ResMemBoardInserted
        example: snmp trap cpqHe5ResMemBoardInserted
        zProperties:
          zEventSeverity: 3
      cpqHe5ResMemBoardRemoved:
        evaluation: 'Memory board or cartridge or riser removed.


          An Advanced Memory Protection sub-system board or cartridge or riser has

          been removed from the system. Value 0 for CPU means memory is not processor
          based.


          User Action: Insure the board or cartridge or riser has memory correctly

          installed and re-insert the memory board or cartridge or CPU back into

          the system.'
        eventClassKey: cpqHe5ResMemBoardRemoved
        example: snmp trap cpqHe5ResMemBoardRemoved
        zProperties:
          zEventSeverity: 3
      cpqHeAsrConfirmation:
        evaluation: 'The server is operational again.


          The server has previously been shutdown by the

          Automatic Server Recovery (ASR) feature and has just

          become operational again.'
        eventClassKey: cpqHeAsrConfirmation
        example: snmp trap cpqHeAsrConfirmation
        zProperties:
          zEventSeverity: 0
      cpqHeCorrectableMemoryError:
        evaluation: 'A correctable memory error occurred.


          The error has been corrected.  The current number of correctable

          memory errors is reported in the variable cpqHeCorrMemTotalErrs.'
        eventClassKey: cpqHeCorrectableMemoryError
        example: snmp trap cpqHeCorrectableMemoryError
        zProperties:
          zEventSeverity: 3
      cpqHeCorrectableMemoryLogDisabled:
        evaluation: 'Correctable memory error tracking disabled.


          The frequency of errors is so high that the error tracking

          logic has been temporarily disabled.  The cpqHeCorrMemLogStatus

          variable indicated the current tracking status.'
        eventClassKey: cpqHeCorrectableMemoryLogDisabled
        example: snmp trap cpqHeCorrectableMemoryLogDisabled
        zProperties:
          zEventSeverity: 3
      cpqHeEventOccurred:
        evaluation: 'An event has occurred.

          User Action: None.'
        eventClassKey: cpqHeEventOccurred
        example: snmp trap cpqHeEventOccurred
        zProperties:
          zEventSeverity: 3
      cpqHeFltTolPwrSupplyDegraded:
        evaluation: 'The fault tolerant power supply sub-system condition has been

          set to degraded.'
        eventClassKey: cpqHeFltTolPwrSupplyDegraded
        example: snmp trap cpqHeFltTolPwrSupplyDegraded
        zProperties:
          zEventSeverity: 3
      cpqHeManagementProcFailedReset:
        evaluation: 'The Management processor failed reset


          The management processor was not successfully reset and is not

          operational.


          User action: Reset the management procesessor again or re-flash

          the management processor firmware.'
        eventClassKey: cpqHeManagementProcFailedReset
        example: snmp trap cpqHeManagementProcFailedReset
        zProperties:
          zEventSeverity: 3
      cpqHeManagementProcInReset:
        evaluation: 'The Management processor is currently in reset


          The management processor is currently in the process of being reset

          because of a firmware update or some other event.


          User action: None'
        eventClassKey: cpqHeManagementProcInReset
        example: snmp trap cpqHeManagementProcInReset
        zProperties:
          zEventSeverity: 3
      cpqHeManagementProcReady:
        evaluation: 'The Management processor is ready


          The management processor has successfully reset and is now available

          again.


          User action: None'
        eventClassKey: cpqHeManagementProcReady
        example: snmp trap cpqHeManagementProcReady
        zProperties:
          zEventSeverity: 3
      cpqHePostError:
        evaluation: 'One or more POST errors occurred.


          Power On Self-Test (POST) errors occur during the server

          restart process.'
        eventClassKey: cpqHePostError
        example: snmp trap cpqHePostError
        zProperties:
          zEventSeverity: 3
      cpqHeResMemBoardBusError:
        evaluation: 'Memory board or cartridge bus error detected.


          An Advanced Memory Protection sub-system board or cartridge

          bus error has been detected.


          User Action: Replace the indicated board or cartridge.'
        eventClassKey: cpqHeResMemBoardBusError
        example: snmp trap cpqHeResMemBoardBusError
        zProperties:
          zEventSeverity: 3
      cpqHeResMemBoardInserted:
        evaluation: 'Memory board or cartridge inserted.


          An Advanced Memory Protection sub-system board or cartridge has

          been inserted into the system.


          User Action: None.'
        eventClassKey: cpqHeResMemBoardInserted
        example: snmp trap cpqHeResMemBoardInserted
        zProperties:
          zEventSeverity: 3
      cpqHeResMemBoardRemoved:
        evaluation: 'Memory board or cartridge removed.


          An Advanced Memory Protection sub-system board or cartridge has

          been removed from the system.


          User Action: Insure the board or cartridge has memory correctly

          installed and re-insert the memory board or cartridge back into

          the system.'
        eventClassKey: cpqHeResMemBoardRemoved
        example: snmp trap cpqHeResMemBoardRemoved
        zProperties:
          zEventSeverity: 3
      cpqHeResilientAdvancedECCMemoryEngaged:
        evaluation: 'Advanced Memory Protection Advanced ECC Memory Engaged.


          The Advanced Memory Protection subsystem has detected a memory

          fault. Advanced ECC has been activated.


          User Action: Replace the faulty memory.'
        eventClassKey: cpqHeResilientAdvancedECCMemoryEngaged
        example: snmp trap cpqHeResilientAdvancedECCMemoryEngaged
        zProperties:
          zEventSeverity: 3
      cpqHeResilientMemLockStepMemoryEngaged:
        evaluation: 'Advanced Memory Protection LockStep Engine Memory Engaged.


          The Advanced Memory Protection subsystem has detected a memory

          fault. The LockStep engine has been activated.


          User Action: Replace the faulty memory.'
        eventClassKey: cpqHeResilientMemLockStepMemoryEngaged
        example: snmp trap cpqHeResilientMemLockStepMemoryEngaged
        zProperties:
          zEventSeverity: 3
      cpqHeResilientMemMirroredMemoryEngaged:
        evaluation: 'Advanced Memory Protection Mirrored Memory Engaged.


          The Advanced Memory Protection subsystem has detected a memory

          fault. Mirrored Memory has been activated.


          User Action: Replace the faulty memory.'
        eventClassKey: cpqHeResilientMemMirroredMemoryEngaged
        example: snmp trap cpqHeResilientMemMirroredMemoryEngaged
        zProperties:
          zEventSeverity: 3
      cpqHeResilientMemOnlineSpareEngaged:
        evaluation: 'Advanced Memory Protection Online Spare Engaged.


          The Advanced Memory Protection subsystem has detected a memory

          fault. The Online Spare Memory has been activated.


          User Action: Schedule server down-time to replace the faulty

          memory.'
        eventClassKey: cpqHeResilientMemOnlineSpareEngaged
        example: snmp trap cpqHeResilientMemOnlineSpareEngaged
        zProperties:
          zEventSeverity: 3
      cpqHeResilientMemXorMemoryEngaged:
        evaluation: 'Advanced Memory Protection XOR Engine Memory Engaged.


          The Advanced Memory Protection subsystem has detected a memory

          fault. The XOR engine has been activated.


          User Action: Replace the faulty memory.'
        eventClassKey: cpqHeResilientMemXorMemoryEngaged
        example: snmp trap cpqHeResilientMemXorMemoryEngaged
        zProperties:
          zEventSeverity: 3
      cpqHeSysBatteryFailed:
        evaluation: 'The system battery condition has been set to failed

          for the specified chassis and index location.'
        eventClassKey: cpqHeSysBatteryFailed
        example: snmp trap cpqHeSysBatteryFailed
        zProperties:
          zEventSeverity: 3
      cpqHeSysBatteryRemoved:
        evaluation: 'The system battery condition has removed

          for the specified chassis and index location.'
        eventClassKey: cpqHeSysBatteryRemoved
        example: snmp trap cpqHeSysBatteryRemoved
        zProperties:
          zEventSeverity: 3
      cpqHeThermalConfirmation:
        evaluation: 'The server is operational again.


          The server has previously been shutdown due to a thermal

          anomaly on the server and has just become operational again.'
        eventClassKey: cpqHeThermalConfirmation
        example: snmp trap cpqHeThermalConfirmation
        zProperties:
          zEventSeverity: 0
      cpqHeThermalCpuFanFailed:
        evaluation: 'The CPU fan status has been set to failed.


          A processor fan is not operating normally.  The server will be

          shutdown.'
        eventClassKey: cpqHeThermalCpuFanFailed
        example: snmp trap cpqHeThermalCpuFanFailed
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqHeThermalCpuFanOk
          zEventSeverity: 3
      cpqHeThermalCpuFanOk:
        evaluation: 'The CPU fan status has been set to ok.


          Any previously non-operational processor fans have returned

          to normal operation.'
        eventClassKey: cpqHeThermalCpuFanOk
        example: snmp trap cpqHeThermalCpuFanOk
        zProperties:
          zEventSeverity: 0
      cpqHeThermalSystemFanDegraded:
        evaluation: 'The system fan status has been set to degraded.


          An optional system fan is not operating normally.'
        eventClassKey: cpqHeThermalSystemFanDegraded
        example: snmp trap cpqHeThermalSystemFanDegraded
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqHeThermalSystemFanOk
          zEventSeverity: 3
      cpqHeThermalSystemFanFailed:
        evaluation: 'The system fan status has been set to failed.


          A required system fan is not operating normally.  The system

          will be shutdown if the cpqHeThermalDegradedAction variable

          is set to shutdown(3).'
        eventClassKey: cpqHeThermalSystemFanFailed
        example: snmp trap cpqHeThermalSystemFanFailed
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqHeThermalSystemFanOk
          zEventSeverity: 3
      cpqHeThermalSystemFanOk:
        evaluation: 'The system fan status has been set to ok.


          Any previously non-operational system fans have returned to

          normal operation.'
        eventClassKey: cpqHeThermalSystemFanOk
        example: snmp trap cpqHeThermalSystemFanOk
        zProperties:
          zEventSeverity: 0
      cpqHeThermalTempDegraded:
        evaluation: 'The temperature status has been set to degraded.


          The server''s temperature is outside of the normal operating

          range.  The server will be shutdown if the

          cpqHeThermalDegradedAction variable is set to shutdown(3).'
        eventClassKey: cpqHeThermalTempDegraded
        example: snmp trap cpqHeThermalTempDegraded
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqHeThermalTempOk
          zEventSeverity: 3
      cpqHeThermalTempFailed:
        evaluation: 'The temperature status has been set to failed.


          The system will be shutdown due to this thermal condition.'
        eventClassKey: cpqHeThermalTempFailed
        example: snmp trap cpqHeThermalTempFailed
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqHeThermalTempOk
          zEventSeverity: 3
      cpqHeThermalTempOk:
        evaluation: 'The temperature status has been set to ok.


          The server''s temperature has returned to the normal operating

          range.'
        eventClassKey: cpqHeThermalTempOk
        example: snmp trap cpqHeThermalTempOk
        zProperties:
          zEventSeverity: 0
      cpqHo2AppErrorTrap:
        evaluation: 'An application has generated an exception.  Specific

          error information is contained in the variable

          cpqHoSwPerfAppErrorDesc.'
        eventClassKey: cpqHo2AppErrorTrap
        example: snmp trap cpqHo2AppErrorTrap
        zProperties:
          zEventSeverity: 3
      cpqHo2GenericTrap:
        evaluation: Generic trap.
        eventClassKey: cpqHo2GenericTrap
        example: snmp trap cpqHo2GenericTrap
        zProperties:
          zEventSeverity: 3
      cpqHo2NicStatusFailed:
        evaluation: 'This trap will be sent any time the status of a NIC changes to

          the Failed condition.'
        eventClassKey: cpqHo2NicStatusFailed
        example: snmp trap cpqHo2NicStatusFailed
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqHo2NicStatusOk
          zEventSeverity: 3
      cpqHo2NicStatusFailed2:
        evaluation: 'This trap will be sent any time the status of a NIC changes to

          the Failed condition.'
        eventClassKey: cpqHo2NicStatusFailed2
        example: snmp trap cpqHo2NicStatusFailed2
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqHo2NicStatusOk
          zEventSeverity: 3
      cpqHo2NicStatusOk:
        evaluation: 'This trap will be sent any time the status of a NIC changes to

          the OK condition.'
        eventClassKey: cpqHo2NicStatusOk
        example: snmp trap cpqHo2NicStatusOk
        zProperties:
          zEventSeverity: 0
      cpqHo2NicStatusOk2:
        evaluation: 'This trap will be sent any time the status of a NIC changes to

          the OK condition.'
        eventClassKey: cpqHo2NicStatusOk2
        example: snmp trap cpqHo2NicStatusOk2
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqHo2NicStatusOk
          zEventSeverity: 3
      cpqHo2NicSwitchoverOccurred:
        evaluation: 'This trap will be sent any time the configured redundant NIC

          becomes the active NIC.'
        eventClassKey: cpqHo2NicSwitchoverOccurred
        example: snmp trap cpqHo2NicSwitchoverOccurred
        zProperties:
          zEventSeverity: 3
      cpqHo2NicSwitchoverOccurred2:
        evaluation: 'This trap will be sent any time the configured redundant NIC

          becomes the active NIC.'
        eventClassKey: cpqHo2NicSwitchoverOccurred2
        example: snmp trap cpqHo2NicSwitchoverOccurred2
        zProperties:
          zEventSeverity: 3
      cpqHo2PowerThresholdTrap:
        evaluation: Power threshold exceeded.
        eventClassKey: cpqHo2PowerThresholdTrap
        example: snmp trap cpqHo2PowerThresholdTrap
        zProperties:
          zEventSeverity: 3
      cpqHoAppErrorTrap:
        evaluation: 'An application has generated an exception.  Specific

          error information is contained in the variable

          cpqHoSwPerfAppErrorDesc.'
        eventClassKey: cpqHoAppErrorTrap
        example: snmp trap cpqHoAppErrorTrap
        zProperties:
          zEventSeverity: 3
      cpqHoBootPagingFileOrFreeSpaceTooSmallTrap:
        evaluation: This trap is sent when the paging file size of the boot volume
          or the free space of memory dump target volume is too small to hold a crash
          dump.
        eventClassKey: cpqHoBootPagingFileOrFreeSpaceTooSmallTrap
        example: snmp trap cpqHoBootPagingFileOrFreeSpaceTooSmallTrap
        zProperties:
          zEventSeverity: 3
      cpqHoBootPagingFileTooSmallTrap:
        evaluation: 'This trap is sent when the paging file size of the boot volume
          or the target volume of the memory dump file is too small to hold a crash
          dump.

          This trap is not sent if cpqHoCrashDumpMonitoring is disabled.'
        eventClassKey: cpqHoBootPagingFileTooSmallTrap
        example: snmp trap cpqHoBootPagingFileTooSmallTrap
        zProperties:
          zEventSeverity: 3
      cpqHoCrashDumpNotEnabledTrap:
        evaluation: 'This trap is sent to the user to notify him that the Crash Dump
          is not enabled.

          This trap is not sent if cpqHoCrashDumpMonitoring is disabled.'
        eventClassKey: cpqHoCrashDumpNotEnabledTrap
        example: snmp trap cpqHoCrashDumpNotEnabledTrap
        zProperties:
          zEventSeverity: 0
      cpqHoCriticalSoftwareUpdateTrap:
        evaluation: This trap is a send to the user to notify him of a Critical Software
          Update.
        eventClassKey: cpqHoCriticalSoftwareUpdateTrap
        example: snmp trap cpqHoCriticalSoftwareUpdateTrap
        zProperties:
          zEventSeverity: 3
      cpqHoGenericTrap:
        evaluation: Generic trap.
        eventClassKey: cpqHoGenericTrap
        example: snmp trap cpqHoGenericTrap
        zProperties:
          zEventSeverity: 3
      cpqHoMibHealthStatusArrayChangeTrap:
        evaluation: A change in the cpqHoMibHealthStatusArray has occurred.
        eventClassKey: cpqHoMibHealthStatusArrayChangeTrap
        example: snmp trap cpqHoMibHealthStatusArrayChangeTrap
        transform: 'evt.message = ''A change in the health status of the server has
          occurred.''

          evt.summary = ''A change in the health status of the server has occurred.''

          '
        zProperties:
          zEventSeverity: 3
      cpqHoProcessCountNormal:
        evaluation: A monitored process count has returned back to normal.
        eventClassKey: cpqHoProcessCountNormal
        example: snmp trap cpqHoProcessCountNormal
        zProperties:
          zEventSeverity: 0
      cpqHoProcessCountWarning:
        evaluation: A monitored process count has violated the thresholds set on cpqHoSWRunningCount
        eventClassKey: cpqHoProcessCountWarning
        example: snmp trap cpqHoProcessCountWarning
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqHoProcessCountNormal
          zEventSeverity: 3
      cpqHoProcessEventTrap:
        evaluation: A monitored process has either started or stopped running.
        eventClassKey: cpqHoProcessEventTrap
        example: snmp trap cpqHoProcessEventTrap
        zProperties:
          zEventSeverity: 3
      cpqHoSWRunningStatusChangeTrap:
        evaluation: This trap notifies the user that the running software has changed
          status, configuration status, or redundancy mode.
        eventClassKey: cpqHoSWRunningStatusChangeTrap
        example: snmp trap cpqHoSWRunningStatusChangeTrap
        zProperties:
          zEventSeverity: 3
      cpqICAAdd:
        eventClassKey: cpqICAAdd
        example: snmp trap cpqICAAdd
        sequence: 101
      cpqICADelete:
        eventClassKey: cpqICADelete
        example: snmp trap cpqICADelete
        sequence: 101
      cpqICAImportRestoreEnd:
        eventClassKey: cpqICAImportRestoreEnd
        example: snmp trap cpqICAImportRestoreEnd
        sequence: 101
      cpqICAImportRestoreStart:
        eventClassKey: cpqICAImportRestoreStart
        example: snmp trap cpqICAImportRestoreStart
        sequence: 101
      cpqICAMove:
        eventClassKey: cpqICAMove
        example: snmp trap cpqICAMove
        sequence: 101
      cpqICAPropertyChange:
        eventClassKey: cpqICAPropertyChange
        example: snmp trap cpqICAPropertyChange
        sequence: 101
      cpqIdeAtaDiskSSDWearStatusChange:
        evaluation: "Solid State Disk Wear Status Change.\n\nThis trap signifies that\
          \ the agent has detected a change in the\nSSD wear status of a SATA physical\
          \ drive.  The variable\ncpqIdeAtaDiskSSDWearStatus indicates the current\
          \ SSD wear status.\n\nUser Action: If cpqIdeAtaDiskSSDWearStatus is 'ssdWearOut(6)',\
          \ \nreplace the drive."
        eventClassKey: cpqIdeAtaDiskSSDWearStatusChange
        example: snmp trap cpqIdeAtaDiskSSDWearStatusChange
        zProperties:
          zEventSeverity: 3
      cpqIdeAtaDiskStatusChange:
        evaluation: "ATA Disk Status Change.\n\nThis trap signifies that the agent\
          \ has detected a change in the\nstatus of an ATA disk drive.  The variable\
          \ cpqIdeAtaDiskStatus\nindicates the current disk drive status.\n\nUser\
          \ Action: If cpqIdeAtaDiskStatus is 'smartError(3)', \n'failed(4)' or 'ssdWearOut(5)'\
          \ replace the drive."
        eventClassKey: cpqIdeAtaDiskStatusChange
        example: snmp trap cpqIdeAtaDiskStatusChange
        zProperties:
          zEventSeverity: 3
      cpqIdeDriveDegraded:
        evaluation: 'An IDE drive status has been set to degraded.


          User Action: The drive should be scheduled for replacement.


          Refer to the appropriate Maintenance and Service Guide for

          detailed information on a component replacement.'
        eventClassKey: cpqIdeDriveDegraded
        example: snmp trap cpqIdeDriveDegraded
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqIdeDriveOk
          zEventSeverity: 3
      cpqIdeDriveOk:
        evaluation: 'An IDE drive status has been set to ok.


          User Action: None.'
        eventClassKey: cpqIdeDriveOk
        example: snmp trap cpqIdeDriveOk
        zProperties:
          zEventSeverity: 0
      cpqIdeDriveUltraAtaDegraded:
        evaluation: 'An IDE drive detects an excessive number of Ultra ATA

          data transmission errors between the hard drive and the

          processor.


          User Action: For best performance move Ultra ATA devices to the

          primary controller and non Ultra ATA devices to the secondary

          controller.  If errors still persist, consider replacing the

          standard 40-conductor IDE cable with an 80-conductor Ultra ATA

          cable.'
        eventClassKey: cpqIdeDriveUltraAtaDegraded
        example: snmp trap cpqIdeDriveUltraAtaDegraded
        zProperties:
          zEventSeverity: 3
      cpqIdeLogicalDriveStatusChange:
        evaluation: 'IDE Logical Drive Status Change.


          This trap signifies that the agent has detected a change in the

          status of an IDE logical drive.  The variable

          cpqIdeLogicalDriveStatus indicates the current logical drive

          status.


          User Action: If the logical drive status is failed(5), examine

          the array for failed drives that need replacement.'
        eventClassKey: cpqIdeLogicalDriveStatusChange
        example: snmp trap cpqIdeLogicalDriveStatusChange
        zProperties:
          zEventSeverity: 3
      cpqIoDrvErrorTrap:
        eventClassKey: cpqIoDrvErrorTrap
        example: snmp trap cpqIoDrvErrorTrap
        sequence: 101
      cpqIoDrvFlashbackTrap:
        eventClassKey: cpqIoDrvFlashbackTrap
        example: snmp trap cpqIoDrvFlashbackTrap
        sequence: 101
      cpqIoDrvNonWritableTrap:
        eventClassKey: cpqIoDrvNonWritableTrap
        example: snmp trap cpqIoDrvNonWritableTrap
        sequence: 101
      cpqIoDrvPowerlossProtectTrap:
        eventClassKey: cpqIoDrvPowerlossProtectTrap
        example: snmp trap cpqIoDrvPowerlossProtectTrap
        sequence: 101
      cpqIoDrvTempHighTrap:
        eventClassKey: cpqIoDrvTempHighTrap
        example: snmp trap cpqIoDrvTempHighTrap
        sequence: 101
      cpqIoDrvTempOkTrap:
        eventClassKey: cpqIoDrvTempOkTrap
        example: snmp trap cpqIoDrvTempOkTrap
        sequence: 101
      cpqIoDrvWearoutTrap:
        eventClassKey: cpqIoDrvWearoutTrap
        example: snmp trap cpqIoDrvWearoutTrap
        sequence: 101
      cpqMe2FallingAlarm:
        evaluation: 'Falling Threshold passed.


          An alarm entry has crossed its falling threshold.  The

          instances of those objects contained within the variable

          list are those of the alarm entry which generated this trap.'
        eventClassKey: cpqMe2FallingAlarm
        example: snmp trap cpqMe2FallingAlarm
        zProperties:
          zEventSeverity: 3
      cpqMe2RisingAlarm:
        evaluation: 'Rising Threshold passed.


          An alarm entry has crossed its rising threshold.  The

          instances of those objects contained within the variable

          list are those of the alarm entry which generated this trap.'
        eventClassKey: cpqMe2RisingAlarm
        example: snmp trap cpqMe2RisingAlarm
        zProperties:
          zEventSeverity: 3
      cpqMeCriticalFallingAlarmExtended:
        evaluation: 'Critical Falling Threshold passed.


          An alarm entry has crossed its Critical falling threshold.  The

          instances of those objects contained within the variable

          list are those of the alarm entry which generated this trap.'
        eventClassKey: cpqMeCriticalFallingAlarmExtended
        example: snmp trap cpqMeCriticalFallingAlarmExtended
        zProperties:
          zEventSeverity: 3
      cpqMeCriticalRisingAlarmExtended:
        evaluation: 'Critical Rising Threshold passed.


          An alarm entry has crossed its Critical rising threshold.  The

          instances of those objects contained within the variable

          list are those of the alarm entry which generated this trap.'
        eventClassKey: cpqMeCriticalRisingAlarmExtended
        example: snmp trap cpqMeCriticalRisingAlarmExtended
        zProperties:
          zEventSeverity: 3
      cpqMeFallingAlarm:
        evaluation: 'Falling Threshold passed.


          An alarm entry has crossed its falling threshold.  The

          instances of those objects contained within the variable

          list are those of the alarm entry which generated this trap.'
        eventClassKey: cpqMeFallingAlarm
        example: snmp trap cpqMeFallingAlarm
        zProperties:
          zEventSeverity: 3
      cpqMeFallingAlarmExtended:
        evaluation: 'Falling Threshold passed.


          An alarm entry has crossed its falling threshold.  The

          instances of those objects contained within the variable

          list are those of the alarm entry which generated this trap.'
        eventClassKey: cpqMeFallingAlarmExtended
        example: snmp trap cpqMeFallingAlarmExtended
        zProperties:
          zEventSeverity: 3
      cpqMeRisingAlarm:
        evaluation: 'Rising Threshold passed.


          An alarm entry has crossed its rising threshold.  The

          instances of those objects contained within the variable

          list are those of the alarm entry which generated this trap.'
        eventClassKey: cpqMeRisingAlarm
        example: snmp trap cpqMeRisingAlarm
        zProperties:
          zEventSeverity: 3
      cpqMeRisingAlarmExtended:
        evaluation: 'Rising Threshold passed.


          An alarm entry has crossed its rising threshold.  The

          instances of those objects contained within the variable

          list are those of the alarm entry which generated this trap.'
        eventClassKey: cpqMeRisingAlarmExtended
        example: snmp trap cpqMeRisingAlarmExtended
        zProperties:
          zEventSeverity: 3
      cpqNic2ConnectivityLost:
        evaluation: 'This trap will be sent any time the status of a logical

          adapter changes to the Failed condition.  This occurs

          when the adapter in a single adapter configuration fails,

          or when the last adapter in a redundant configuration fails.


          This can be caused by loss of link due to a cable being

          removed from the adapter or the Hub or Switch.  Internal

          adapter, Hub, or Switch failures can also cause this

          condition.


          User Action: Check the cables to the adapter and the Hub or

          Switch.  If no cable problems are found, the adapter, Hub,

          or Switch may need replacement.'
        eventClassKey: cpqNic2ConnectivityLost
        example: snmp trap cpqNic2ConnectivityLost
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqNic2ConnectivityRestored
          zEventSeverity: 3
      cpqNic2ConnectivityRestored:
        evaluation: 'This trap will be sent any time connectivity is restored

          to a logical adapter.  This occurs when the physical

          adapter in a single adapter configuration returns to

          the OK condition or at least one physical adapter

          in a logical adapter group returns to the OK condition.


          This can be caused by replacement of a faulty cable

          or re-attaching a cable that was unplugged.


          User Action: None required.'
        eventClassKey: cpqNic2ConnectivityRestored
        example: snmp trap cpqNic2ConnectivityRestored
        zProperties:
          zEventSeverity: 0
      cpqNic2RedundancyIncreased:
        evaluation: 'This trap will be sent any time a previously failed physical

          adapter in a connected logical adapter group returns to the OK

          condition.  This trap is not sent when a logical adapter

          group has connectivity restored from a Failed condition.  The

          cpqNicConnectivityRestored trap is sent instead.


          This can be caused by replacement of a faulty cable

          or re-attaching a cable that was unplugged.



          User Action:  None required.'
        eventClassKey: cpqNic2RedundancyIncreased
        example: snmp trap cpqNic2RedundancyIncreased
        zProperties:
          zEventSeverity: 0
      cpqNic2RedundancyReduced:
        evaluation: 'This trap will be sent any time a physical adapter in a

          logical adapter group changes to the Failed condition, but

          at least one physical adapter remains in the OK condition..


          This can be caused by loss of link due to a cable being

          removed from the adapter or the Hub or Switch.  Internal

          adapter, Hub, or Switch failures can also cause this

          condition.


          User Action: Check the cables to the adapter and the Hub or

          Switch.  If no cable problems are found, the adapter, Hub,

          or Switch may need replacement.'
        eventClassKey: cpqNic2RedundancyReduced
        example: snmp trap cpqNic2RedundancyReduced
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqNic2RedundancyIncreased
          zEventSeverity: 3
      cpqNic3ConnectivityLost:
        evaluation: 'This trap will be sent any time the status of a logical

          adapter changes to the Failed condition.  This occurs

          when the adapter in a single adapter configuration fails,

          or when the last adapter in a redundant configuration fails.


          This can be caused by loss of link due to a cable being

          removed from the adapter or the Hub or Switch.  Internal

          adapter, Hub, or Switch failures can also cause this

          condition.


          User Action: Check the connection to the adapter and validate the connectivity
          from the server to any external device, including the cabling. If no problems
          are found, the adapter or other connectivity device may need replacement.'
        eventClassKey: cpqNic3ConnectivityLost
        example: snmp trap cpqNic3ConnectivityLost
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqNic3ConnectivityRestored
          zEventSeverity: 3
      cpqNic3ConnectivityRestored:
        evaluation: 'This trap will be sent any time connectivity is restored

          to a logical adapter.  This occurs when the physical

          adapter in a single adapter configuration returns to

          the OK condition or at least one physical adapter

          in a logical adapter group returns to the OK condition.


          This can be caused by replacement of a faulty cable

          or re-attaching a cable that was unplugged.


          User Action: None required.'
        eventClassKey: cpqNic3ConnectivityRestored
        example: snmp trap cpqNic3ConnectivityRestored
        zProperties:
          zEventSeverity: 0
      cpqNic3RedundancyIncreased:
        evaluation: 'This trap will be sent any time a previously failed physical

          adapter in a connected logical adapter group returns to the OK

          condition.  This trap is not sent when a logical adapter

          group has connectivity restored from a Failed condition.  The

          cpqNicConnectivityRestored trap is sent instead.


          This can be caused by replacement of a faulty cable

          or re-attaching a cable that was unplugged.



          User Action:  None required.'
        eventClassKey: cpqNic3RedundancyIncreased
        example: snmp trap cpqNic3RedundancyIncreased
        zProperties:
          zEventSeverity: 0
      cpqNic3RedundancyReduced:
        evaluation: 'This trap will be sent any time a physical adapter in a

          logical adapter group changes to the Failed condition, but

          at least one physical adapter remains in the OK condition..


          This can be caused by loss of link due to a cable being

          removed from the adapter or the Hub or Switch.  Internal

          adapter, Hub, or Switch failures can also cause this

          condition.


          User Action: Check the connection to the adapter and validate the connectivity
          from the server to any external device, including the cabling. If no problems
          are found, the adapter or other connectivity device may need replacement.'
        eventClassKey: cpqNic3RedundancyReduced
        example: snmp trap cpqNic3RedundancyReduced
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqNic3RedundancyIncreased
          zEventSeverity: 3
      cpqNicConnectivityLost:
        evaluation: 'This trap will be sent any time the status of a logical

          adapter changes to the Failed condition.  This occurs

          when the adapter in a single adapter configuration fails,

          or when the last adapter in a redundant configuration fails.


          This can be caused by loss of link due to a cable being

          removed from the adapter or the Hub or Switch.  Internal

          adapter, Hub, or Switch failures can also cause this

          condition.


          User Action: Check the cables to the adapter and the Hub or

          Switch.  If no cable problems are found, the adapter, Hub,

          or Switch may need replacement.'
        eventClassKey: cpqNicConnectivityLost
        example: snmp trap cpqNicConnectivityLost
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqNicConnectivityRestored
          zEventSeverity: 3
      cpqNicConnectivityRestored:
        evaluation: 'This trap will be sent any time connectivity is restored

          to a logical adapter.  This occurs when the physical

          adapter in a single adapter configuration returns to

          the OK condition or at least one physical adapter

          in a logical adapter group returns to the OK condition.


          This can be caused by replacement of a faulty cable

          or re-attaching a cable that was unplugged.


          User Action: None required.'
        eventClassKey: cpqNicConnectivityRestored
        example: snmp trap cpqNicConnectivityRestored
        zProperties:
          zEventSeverity: 0
      cpqNicRedundancyIncreased:
        evaluation: 'This trap will be sent any time a previously failed physical

          adapter in a connected logical adapter group returns to the OK

          condition.  This trap is not sent when a logical adapter

          group has connectivity restored from a Failed condition.  The

          cpqNicConnectivityRestored trap is sent instead.


          This can be caused by replacement of a faulty cable

          or re-attaching a cable that was unplugged.



          User Action:  None required.'
        eventClassKey: cpqNicRedundancyIncreased
        example: snmp trap cpqNicRedundancyIncreased
        zProperties:
          zEventSeverity: 0
      cpqNicRedundancyReduced:
        evaluation: 'This trap will be sent any time a physical adapter in a

          logical adapter group changes to the Failed condition, but

          at least one physical adapter remains in the OK condition..


          This can be caused by loss of link due to a cable being

          removed from the adapter or the Hub or Switch.  Internal

          adapter, Hub, or Switch failures can also cause this

          condition.


          User Action: Check the cables to the adapter and the Hub or

          Switch.  If no cable problems are found, the adapter, Hub,

          or Switch may need replacement.'
        eventClassKey: cpqNicRedundancyReduced
        example: snmp trap cpqNicRedundancyReduced
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqNicRedundancyIncreased
          zEventSeverity: 3
      cpqNicVirusLikeActivityDetected:
        evaluation: 'This trap will be sent when the Virus Throttle Filter

          Driver detects virus like activity.


          User Action:  The system reporting this trap requires

          immediate attention.'
        eventClassKey: cpqNicVirusLikeActivityDetected
        example: snmp trap cpqNicVirusLikeActivityDetected
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqNicVirusLikeActivityStopped
          zEventSeverity: 3
      cpqNicVirusLikeActivityStopped:
        evaluation: 'This trap will be sent when the Virus Throttle Filter

          Driver no longer detects virus like activity.


          User Action:  None required.'
        eventClassKey: cpqNicVirusLikeActivityStopped
        example: snmp trap cpqNicVirusLikeActivityStopped
        zProperties:
          zEventSeverity: 0
      cpqRackCriticalEAETrap:
        eventClassKey: cpqRackCriticalEAETrap
        example: snmp trap cpqRackCriticalEAETrap
        sequence: 101
      cpqRackCriticalWSMANTrap:
        eventClassKey: cpqRackCriticalWSMANTrap
        example: snmp trap cpqRackCriticalWSMANTrap
        sequence: 101
      cpqRackEnclosureFanDegraded:
        eventClassKey: cpqRackEnclosureFanDegraded
        example: snmp trap cpqRackEnclosureFanDegraded
        sequence: 101
      cpqRackEnclosureFanFailed:
        eventClassKey: cpqRackEnclosureFanFailed
        example: snmp trap cpqRackEnclosureFanFailed
        sequence: 101
      cpqRackEnclosureFanInserted:
        eventClassKey: cpqRackEnclosureFanInserted
        example: snmp trap cpqRackEnclosureFanInserted
        sequence: 101
      cpqRackEnclosureFanOk:
        eventClassKey: cpqRackEnclosureFanOk
        example: snmp trap cpqRackEnclosureFanOk
        sequence: 101
      cpqRackEnclosureFanRemoved:
        eventClassKey: cpqRackEnclosureFanRemoved
        example: snmp trap cpqRackEnclosureFanRemoved
        sequence: 101
      cpqRackEnclosureInserted:
        eventClassKey: cpqRackEnclosureInserted
        example: snmp trap cpqRackEnclosureInserted
        sequence: 101
      cpqRackEnclosureManagerDegraded:
        eventClassKey: cpqRackEnclosureManagerDegraded
        example: snmp trap cpqRackEnclosureManagerDegraded
        sequence: 101
      cpqRackEnclosureManagerInserted:
        eventClassKey: cpqRackEnclosureManagerInserted
        example: snmp trap cpqRackEnclosureManagerInserted
        sequence: 101
      cpqRackEnclosureManagerOk:
        eventClassKey: cpqRackEnclosureManagerOk
        example: snmp trap cpqRackEnclosureManagerOk
        sequence: 101
      cpqRackEnclosureManagerRemoved:
        eventClassKey: cpqRackEnclosureManagerRemoved
        example: snmp trap cpqRackEnclosureManagerRemoved
        sequence: 101
      cpqRackEnclosureNameChanged:
        eventClassKey: cpqRackEnclosureNameChanged
        example: snmp trap cpqRackEnclosureNameChanged
        sequence: 101
      cpqRackEnclosureRemoved:
        eventClassKey: cpqRackEnclosureRemoved
        example: snmp trap cpqRackEnclosureRemoved
        sequence: 101
      cpqRackEnclosureTempDegraded:
        eventClassKey: cpqRackEnclosureTempDegraded
        example: snmp trap cpqRackEnclosureTempDegraded
        sequence: 101
      cpqRackEnclosureTempFailed:
        eventClassKey: cpqRackEnclosureTempFailed
        example: snmp trap cpqRackEnclosureTempFailed
        sequence: 101
      cpqRackEnclosureTempOk:
        eventClassKey: cpqRackEnclosureTempOk
        example: snmp trap cpqRackEnclosureTempOk
        sequence: 101
      cpqRackFuseOpen:
        eventClassKey: cpqRackFuseOpen
        example: snmp trap cpqRackFuseOpen
        sequence: 101
      cpqRackInformationalEAETrap:
        eventClassKey: cpqRackInformationalEAETrap
        example: snmp trap cpqRackInformationalEAETrap
        sequence: 101
      cpqRackInformationalWSMANTrap:
        eventClassKey: cpqRackInformationalWSMANTrap
        example: snmp trap cpqRackInformationalWSMANTrap
        sequence: 101
      cpqRackMajorEAETrap:
        eventClassKey: cpqRackMajorEAETrap
        example: snmp trap cpqRackMajorEAETrap
        sequence: 101
      cpqRackMajorWSMANTrap:
        eventClassKey: cpqRackMajorWSMANTrap
        example: snmp trap cpqRackMajorWSMANTrap
        sequence: 101
      cpqRackManagerPrimaryRole:
        eventClassKey: cpqRackManagerPrimaryRole
        example: snmp trap cpqRackManagerPrimaryRole
        sequence: 101
      cpqRackMinorEAETrap:
        eventClassKey: cpqRackMinorEAETrap
        example: snmp trap cpqRackMinorEAETrap
        sequence: 101
      cpqRackMinorWSMANTrap:
        eventClassKey: cpqRackMinorWSMANTrap
        example: snmp trap cpqRackMinorWSMANTrap
        sequence: 101
      cpqRackNameChanged:
        eventClassKey: cpqRackNameChanged
        example: snmp trap cpqRackNameChanged
        sequence: 101
      cpqRackNetConnectorDegraded:
        eventClassKey: cpqRackNetConnectorDegraded
        example: snmp trap cpqRackNetConnectorDegraded
        sequence: 101
      cpqRackNetConnectorFailed:
        eventClassKey: cpqRackNetConnectorFailed
        example: snmp trap cpqRackNetConnectorFailed
        sequence: 101
      cpqRackNetConnectorInserted:
        eventClassKey: cpqRackNetConnectorInserted
        example: snmp trap cpqRackNetConnectorInserted
        sequence: 101
      cpqRackNetConnectorOk:
        eventClassKey: cpqRackNetConnectorOk
        example: snmp trap cpqRackNetConnectorOk
        sequence: 101
      cpqRackNetConnectorRemoved:
        eventClassKey: cpqRackNetConnectorRemoved
        example: snmp trap cpqRackNetConnectorRemoved
        sequence: 101
      cpqRackPowerChassisAcFacilityPowerExceeded:
        eventClassKey: cpqRackPowerChassisAcFacilityPowerExceeded
        example: snmp trap cpqRackPowerChassisAcFacilityPowerExceeded
        sequence: 101
      cpqRackPowerChassisConfigError:
        eventClassKey: cpqRackPowerChassisConfigError
        example: snmp trap cpqRackPowerChassisConfigError
        sequence: 101
      cpqRackPowerChassisDcPowerProblem:
        eventClassKey: cpqRackPowerChassisDcPowerProblem
        example: snmp trap cpqRackPowerChassisDcPowerProblem
        sequence: 101
      cpqRackPowerChassisLoadBalancingWireMissing:
        eventClassKey: cpqRackPowerChassisLoadBalancingWireMissing
        example: snmp trap cpqRackPowerChassisLoadBalancingWireMissing
        sequence: 101
      cpqRackPowerChassisNotLoadBalanced:
        eventClassKey: cpqRackPowerChassisNotLoadBalanced
        example: snmp trap cpqRackPowerChassisNotLoadBalanced
        sequence: 101
      cpqRackPowerChassisTooManyPowerChassis:
        eventClassKey: cpqRackPowerChassisTooManyPowerChassis
        example: snmp trap cpqRackPowerChassisTooManyPowerChassis
        sequence: 101
      cpqRackPowerCriticalEAETrap:
        eventClassKey: cpqRackPowerCriticalEAETrap
        example: snmp trap cpqRackPowerCriticalEAETrap
        sequence: 101
      cpqRackPowerMajorEAETrap:
        eventClassKey: cpqRackPowerMajorEAETrap
        example: snmp trap cpqRackPowerMajorEAETrap
        sequence: 101
      cpqRackPowerMinorEAETrap:
        eventClassKey: cpqRackPowerMinorEAETrap
        example: snmp trap cpqRackPowerMinorEAETrap
        sequence: 101
      cpqRackPowerShedAutoShutdown:
        eventClassKey: cpqRackPowerShedAutoShutdown
        example: snmp trap cpqRackPowerShedAutoShutdown
        sequence: 101
      cpqRackPowerSubsystemLineVoltageProblem:
        eventClassKey: cpqRackPowerSubsystemLineVoltageProblem
        example: snmp trap cpqRackPowerSubsystemLineVoltageProblem
        sequence: 101
      cpqRackPowerSubsystemNotRedundant:
        eventClassKey: cpqRackPowerSubsystemNotRedundant
        example: snmp trap cpqRackPowerSubsystemNotRedundant
        sequence: 101
      cpqRackPowerSubsystemOverloadCondition:
        eventClassKey: cpqRackPowerSubsystemOverloadCondition
        example: snmp trap cpqRackPowerSubsystemOverloadCondition
        sequence: 101
      cpqRackPowerSupplyDegraded:
        eventClassKey: cpqRackPowerSupplyDegraded
        example: snmp trap cpqRackPowerSupplyDegraded
        sequence: 101
      cpqRackPowerSupplyFailed:
        eventClassKey: cpqRackPowerSupplyFailed
        example: snmp trap cpqRackPowerSupplyFailed
        sequence: 101
      cpqRackPowerSupplyInserted:
        eventClassKey: cpqRackPowerSupplyInserted
        example: snmp trap cpqRackPowerSupplyInserted
        sequence: 101
      cpqRackPowerSupplyOk:
        eventClassKey: cpqRackPowerSupplyOk
        example: snmp trap cpqRackPowerSupplyOk
        sequence: 101
      cpqRackPowerSupplyRemoved:
        eventClassKey: cpqRackPowerSupplyRemoved
        example: snmp trap cpqRackPowerSupplyRemoved
        sequence: 101
      cpqRackPowerUnknownPowerConsumption:
        eventClassKey: cpqRackPowerUnknownPowerConsumption
        example: snmp trap cpqRackPowerUnknownPowerConsumption
        sequence: 101
      cpqRackServerBladeDiagnosticAdaptorInserted:
        eventClassKey: cpqRackServerBladeDiagnosticAdaptorInserted
        example: snmp trap cpqRackServerBladeDiagnosticAdaptorInserted
        sequence: 101
      cpqRackServerBladeDiagnosticAdaptorRemoved:
        eventClassKey: cpqRackServerBladeDiagnosticAdaptorRemoved
        example: snmp trap cpqRackServerBladeDiagnosticAdaptorRemoved
        sequence: 101
      cpqRackServerBladeEKeyingFailed:
        eventClassKey: cpqRackServerBladeEKeyingFailed
        example: snmp trap cpqRackServerBladeEKeyingFailed
        sequence: 101
      cpqRackServerBladeEKeyingOK:
        eventClassKey: cpqRackServerBladeEKeyingOK
        example: snmp trap cpqRackServerBladeEKeyingOK
        sequence: 101
      cpqRackServerBladeEnteredPXEBootMode:
        eventClassKey: cpqRackServerBladeEnteredPXEBootMode
        example: snmp trap cpqRackServerBladeEnteredPXEBootMode
        sequence: 101
      cpqRackServerBladeExitedPXEBootMode:
        eventClassKey: cpqRackServerBladeExitedPXEBootMode
        example: snmp trap cpqRackServerBladeExitedPXEBootMode
        sequence: 101
      cpqRackServerBladeFrontIOBlankingActive:
        eventClassKey: cpqRackServerBladeFrontIOBlankingActive
        example: snmp trap cpqRackServerBladeFrontIOBlankingActive
        sequence: 101
      cpqRackServerBladeGrpCapTimeout:
        eventClassKey: cpqRackServerBladeGrpCapTimeout
        example: snmp trap cpqRackServerBladeGrpCapTimeout
        sequence: 101
      cpqRackServerBladeInserted:
        eventClassKey: cpqRackServerBladeInserted
        example: snmp trap cpqRackServerBladeInserted
        sequence: 101
      cpqRackServerBladeInserted2:
        eventClassKey: cpqRackServerBladeInserted2
        example: snmp trap cpqRackServerBladeInserted2
        sequence: 101
        transform: "for attr in evt.details._map:\n    if attr.startswith('cpqRack'):\n\
          \        if attr.startswith('cpqRackServerBladePosition'):\n           \
          \ idx= getattr(evt, attr, '')\n        if attr.startswith('cpqRackName'):\n\
          \            rackName = getattr(evt, attr, '')\n\nbladeName = getattr(evt,\
          \ 'cpqRackServerBladeName.'+idx, '')\nbladePosition = idx\nenclosureName\
          \ = getattr(evt, 'cpqRackServerBladeEnclosureName.'+idx, '')\nevt.component\
          \ = bladeName\n\nevt.summary = 'Server blade {} inserted into position {}\
          \ in enclosure {}, in rack {}'.format(bladeName, bladePosition, enclosureName\
          \ , rackName)\nevt.message = evt.summary + '\\r\\nsnmp trap cpqRackServerBladeInserted2'\n"
        zProperties:
          zEventSeverity: 2
      cpqRackServerBladeMangementControllerFirmwareUpdateComplete:
        eventClassKey: cpqRackServerBladeMangementControllerFirmwareUpdateComplete
        example: snmp trap cpqRackServerBladeMangementControllerFirmwareUpdateComplete
        sequence: 101
      cpqRackServerBladeMangementControllerFirmwareUpdating:
        eventClassKey: cpqRackServerBladeMangementControllerFirmwareUpdating
        example: snmp trap cpqRackServerBladeMangementControllerFirmwareUpdating
        sequence: 101
      cpqRackServerBladePOSTCompleted:
        eventClassKey: cpqRackServerBladePOSTCompleted
        example: snmp trap cpqRackServerBladePOSTCompleted
        sequence: 101
      cpqRackServerBladePartitionChange:
        eventClassKey: cpqRackServerBladePartitionChange
        example: snmp trap cpqRackServerBladePartitionChange
        sequence: 101
      cpqRackServerBladePoweredOff:
        eventClassKey: cpqRackServerBladePoweredOff
        example: snmp trap cpqRackServerBladePoweredOff
        sequence: 101
      cpqRackServerBladePoweredOn:
        eventClassKey: cpqRackServerBladePoweredOn
        example: snmp trap cpqRackServerBladePoweredOn
        sequence: 101
      cpqRackServerBladeRemoteFrontIOBlankingInactive:
        eventClassKey: cpqRackServerBladeRemoteFrontIOBlankingInactive
        example: snmp trap cpqRackServerBladeRemoteFrontIOBlankingInactive
        sequence: 101
      cpqRackServerBladeRemoved:
        eventClassKey: cpqRackServerBladeRemoved
        example: snmp trap cpqRackServerBladeRemoved
        sequence: 101
      cpqRackServerBladeRemoved2:
        eventClassKey: cpqRackServerBladeRemoved2
        example: snmp trap cpqRackServerBladeRemoved2
        sequence: 101
        transform: "'''\n1: cpqHoTrapFlags\t0\n2: cpqRackName.1\tO16\n3: cpqRackUid\n\
          4: cpqRackServerBladeEnclosureName.11\tdc1-blch2\n5: cpqRackServerBladeName.11\t\
          dc1-esx-211\n6: cpqRackServerBladePosition.11\t11\n7: cpqRackServerBladeSparePartNumber.11\t\
          727021-B21\n9: cpqRackCommonEnclosureSerialNum.5\tCZ3540FDC2\n10: cpqRackServerBladeSerialNum.11\t\
          CZ3540FDD8\n11: cpqRackServerBladeUid.11\t727021CZ3540FDD8\n12: cpqRackCommonEnclosureTrapSequenceNum.1\t\
          20\n'''\n\nfor attr in evt.details._map:\n    if attr.startswith('cpqRack'):\n\
          \        if attr.startswith('cpqRackServerBladePosition'):\n           \
          \ idx= getattr(evt, attr, '')\n        if attr.startswith('cpqRackName'):\n\
          \            rackName = getattr(evt, attr, '')\n\nbladeName = getattr(evt,\
          \ 'cpqRackServerBladeName.'+idx, '')\nbladePosition = idx\nenclosureName\
          \ = getattr(evt, 'cpqRackServerBladeEnclosureName.'+idx, '')\nevt.component\
          \ = bladeName\n\nevt.summary = 'Server blade {} removed from position {}\
          \ in enclosure {}, in rack {}'.format(bladeName, bladePosition, enclosureName\
          \ , rackName)\nevt.message = evt.summary + '\\r\\nsnmp trap cpqRackServerBladeRemoved2'\n"
      cpqRackServerBladeStatusCritical:
        eventClassKey: cpqRackServerBladeStatusCritical
        example: snmp trap cpqRackServerBladeStatusCritical
        sequence: 101
      cpqRackServerBladeStatusDegraded:
        eventClassKey: cpqRackServerBladeStatusDegraded
        example: snmp trap cpqRackServerBladeStatusDegraded
        sequence: 101
      cpqRackServerBladeStatusRepaired:
        eventClassKey: cpqRackServerBladeStatusRepaired
        example: snmp trap cpqRackServerBladeStatusRepaired
        sequence: 101
      cpqRackServerBladeSystemBIOSFirmwareUpdateCompleted:
        eventClassKey: cpqRackServerBladeSystemBIOSFirmwareUpdateCompleted
        example: snmp trap cpqRackServerBladeSystemBIOSFirmwareUpdateCompleted
        sequence: 101
      cpqRackServerBladeSystemBIOSFirmwareUpdating:
        eventClassKey: cpqRackServerBladeSystemBIOSFirmwareUpdating
        example: snmp trap cpqRackServerBladeSystemBIOSFirmwareUpdating
        sequence: 101
      cpqRackServerBladeToLowPower:
        eventClassKey: cpqRackServerBladeToLowPower
        example: snmp trap cpqRackServerBladeToLowPower
        sequence: 101
      cpqRackServerBladeUnexpectedShutdown:
        eventClassKey: cpqRackServerBladeUnexpectedShutdown
        example: snmp trap cpqRackServerBladeUnexpectedShutdown
        sequence: 101
      cpqRackServerBladeWarmReset:
        eventClassKey: cpqRackServerBladeWarmReset
        example: snmp trap cpqRackServerBladeWarmReset
        sequence: 101
      cpqRackServerPowerOnFailedEnclosureNotFound:
        eventClassKey: cpqRackServerPowerOnFailedEnclosureNotFound
        example: snmp trap cpqRackServerPowerOnFailedEnclosureNotFound
        sequence: 101
      cpqRackServerPowerOnFailedNotEnoughPower:
        eventClassKey: cpqRackServerPowerOnFailedNotEnoughPower
        example: snmp trap cpqRackServerPowerOnFailedNotEnoughPower
        sequence: 101
      cpqRackServerPowerOnFailedNotRedundant:
        eventClassKey: cpqRackServerPowerOnFailedNotRedundant
        example: snmp trap cpqRackServerPowerOnFailedNotRedundant
        sequence: 101
      cpqRackServerPowerOnFailedPowerChassisNotFound:
        eventClassKey: cpqRackServerPowerOnFailedPowerChassisNotFound
        example: snmp trap cpqRackServerPowerOnFailedPowerChassisNotFound
        sequence: 101
      cpqRackServerPowerOnManualOverride:
        eventClassKey: cpqRackServerPowerOnManualOverride
        example: snmp trap cpqRackServerPowerOnManualOverride
        sequence: 101
      cpqRsFailoverFailed:
        evaluation: 'On-Line Recovery Server Failover failure.


          The On-Line Recovery Agent reports that an attempt to take on the operations

          of the partner server was attempted and failed.'
        eventClassKey: cpqRsFailoverFailed
        example: snmp trap cpqRsFailoverFailed
        zProperties:
          zEventSeverity: 3
      cpqRsOnlineCableFailure:
        evaluation: 'On-Line Recovery Server serial interconnect failure.


          The On-Line Recovery Agent reports that the local serial interconnect is
          not

          connected or has failed.  However, network operations confirm that the partner

          is still operating correctly.'
        eventClassKey: cpqRsOnlineCableFailure
        example: snmp trap cpqRsOnlineCableFailure
        zProperties:
          zEventSeverity: 3
      cpqRsPartnerFailed:
        evaluation: 'Recovery Server partner server failure.


          The Recovery Agent reports that the partner server has failed.  This

          server has taken over the partner''s operations.'
        eventClassKey: cpqRsPartnerFailed
        example: snmp trap cpqRsPartnerFailed
        zProperties:
          zEventSeverity: 3
      cpqRsStandbyCableFailure:
        evaluation: 'Recovery Server serial interconnect failure.


          The Standby Recovery Agent reports that the local serial interconnect is
          not

          connected or has failed.  The primary server is being shutdown in anticipation

          of the startup of the standby server.'
        eventClassKey: cpqRsStandbyCableFailure
        example: snmp trap cpqRsStandbyCableFailure
        zProperties:
          zEventSeverity: 3
      cpqRsStandbyFailure:
        evaluation: 'Recovery Server standby server failure.


          The Recovery Agent reports that the standby server has failed or the standby''s
          serial

          interconnect is not connected.'
        eventClassKey: cpqRsStandbyFailure
        example: snmp trap cpqRsStandbyFailure
        zProperties:
          zEventSeverity: 3
      cpqSas2TapeDrvStatusChange:
        evaluation: 'SAS Tape Drive Status Change.


          The Storage Agent has detected a change in the status of a

          SAS tape drive.  The current tape drive status is

          indicated in the cpqSasTapeDrvStatus variable.'
        eventClassKey: cpqSas2TapeDrvStatusChange
        example: snmp trap cpqSas2TapeDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSasLogDrvStatusChange:
        evaluation: 'Logical Drive Status Change.


          The Storage Agent has detected a change in the status of a

          SAS or SATA logical drive.  The current logical drive status is

          indicated in the cpqSasLogDrvStatus variable.'
        eventClassKey: cpqSasLogDrvStatusChange
        example: snmp trap cpqSasLogDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSasPhyDrvSSDWearStatusChange:
        evaluation: "Solid State Disk Wear Status Change.\n\nThis trap signifies that\
          \ the agent has detected a change in the\nSSD wear status of a SAS or SATA\
          \ physical drive.  The variable\ncpqSasPhyDrvSSDWearStatus indicates the\
          \ current SSD wear status.\n\nUser Action: If cpqSasPhyDrvSSDWearStatus\
          \ is 'ssdWearOut(6)', \nreplace the drive."
        eventClassKey: cpqSasPhyDrvSSDWearStatusChange
        example: snmp trap cpqSasPhyDrvSSDWearStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSasPhyDrvStatusChange:
        evaluation: "Physical Drive Status Change.\n\nThe Storage Agent has detected\
          \ a change in the status of a\nSAS or SATA physical drive.  The current\
          \ physical drive status\nis indicated in the cpqSasPhyDrvStatus variable.\n\
          \nUser Action: If cpqSasPhyDrvStatus is 'predictiveFailure(3)',\n'failed(5)',\
          \ 'ssdWearOut(10)' or 'notAuthenticated(12)', \nreplace the drive."
        eventClassKey: cpqSasPhyDrvStatusChange
        example: snmp trap cpqSasPhyDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqScsi2CntlrStatusChange:
        evaluation: 'SCSI Controller Status Change.


          The agent has detected a change in the controller

          status of a SCSI Controller.  The variable

          cpqScsiCntlrStatus indicates the current controller status.'
        eventClassKey: cpqScsi2CntlrStatusChange
        example: snmp trap cpqScsi2CntlrStatusChange
        zProperties:
          zEventSeverity: 3
      cpqScsi2LogDrvStatusChange:
        evaluation: 'Logical Drive Status Change.


          The agent has detected a change in the Logical Drive

          Status of a SCSI logical drive.  The current logical

          drive status is indicated by the cpqScsiLogDrvStatus variable.'
        eventClassKey: cpqScsi2LogDrvStatusChange
        example: snmp trap cpqScsi2LogDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqScsi2PhyDrvStatusChange:
        evaluation: 'Physical Drive Status Change.


          The agent has detected a change in the status of a

          SCSI physical drive.  The current physical drive

          status is indicated in the cpqScsiPhyDrvStatus variable.'
        eventClassKey: cpqScsi2PhyDrvStatusChange
        example: snmp trap cpqScsi2PhyDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqScsi3CntlrStatusChange:
        evaluation: 'SCSI Controller Status Change.


          The agent has detected a change in the controller

          status of a SCSI Controller.  The variable

          cpqScsiCntlrStatus indicates the current controller status.'
        eventClassKey: cpqScsi3CntlrStatusChange
        example: snmp trap cpqScsi3CntlrStatusChange
        zProperties:
          zEventSeverity: 3
      cpqScsi3LogDrvStatusChange:
        evaluation: 'Logical Drive Status Change.


          The Storage Agent has detected a change in the status of a

          SCSI logical drive.  The current logical drive status is

          indicated in the cpqScsiLogDrvStatus variable.'
        eventClassKey: cpqScsi3LogDrvStatusChange
        example: snmp trap cpqScsi3LogDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqScsi3PhyDrvStatusChange:
        evaluation: 'Physical Drive Status Change.


          The agent has detected a change in the status of a

          SCSI physical drive.  The current physical drive

          status is indicated in the cpqScsiPhyDrvStatus variable.'
        eventClassKey: cpqScsi3PhyDrvStatusChange
        example: snmp trap cpqScsi3PhyDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqScsi4PhyDrvStatusChange:
        evaluation: 'Physical Drive Status Change.


          The Storage Agent has detected a change in the status of a

          SCSI physical drive.  The current physical drive

          status is indicated in the cpqScsiPhyDrvStatus variable.'
        eventClassKey: cpqScsi4PhyDrvStatusChange
        example: snmp trap cpqScsi4PhyDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqScsi5PhyDrvStatusChange:
        evaluation: 'Physical Drive Status Change.


          The Storage Agent has detected a change in the status of a

          SCSI physical drive.  The current physical drive

          status is indicated in the cpqScsiPhyDrvStatus variable.'
        eventClassKey: cpqScsi5PhyDrvStatusChange
        example: snmp trap cpqScsi5PhyDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqScsiCdLibraryStatusChange:
        evaluation: 'CD Library Status Change.


          The agent has detected a change in the status of a

          CD Library device.  The current CD Library status is

          indicated in the cpqScsiCdLibraryCondition variable.'
        eventClassKey: cpqScsiCdLibraryStatusChange
        example: snmp trap cpqScsiCdLibraryStatusChange
        zProperties:
          zEventSeverity: 3
      cpqScsiCntlrStatusChange:
        evaluation: 'SCSI Controller Status Change.


          The agent has detected a change in the controller

          status of a SCSI Controller.  The variable

          cpqScsiCntlrStatus indicates the current controller status.'
        eventClassKey: cpqScsiCntlrStatusChange
        example: snmp trap cpqScsiCntlrStatusChange
        zProperties:
          zEventSeverity: 3
      cpqScsiLogDrvStatusChange:
        evaluation: 'Logical Drive Status Change.


          The agent has detected a change in the Logical Drive

          Status of a SCSI logical drive.  The current logical

          drive status is indicated by the cpqScsiLogDrvStatus variable.'
        eventClassKey: cpqScsiLogDrvStatusChange
        example: snmp trap cpqScsiLogDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqScsiPhyDrvStatusChange:
        evaluation: 'Physical Drive Status Change.


          The agent has detected a change in the status of a

          SCSI physical drive.  The current physical drive

          status is indicated in the cpqScsiPhyDrvStatus variable.'
        eventClassKey: cpqScsiPhyDrvStatusChange
        example: snmp trap cpqScsiPhyDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSe2CpuThresholdPassed:
        evaluation: 'This trap is sent when an internal CPU error threshold has been

          passed on a particular CPU causing it to go degraded. This trap

          will be sent when cpqSeCpuThreshPassed transitions from false to

          true.'
        eventClassKey: cpqSe2CpuThresholdPassed
        example: snmp trap cpqSe2CpuThresholdPassed
        zProperties:
          zEventSeverity: 3
      cpqSeCpuPowerPodstatusChange:
        evaluation: 'This Trap is sent if CPU Power Pod status changes.


          User Action: None.'
        eventClassKey: cpqSeCpuPowerPodstatusChange
        example: snmp trap cpqSeCpuPowerPodstatusChange
        zProperties:
          zEventSeverity: 3
      cpqSeCpuStatusChange:
        evaluation: 'This trap is sent when CPU status changed.


          CPU can be brought down to Stop state and removed

          from O.S Active set or Brought back to Running state

          and made member of O.S Active set.


          User Action: None.'
        eventClassKey: cpqSeCpuStatusChange
        example: snmp trap cpqSeCpuStatusChange
        transform: "lookup_CpuStatus = ['', 'unknown', 'ok', 'degraded', 'failed',\
          \ 'disabled']\nfor attr in evt.details._map:\n    if attr.startswith('cpqSeCpuSlot'):\n\
          \        idx = attr.split('.')[1]\n        comp = getattr(evt, attr, '')\n\
          \        break\ncpqSeCpuStatus= int(getattr(evt, 'cpqSeCpuStatus.'+idx,\
          \ ''))\nif cpqSeCpuStatus== 2:\n   evt.severity = 0\ntry:\n    cpuStatus\
          \ = lookup_CpuStatus[cpqSeCpuStatus]\nexcept:\n    cpuStatus = 'unknown'\n\
          evt.component = 'CPU_'+comp\nmsg = 'CPU in slot {} status change to {}'.format(comp,\
          \ cpuStatus )\n\nevt.message = msg\nevt.summary = msg\n"
        zProperties:
          zEventSeverity: 3
      cpqSeCpuThresholdPassed:
        evaluation: 'This trap is sent when an internal CPU error threshold has been

          passed on a particular CPU causing it to go degraded. This trap

          will be sent when cpqSeCpuThreshPassed transitions from false to

          true.'
        eventClassKey: cpqSeCpuThresholdPassed
        example: snmp trap cpqSeCpuThresholdPassed
        zProperties:
          zEventSeverity: 3
      cpqSePCCardThermalDegraded:
        evaluation: 'This trap is sent when the PC Card Slot Thermal Sensor threshold
          has been

          exceeded for safe operations thereby causing degraded operations. This trap

          will be sent when cpqSePCCardStatus transitions from Normal (1) to Thermal

          Degraded (2).

          The manufacturer and product information strings as well as the slot number

          for the degraded PC Card is provided as parameters for this trap.'
        eventClassKey: cpqSePCCardThermalDegraded
        example: snmp trap cpqSePCCardThermalDegraded
        zProperties:
          zEventSeverity: 3
      cpqSePCCardThermalFailure:
        evaluation: 'This trap is sent when the PC Card Slot Thermal Sensor threshold
          has been

          exceeded for degraded operations thereby causing failed operations.

          This trap will be sent when cpqSePCCardStatus transitions from Thermal Degraded

          (2) to Thermal Failure (3).

          The manufacturer and product information strings as well as the slot number

          for the failed PC Card is provided as parameters for this trap.'
        eventClassKey: cpqSePCCardThermalFailure
        example: snmp trap cpqSePCCardThermalFailure
        zProperties:
          zEventSeverity: 3
      cpqSePCCardThermalSafe:
        evaluation: 'This trap is sent when the PC Card Slot Thermal Sensor threshold
          has been

          crossed which restored the thermal status to normal operations. This trap
          will be sent

          when cpqSePCCardStatus transitions from Thermal Degraded (2) or Thermal
          Failure

          (3) to Normal (1).

          The number of the recovered PC Card slot is provided as a parameter for
          this trap.'
        eventClassKey: cpqSePCCardThermalSafe
        example: snmp trap cpqSePCCardThermalSafe
        zProperties:
          zEventSeverity: 3
      cpqSeUSBStorageDeviceAttached:
        evaluation: This trap is sent when a USB storage device has been attached
        eventClassKey: cpqSeUSBStorageDeviceAttached
        example: snmp trap cpqSeUSBStorageDeviceAttached
        zProperties:
          zEventSeverity: 3
      cpqSeUSBStorageDeviceReadErrorOccurred:
        evaluation: This trap is sent when a read error occured on the attached USB
          storage device
        eventClassKey: cpqSeUSBStorageDeviceReadErrorOccurred
        example: snmp trap cpqSeUSBStorageDeviceReadErrorOccurred
        zProperties:
          zEventSeverity: 3
      cpqSeUSBStorageDeviceRedundancyLost:
        evaluation: 'This trap is sent when redundancy is lost on the attached USB
          storage device.


          User Action:  Replace the failed USB Storage Device.'
        eventClassKey: cpqSeUSBStorageDeviceRedundancyLost
        example: snmp trap cpqSeUSBStorageDeviceRedundancyLost
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqSeUSBStorageDeviceRedundancyRestored
          zEventSeverity: 3
      cpqSeUSBStorageDeviceRedundancyRestored:
        evaluation: This trap is sent when redundancy is restored on the attached
          USB storage device.
        eventClassKey: cpqSeUSBStorageDeviceRedundancyRestored
        example: snmp trap cpqSeUSBStorageDeviceRedundancyRestored
        zProperties:
          zEventSeverity: 0
      cpqSeUSBStorageDeviceRemoved:
        evaluation: This trap is sent when a attached USB storage device is removed
        eventClassKey: cpqSeUSBStorageDeviceRemoved
        example: snmp trap cpqSeUSBStorageDeviceRemoved
        zProperties:
          zEventSeverity: 3
      cpqSeUSBStorageDeviceSyncFailed:
        evaluation: 'This trap is sent when the sync operation to restore redundancy
          failed on the attached USB storage device.


          User Action:  Replace the failed USB Storage Device.'
        eventClassKey: cpqSeUSBStorageDeviceSyncFailed
        example: snmp trap cpqSeUSBStorageDeviceSyncFailed
        zProperties:
          zEventSeverity: 3
      cpqSeUSBStorageDeviceWriteErrorOccurred:
        evaluation: This trap is sent when a write error occured on the attached USB
          storage device
        eventClassKey: cpqSeUSBStorageDeviceWriteErrorOccurred
        example: snmp trap cpqSeUSBStorageDeviceWriteErrorOccurred
        zProperties:
          zEventSeverity: 3
      cpqSiCorrMemErrStatusDegraded:
        evaluation: 'Correctable memory error count has exceeded the threshold for
          the

          memory module indicated by the ''cpqSiMemErrorIndex'' variable.

          The appropriate cpqSiMemModuleECCStatus has been set to degraded.


          User Action: For Desktops, the System Administrator should run

          the F10 Diagnostics on this system and select RAM LONG TEST. If

          it is determined that a module needs replacing, schedule

          maintenance for the system and replace the failed memory module.


          Refer to the appropriate Maintenance and Service Guide for detailed

          information on a component replacement.'
        eventClassKey: cpqSiCorrMemErrStatusDegraded
        example: snmp trap cpqSiCorrMemErrStatusDegraded
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqSiCorrMemErrStatusOk
          zEventSeverity: 3
      cpqSiCorrMemErrStatusOk:
        evaluation: 'Correctable memory error count is now below the threshold for
          the

          memory module indicated by the ''cpqSiMemErrorIndex'' variable. The

          appropriate cpqSiMemModuleECCStatus has been set to ok.


          User Action: None.'
        eventClassKey: cpqSiCorrMemErrStatusOk
        example: snmp trap cpqSiCorrMemErrStatusOk
        zProperties:
          zEventSeverity: 0
      cpqSiHoodRemoved:
        evaluation: 'System hood is removed.


          The hood status has been set to removed.  The

          system''s hood is not in a properly installed state. This

          situation may result in improper cooling of the system due

          to air flow changes caused by the missing hood.


          User Action: Replace the cover (hood), ensure the system''s cover

          is properly installed. Verify the system is in working order.'
        eventClassKey: cpqSiHoodRemoved
        example: snmp trap cpqSiHoodRemoved
        zProperties:
          zEventSeverity: 3
      cpqSiHotPlugSlotBoardInserted:
        evaluation: 'Hot Plug Slot Board Inserted.


          A Hot Plug Slot Board has been inserted into the specified

          chassis and slot.


          User Action: None.'
        eventClassKey: cpqSiHotPlugSlotBoardInserted
        example: snmp trap cpqSiHotPlugSlotBoardInserted
        zProperties:
          zEventSeverity: 3
      cpqSiHotPlugSlotBoardRemoved:
        evaluation: 'Hot Plug Slot Board Removed.


          A Hot Plug Slot Board has been removed from the specified

          chassis and slot.


          User Action: None.'
        eventClassKey: cpqSiHotPlugSlotBoardRemoved
        example: snmp trap cpqSiHotPlugSlotBoardRemoved
        zProperties:
          zEventSeverity: 3
      cpqSiHotPlugSlotPowerUpFailed:
        evaluation: 'Hot Plug Slot Board Failed Power-Up.


          A Hot Plug Slot Board has failed to power-up in the specified

          chassis and slot.


          User Action: Insure the board and all cables are installed

          correctly and the board type and revision are the same as

          the replaced board.'
        eventClassKey: cpqSiHotPlugSlotPowerUpFailed
        example: snmp trap cpqSiHotPlugSlotPowerUpFailed
        zProperties:
          zEventSeverity: 3
      cpqSiMemConfigChange:
        evaluation: 'A memory configuration change has occurred. CpqSiMemConfigChangeData

          will indicate which memory modules slots have changed.


          User Action: You may want to verify a valid reason for a memory

          configuration to have occurred. If system issuing the alert is

          a Desktop running NT, the memory configuration change information

          is also logged in the NT System Log.'
        eventClassKey: cpqSiMemConfigChange
        example: snmp trap cpqSiMemConfigChange
        zProperties:
          zEventSeverity: 3
      cpqSiMonitorConditionDegraded:
        evaluation: 'A fault reporting feature has exceeded normal limits for

          the monitor indicated by the cpqSiMonitorIndex. The monitor''s

          condition is degraded due to the internal temperature exceeding

          normal operating limits.  The monitor is still useable, but

          action should be taken to return the condition to OK.


          User Action: Physically check for obstructions to air flow around

          the monitor.  Check the thermostat in the room that the system

          occupies.  Allow the monitor to cool by turning off the monitor

          for 5 minutes then turn the monitor back on.  After the monitor

          cools, another alarm indicating an improving condition, such as

          Monitor OK, will be issued.'
        eventClassKey: cpqSiMonitorConditionDegraded
        example: snmp trap cpqSiMonitorConditionDegraded
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqSiMonitorConditionOK
          zEventSeverity: 3
      cpqSiMonitorConditionFailed:
        evaluation: 'A fault reporting feature has exceeded normal limits in the

          monitor indicated by the cpqSiMonitorIndex. The monitor''s

          condition has been set to failed due to an operational feature

          exceeding normal operating limits.  The monitor will not be

          useable and should be replaced.


          User Action: Make a note of the monitor model number and serial

          number.  Replace the monitor.


          Refer to the appropriate Maintenance and Service Guide for

          detailed information on a component replacement.'
        eventClassKey: cpqSiMonitorConditionFailed
        example: snmp trap cpqSiMonitorConditionFailed
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqSiMonitorConditionOK
          zEventSeverity: 3
      cpqSiMonitorConditionOK:
        evaluation: 'Fault reporting features have returned to within their normal

          operating range for the monitor indicated by cpqSiMonitorIndex.

          The monitor''s condition has been set to OK.


          User Action:  None.'
        eventClassKey: cpqSiMonitorConditionOK
        example: snmp trap cpqSiMonitorConditionOK
        zProperties:
          zEventSeverity: 0
      cpqSiSysBatteryCalibrationError:
        evaluation: 'Calibration is needed with battery

          indicated by cpqSiSysBatteryIndex.  The battery can

          not correctly indicate capacity.


          User Action: Run the Power Conservation Utility.  Contact

          your System Administrator or Authorized Reseller to

          order a replacement battery.'
        eventClassKey: cpqSiSysBatteryCalibrationError
        example: snmp trap cpqSiSysBatteryCalibrationError
        zProperties:
          zEventSeverity: 3
      cpqSiSysBatteryChargingDegraded:
        evaluation: 'Significant battery degradation has occurred with battery

          indicated by cpqSiSysBatteryIndex.  The battery can

          no longer be fully recharged.


          User Action: If using multiple batteries, run

          the Power Conservation Utility to identify the

          battery location.  Contact your System Administrator

          or Authorized Reseller to order a replacement

          battery.'
        eventClassKey: cpqSiSysBatteryChargingDegraded
        example: snmp trap cpqSiSysBatteryChargingDegraded
        zProperties:
          zEventSeverity: 3
      cpqSiSysBatteryFailure:
        evaluation: 'The battery indicated by cpqSiSysBatteryIndex has failed

          and must be replaced.


          User Action:  Contact your System Administrator or

          Authorized Reseller to order a replacement battery.

          Recycle your old battery. For proper disposal information,

          refer to the documentation that came with your computer.'
        eventClassKey: cpqSiSysBatteryFailure
        example: snmp trap cpqSiSysBatteryFailure
        zProperties:
          zEventSeverity: 3
      cpqSm2BatteryDisconnected:
        evaluation: 'Remote Insight Battery Disconnected.


          The Remote Insight battery cable has been disconnected.'
        eventClassKey: cpqSm2BatteryDisconnected
        example: snmp trap cpqSm2BatteryDisconnected
        zProperties:
          zEventSeverity: 3
      cpqSm2BatteryFailed:
        evaluation: 'Remote Insight Battery Failed.


          The Remote Insight battery has failed and needs to be replaced.'
        eventClassKey: cpqSm2BatteryFailed
        example: snmp trap cpqSm2BatteryFailed
        zProperties:
          zEventSeverity: 3
      cpqSm2ExternalPowerCableDisconnected:
        evaluation: 'External Power Cable Disconnected.


          The Remote Insight external power cable has been disconnected.'
        eventClassKey: cpqSm2ExternalPowerCableDisconnected
        example: snmp trap cpqSm2ExternalPowerCableDisconnected
        zProperties:
          zEventSeverity: 3
      cpqSm2InterfaceError:
        evaluation: 'Remote Insight/ Integrated Lights-Out Interface Error.


          The host OS has detected an error in the Remote Insight/ Integrated Lights-Out

          interface.  The firmware is not responding.'
        eventClassKey: cpqSm2InterfaceError
        example: snmp trap cpqSm2InterfaceError
        transform: 'evt.summary=''Error in the ILO Interface''

          evt.message=''Remote Insight/ Integrated Lights-Out Interface Error. The
          host OS has detected an error in the Remote Insight/ Integrated Lights-Out
          interface. The firmware is not responding.''

          '
        zProperties:
          zEventSeverity: 3
      cpqSm2IrsCommFailure:
        evaluation: The iLO to Insight Remote Support or Insight Online communication
          failed.
        eventClassKey: cpqSm2IrsCommFailure
        example: snmp trap cpqSm2IrsCommFailure
        transform: "for attr in evt.details._map:\n    if attr.startswith('cpqSm2ErsConnectionModel'):\n\
          \        idx = '.' + attr.split('.')[1]\n        conn_model = getattr(evt,\
          \ attr, '')\n        break\n\nif idx:\n    conn_models = ['',  'Insight\
          \ Online', 'Insight Remote Support']\n    failure_codes = [ '', 'genericTransmitError',\
          \ 'clientTransmitTimeout', 'clientReceiveTimeout', 'proxyConnectError',\
          \ 'remoteHostConnectError', 'remoteServiceError']\n    tx_types = ['', 'registration',\
          \ 'serviceEvent', 'l2DataCollection', 'unregistration', 'ahsDataCollection']\n\
          \n    host = getattr(evt, 'cpqSm2ErsRemoteHost' + idx, '')\n    conn_model\
          \ = conn_models[int(conn_model)]\n    failure_code = failure_codes[int(getattr(evt,\
          \ 'cpqSm2ErsFailureCode' + idx, '0'))]\n    tx_type = tx_types[int(getattr(evt,\
          \ 'cpqSm2ErsTransactionType' + idx, '0'))]\n\n    evt.summary = 'The iLO\
          \ communication to {} failed'.format(conn_model)\n    evt.message = 'The\
          \ iLO communication to {} on {} failed with error {} during a {} transaction.'.format(conn_model,\
          \ host, failure_code, tx_type)\n\n\n\n"
        zProperties:
          zEventSeverity: 3
      cpqSm2KeyboardCableDisconnected:
        evaluation: 'Keyboard Cable Disconnected.


          The Remote Insight keyboard cable has been disconnected.'
        eventClassKey: cpqSm2KeyboardCableDisconnected
        example: snmp trap cpqSm2KeyboardCableDisconnected
        zProperties:
          zEventSeverity: 3
      cpqSm2LogsFull:
        evaluation: 'Logs Full.


          The Remote Insight/ Integrated Lights-Out firmware has detected the logs
          are full.'
        eventClassKey: cpqSm2LogsFull
        example: snmp trap cpqSm2LogsFull
        zProperties:
          zEventSeverity: 3
      cpqSm2MouseCableDisconnected:
        evaluation: 'Mouse Cable Disconnected.


          The Remote Insight mouse cable has been disconnected.'
        eventClassKey: cpqSm2MouseCableDisconnected
        example: snmp trap cpqSm2MouseCableDisconnected
        zProperties:
          zEventSeverity: 3
      cpqSm2NicLinkDown:
        evaluation: "The iLO NIC Link is Down.\n\nThe Remote Insight/ Integrated Lights-Out\
          \ firmware has \ndetected the loss of network link."
        eventClassKey: cpqSm2NicLinkDown
        example: snmp trap cpqSm2NicLinkDown
        zProperties:
          zEventSeverity: 3
      cpqSm2NicLinkUp:
        evaluation: "The iLO NIC Link is Up.\n\nThe Remote Insight/ Integrated Lights-Out\
          \ firmware has \ndetected the presence of network link."
        eventClassKey: cpqSm2NicLinkUp
        example: snmp trap cpqSm2NicLinkUp
        zProperties:
          zEventSeverity: 3
      cpqSm2SecurityOverrideDisengaged:
        evaluation: 'Security Override Disengaged.


          The Remote Insight/ Integrated Lights-Out firmware has detected the security
          override jumper

          has been toggled to the disengaged position.'
        eventClassKey: cpqSm2SecurityOverrideDisengaged
        example: snmp trap cpqSm2SecurityOverrideDisengaged
        zProperties:
          zEventSeverity: 3
      cpqSm2SecurityOverrideEngaged:
        evaluation: 'Security Override Engaged.


          The Remote Insight/ Integrated Lights-Out firmware has detected the security
          override jumper

          has been toggled to the engaged position.'
        eventClassKey: cpqSm2SecurityOverrideEngaged
        example: snmp trap cpqSm2SecurityOverrideEngaged
        zProperties:
          zEventSeverity: 3
      cpqSm2SelfTestError:
        evaluation: 'Remote Insight/ Integrated Lights-Out Self Test Error.


          The Remote Insight/ Integrated Lights-Out firmware has detected a Remote

          Insight self test error.'
        eventClassKey: cpqSm2SelfTestError
        example: snmp trap cpqSm2SelfTestError
        transform: 'msg = ''The Remote Insight/ Integrated Lights-Out firmware has
          detected a Remote Insight self test error''

          evt.message = msg

          evt.summary = msg

          '
        zProperties:
          zEventSeverity: 3
      cpqSm2ServerFatalError:
        evaluation: "Server Fatal Error Detected.\n\nThe Remote Insight/ Integrated\
          \ Lights-Out firmware has \ndetected a server fatal error."
        eventClassKey: cpqSm2ServerFatalError
        example: snmp trap cpqSm2ServerFatalError
        zProperties:
          zEventSeverity: 3
      cpqSm2ServerPowerOff:
        evaluation: The server has been powered off. This will be sent once the server
          has been powered off, either by OS, or the power button.
        eventClassKey: cpqSm2ServerPowerOff
        example: snmp trap cpqSm2ServerPowerOff
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqSm2ServerPowerOn
          zEventSeverity: 3
      cpqSm2ServerPowerOn:
        evaluation: The server has been powered on. This will be sent once a server
          power on transition has occurred.
        eventClassKey: cpqSm2ServerPowerOn
        example: snmp trap cpqSm2ServerPowerOn
        transform: 'msg = ''The server has been powered on''

          evt.message = msg

          evt.summary = msg

          '
        zProperties:
          zEventSeverity: 0
      cpqSm2ServerPowerOnFailure:
        evaluation: A request was made to power on the server, however the server
          could not be powered on due to a failure condition.
        eventClassKey: cpqSm2ServerPowerOnFailure
        example: snmp trap cpqSm2ServerPowerOnFailure
        zProperties:
          zEventSeverity: 3
      cpqSm2ServerPowerOutage:
        evaluation: 'Server Power Outage.


          The Remote Insight/ Integrated Lights-Out firmware has detected server

          power failure.'
        eventClassKey: cpqSm2ServerPowerOutage
        example: snmp trap cpqSm2ServerPowerOutage
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqSm2ServerPowerOn
          zEventSeverity: 3
      cpqSm2ServerReset:
        evaluation: 'Server Reset Detected.


          The Remote Insight/ Integrated Lights-Out firmware has detected a server
          reset.'
        eventClassKey: cpqSm2ServerReset
        example: snmp trap cpqSm2ServerReset
        zProperties:
          zEventSeverity: 3
      cpqSm2UnauthorizedLoginAttempts:
        evaluation: 'Remote Insight/ Integrated Lights-Out Unauthorized Login Attempts.


          The Remote Insight/ Integrated Lights-Out firmware has detected

          unauthorized login attempts.'
        eventClassKey: cpqSm2UnauthorizedLoginAttempts
        example: snmp trap cpqSm2UnauthorizedLoginAttempts
        zProperties:
          zEventSeverity: 3
      cpqSmAlertDestinationBlacklisted:
        evaluation: "Alert destination blacklisted.\n\nThe Server Manager board modem\
          \ has blacklisted an alert \ndestination phone number.  Once blacklisted,\
          \ that alert \ndestination is no longer available for use as an alert \n\
          destination.  Blacklisting, which only occurs in \ninternational modems,\
          \ is a requirement imposed by certain \nEuropean countries on modems, to\
          \ prevent a phone number \nfrom being dialed multiple times without getting\
          \ a connection.  \nThe number of attempts required to have blacklisting\
          \ occur,\n vary from country to country.  Once an alert destination has\
          \ \n been blacklisted, the only way to remove the blacklisted phone \n number\
          \ is to remove power from the modem.  \n On external modems this is a trival\
          \ task.  When a blacklisting\n occurs on the Server Manager board's internal\
          \ modem the\n task is slightly more difficult as the modem gets power \n\
          \ from the Server Manager board.  \n To remove power from the Server Manager\
          \ board's internal modem,\n the Server Manager board must be forced into\
          \ Dormant Mode.\n This is an operating mode, used to conserve battery life,\n\
          \ which is entered automatically if the board looses power.\n To cause the\
          \ board to enter Dormant Mode, the following\n steps should be performed:\n\
          \   1) Disable alerting via CPQCAUI.NLM.\n   2) Disable async communication\
          \ via CPQCAUI.NLM.\n   3) Down the server.\n   4) Exit to DOS (if applicable).\n\
          \   5) Shut power off to the computer.\n   6) Wait 5 minutes before restoring\
          \ power.\n Once the 5 minutes has expired, and power to the computer\n has\
          \ been restored, the modem will have flushed its\n blacklist, and the board's\
          \ alerting functions will work\n as expected."
        eventClassKey: cpqSmAlertDestinationBlacklisted
        example: snmp trap cpqSmAlertDestinationBlacklisted
        zProperties:
          zEventSeverity: 3
      cpqSmBatteryFailed:
        evaluation: "Server Manager battery failure.\n\nThe Insight Agent has detected\
          \ a failure in the Server Manager \nboard's onboard battery."
        eventClassKey: cpqSmBatteryFailed
        example: snmp trap cpqSmBatteryFailed
        zProperties:
          zEventSeverity: 3
      cpqSmBoardFailed:
        evaluation: "Server Manager board failure.\n\nThe Insight Agent has detected\
          \ a failure of the Compaq Server \nManager/R board in the server."
        eventClassKey: cpqSmBoardFailed
        example: snmp trap cpqSmBoardFailed
        zProperties:
          zEventSeverity: 3
      cpqSmBoardReset:
        evaluation: 'Server Manager board reset.


          The Insight Agent has detected a reset of the Server Manager/R

          board in the server.'
        eventClassKey: cpqSmBoardReset
        example: snmp trap cpqSmBoardReset
        zProperties:
          zEventSeverity: 3
      cpqSmBoardTimeout:
        evaluation: 'Server Manager board time-out.


          The Insight Agent has detected a time-out of the Server

          Manager board as reported by the Server Manager Board driver.'
        eventClassKey: cpqSmBoardTimeout
        example: snmp trap cpqSmBoardTimeout
        zProperties:
          zEventSeverity: 3
      cpqSmCommFailed:
        evaluation: "Server Manager asynchronous communications failure.\n\nThe Insight\
          \ Agent has detected a failure in the Server Manager \nboard's asynchronous\
          \ communication system."
        eventClassKey: cpqSmCommFailed
        example: snmp trap cpqSmCommFailed
        zProperties:
          zEventSeverity: 3
      cpqSmServerManagerAlert:
        evaluation: "Threshold exeeded on Server Manager monitored item.\n\nThe Insight\
          \ Agent has detected a monitored item on the Server \nManager board exceeding\
          \ a threshold when alerting is\nenabled for the monitored item."
        eventClassKey: cpqSmServerManagerAlert
        example: snmp trap cpqSmServerManagerAlert
        zProperties:
          zEventSeverity: 3
      cpqSs2FanStatusChange:
        evaluation: 'Storage System fan status change.


          The agent has detected a change in the Fan Status of a storage

          system.  The variable cpqSsBoxFanStatus indicates the current

          fan status.'
        eventClassKey: cpqSs2FanStatusChange
        example: snmp trap cpqSs2FanStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSs3FanStatusChange:
        evaluation: 'Storage System fan status change.


          The agent has detected a change in the Fan Status of a storage

          system.  The variable cpqSsBoxFanStatus indicates the current

          fan status.


          User Action: If the fan status is degraded or failed, replace

          any failed fans.'
        eventClassKey: cpqSs3FanStatusChange
        example: snmp trap cpqSs3FanStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSs3PwrSupplyDegraded:
        evaluation: A storage system power supply status has been set to degraded.
        eventClassKey: cpqSs3PwrSupplyDegraded
        example: snmp trap cpqSs3PwrSupplyDegraded
        zProperties:
          zEventSeverity: 3
      cpqSs3SidePanelInPlace:
        evaluation: 'Storage System side panel is in place.


          The side panel status has been set to in place.  The storage

          system''s side panel has returned to a properly installed state.


          User Action: None.'
        eventClassKey: cpqSs3SidePanelInPlace
        example: snmp trap cpqSs3SidePanelInPlace
        zProperties:
          zEventSeverity: 3
      cpqSs3SidePanelRemoved:
        evaluation: 'Storage System side panel is removed.


          The side panel status has been set to removed.  The storage

          system''s side panel is not in a properly installed state. This

          situation may result in improper cooling of the drives in the

          storage system due to air flow changes caused by the missing

          side panel.


          User Action: Replace the storage system side panel.'
        eventClassKey: cpqSs3SidePanelRemoved
        example: snmp trap cpqSs3SidePanelRemoved
        zProperties:
          zEventSeverity: 3
      cpqSs3TempDegraded:
        evaluation: 'Storage System temperature degraded.


          The agent has detected a temperature status that has been set to

          degraded.  The storage system''s temperature is outside of the

          normal operating range.


          User Action: Shutdown the storage system as soon as possible.

          Insure that the storage system environment is being cooled

          properly and that no components are overheated.'
        eventClassKey: cpqSs3TempDegraded
        example: snmp trap cpqSs3TempDegraded
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqSs3TempOk
          zEventSeverity: 3
      cpqSs3TempFailed:
        evaluation: 'Storage System temperature failure.


          The agent has detected that a temperature status has been set to

          failed.  The storage system will be shutdown.


          User Action: Shutdown the storage system as soon as possible.

          Insure that the storage system environment is being cooled

          properly and that no components are overheated.'
        eventClassKey: cpqSs3TempFailed
        example: snmp trap cpqSs3TempFailed
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqSs3TempOk
          zEventSeverity: 3
      cpqSs3TempOk:
        evaluation: 'Storage System temperature ok.


          The temperature status has been set to OK.  The storage

          system''s temperature has returned to normal operating range.

          It may be reactivated by the administrator.


          User Action: None.'
        eventClassKey: cpqSs3TempOk
        example: snmp trap cpqSs3TempOk
        zProperties:
          zEventSeverity: 0
      cpqSs4PwrSupplyDegraded:
        evaluation: 'A storage system power supply status has been set to degraded.


          User Action: Take action to restore power or replace any failed

          storage system power supply.'
        eventClassKey: cpqSs4PwrSupplyDegraded
        example: snmp trap cpqSs4PwrSupplyDegraded
        zProperties:
          zEventSeverity: 3
      cpqSs5FanStatusChange:
        evaluation: 'Storage System fan status change.


          The agent has detected a change in the Fan Status of a storage

          system.  The variable cpqSsBoxFanStatus indicates the current

          fan status.


          User Action: If the fan status is degraded or failed, replace

          any failed fans.'
        eventClassKey: cpqSs5FanStatusChange
        example: snmp trap cpqSs5FanStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSs5PwrSupplyStatusChange:
        evaluation: 'Storage system power supply status change.


          The agent has detected a change in the power supply status of a

          storage system.  The variable cpqSsBoxFltTolPwrSupplyStatus

          indicates the current power supply status.


          User Action: If the power supply status is degraded, take action

          to restore power or replace the failed power supply.'
        eventClassKey: cpqSs5PwrSupplyStatusChange
        example: snmp trap cpqSs5PwrSupplyStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSs5TempStatusChange:
        evaluation: 'Storage System temperature status change.


          The agent has detected a change in the temperature status of a

          storage system.  The variable cpqSsBoxTempStatus indicates the

          current temperature status.


          User Action: If the temperature status is degraded or failed,

          shutdown the storage system as soon as possible.  Insure that

          the storage system environment is being cooled properly and that

          no components are overheated.'
        eventClassKey: cpqSs5TempStatusChange
        example: snmp trap cpqSs5TempStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSs6FanStatusChange:
        evaluation: 'Storage System fan status change.


          The agent has detected a change in the Fan Status of a storage

          system.  The variable cpqSsBoxFanStatus indicates the current

          fan status.


          User Action: If cpqSsBoxFanStatus is ''degraded(5)'' or ''failed(3)'',

          replace any failed fans or fan modules.'
        eventClassKey: cpqSs6FanStatusChange
        example: snmp trap cpqSs6FanStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSs6PwrSupplyStatusChange:
        evaluation: 'Storage system power supply status change.


          The agent has detected a change in the power supply status of a

          storage system.  The variable cpqSsBoxFltTolPwrSupplyStatus

          indicates the current power supply status.


          User Action: If cpqSsBoxFltTolPwrSupplyStatus is ''degraded(3)'',

          restore power or replace the failed power supply.'
        eventClassKey: cpqSs6PwrSupplyStatusChange
        example: snmp trap cpqSs6PwrSupplyStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSs6TempStatusChange:
        evaluation: 'Storage System temperature status change.


          The agent has detected a change in the temperature status of a

          storage system.  The variable cpqSsBoxTempStatus indicates the

          current temperature status.


          User Action: If cpqSsBoxTempStatus is ''degraded(3)'' or ''failed(4)'',

          shutdown the storage system as soon as possible.  Ensure that

          the storage system environment is being cooled properly and that

          no components are overheated.'
        eventClassKey: cpqSs6TempStatusChange
        example: snmp trap cpqSs6TempStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSsConnectionStatusChange:
        evaluation: "Storage system connection status change.\n\nThe agent has detected\
          \ a change in the connection status of a storage\nsystem.  The variable\
          \ cpqSSboxConnectionStatus indicates the current \nconnection status.\n\n\
          User Action: If cpqSsBoxConnectionStatus is 'notConnected(4)', \nrestore\
          \ the connection between the HBA and the storage system"
        eventClassKey: cpqSsConnectionStatusChange
        example: snmp trap cpqSsConnectionStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSsEx2FanStatusChange:
        evaluation: "Storage system fan status change.\n\nThe agent has detected a\
          \ change in the fan module status of a\nstorage system.  The variable cpqSsFanModuleStatus\
          \ indicates the\ncurrent fan status.\n\nUser Action: If cpqSsFanModuleStatus\
          \ is 'degraded(4)' or \n'failed(5)', replace any failed fans or fan modules."
        eventClassKey: cpqSsEx2FanStatusChange
        example: snmp trap cpqSsEx2FanStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSsEx2PowerSupplyStatusChange:
        evaluation: "Storage system power supply status change.\n\nThe agent has detected\
          \ a change in the power supply status of a\nstorage system.  The variable\
          \ cpqSsPowerSupplyStatus indicates\nthe current status.\n\nUser Action:\
          \ If cpqSsPowerSupplyStatus is 'failed(4)', restore \npower or replace the\
          \ failed power supply."
        eventClassKey: cpqSsEx2PowerSupplyStatusChange
        example: snmp trap cpqSsEx2PowerSupplyStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSsExBackplaneFanStatusChange:
        evaluation: 'Storage system fan status change.


          The agent has detected a change in the fan status of a storage

          system.  The variable cpqSsBackplaneFanStatus indicates the

          current fan status.


          User Action: If cpqSsBackplaneFanStatus is ''degraded(4)'',

          ''degraded-Fan1Failed(7)'', ''degraded-Fan2Failed(8)'' or ''failed(5)'',

          replace the fan or fan modules.'
        eventClassKey: cpqSsExBackplaneFanStatusChange
        example: snmp trap cpqSsExBackplaneFanStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSsExBackplanePowerSupplyStatusChange:
        evaluation: 'Storage system power supply status change.


          The agent has detected a change in the power supply status of a

          storage system.  The variable cpqSsBackplaneFtpsStatus indicates

          the current status.


          User Action: If cpqSsBackplaneFtpsStatus is ''degraded(4)'', restore

          power or replace the failed power supply.'
        eventClassKey: cpqSsExBackplanePowerSupplyStatusChange
        example: snmp trap cpqSsExBackplanePowerSupplyStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSsExBackplaneTempStatusChange:
        evaluation: 'Storage system temperature status change.


          The agent has detected a change in the status of the temperature

          in a storage system.  The variable cpqSsBackplaneTempStatus

          indicates the current status.


          User Action: If cpqSsBackplaneTempStatus is ''degraded(4)'' or

          ''failed(5)'', shutdown the storage system as soon as possible.

          Ensure that the storage system environment is being cooled properly

          and that no components are overheated.'
        eventClassKey: cpqSsExBackplaneTempStatusChange
        example: snmp trap cpqSsExBackplaneTempStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSsExFanStatusChange:
        evaluation: 'Storage system fan status change.


          The agent has detected a change in the Fan Module Status of a

          storage system.  The variable cpqSsFanModuleStatus indicates the

          current fan status.


          User Action: If the fan status is degraded or failed, replace

          any failed fans.'
        eventClassKey: cpqSsExFanStatusChange
        example: snmp trap cpqSsExFanStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSsExPowerSupplyStatusChange:
        evaluation: 'Storage system power supply status change.


          The agent has detected a change in the power supply status of a

          storage system.  The variable cpqSsPowerSupplyStatus indicates

          the current status.


          User Action: If the power supply status is failed, take action to

          restore power or replace the failed power supply.'
        eventClassKey: cpqSsExPowerSupplyStatusChange
        example: snmp trap cpqSsExPowerSupplyStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSsExPowerSupplyUpsStatusChange:
        evaluation: 'Storage system power supply UPS status change.


          The agent has detected a change status of a UPS attached to a

          storage system power supply.  The variable

          cpqSsPowerSupplyUpsStatus indicates the current status.


          User Action: If cpqSsPowerSupplyUpsStatus is ''powerFailed(4)'' or

          ''batteryLow(5)'', take action to restore power to the UPS.'
        eventClassKey: cpqSsExPowerSupplyUpsStatusChange
        example: snmp trap cpqSsExPowerSupplyUpsStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSsExRecoveryServerStatusChange:
        evaluation: "Storage system recovery server option status change.\n\nThe agent\
          \ has detected a change in the recovery server option\nstatus of a storage\
          \ system.  The variable cpqSsChassisRsoStatus\nindicates the current status.\n\
          \nUser Action: If cpqSsChassisRsoStatus is 'noSecondary(8)' or \n'linkDown(10)',\
          \ ensure the secondary server is operational and all\ncables are  connected\
          \ properly.  If the RSO status is \n'secondaryRunningAuto(12)' or 'secondaryRunningUser(13)',\
          \ examine \nthe primary server for failed components."
        eventClassKey: cpqSsExRecoveryServerStatusChange
        example: snmp trap cpqSsExRecoveryServerStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSsExTempSensorStatusChange:
        evaluation: "Storage system temperature sensor status change.\n\nThe agent\
          \ has detected a change in the status of a storage\nsystem temperature sensor.\
          \  The variable cpqSsTempSensorStatus\nindicates the current status.\n\n\
          User Action: If cpqSsTempSensorStatus is 'degraded(3)' or \n'failed(4)',\
          \ shutdown the storage system as soon as possible.  \nEnsure that the storage\
          \ system environment is being cooled properly\nand that no components are\
          \ overheated."
        eventClassKey: cpqSsExTempSensorStatusChange
        example: snmp trap cpqSsExTempSensorStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSsFanStatusChange:
        evaluation: 'Storage System fan status change.


          The agent has detected a change in the Fan Status of a storage

          system.  The variable cpqSsBoxFanStatus indicates the current

          fan status.'
        eventClassKey: cpqSsFanStatusChange
        example: snmp trap cpqSsFanStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSsGSIStatusChange:
        evaluation: "Storage system Global Service Indicator Status Change.\n\nThe\
          \ agent has detected a change in the Global Service Indicator\nstatus of\
          \ a storage system.  The variable cpqSsBoxGSIStatus\nindicates the current\
          \ GSI supply status. The variable \ncpqSsBoxGSIMessages contains the error\
          \ messages sent from \nthe storage enclosure.\n\nUser Action: Refer to the\
          \ User Documentation for the storage \nenclosure to find recommended actions\
          \ for specified messages."
        eventClassKey: cpqSsGSIStatusChange
        example: snmp trap cpqSsGSIStatusChange
        zProperties:
          zEventSeverity: 3
      cpqSsPwrSupplyDegraded:
        evaluation: A storage system power supply status has been set to degraded.
        eventClassKey: cpqSsPwrSupplyDegraded
        example: snmp trap cpqSsPwrSupplyDegraded
        zProperties:
          zEventSeverity: 3
      cpqSsSidePanelInPlace:
        evaluation: 'Storage System side panel is in place.


          The side panel status has been set to in place.  The storage

          system''s side panel has returned to a properly installed state.'
        eventClassKey: cpqSsSidePanelInPlace
        example: snmp trap cpqSsSidePanelInPlace
        zProperties:
          zEventSeverity: 3
      cpqSsSidePanelRemoved:
        evaluation: 'Storage System side panel is removed.


          The side panel status has been set to removed.  The storage

          system''s side panel is not in a properly installed state. This

          situation may result in improper cooling of the drives in the

          storage system due to air flow changes caused by the missing

          side panel.'
        eventClassKey: cpqSsSidePanelRemoved
        example: snmp trap cpqSsSidePanelRemoved
        zProperties:
          zEventSeverity: 3
      cpqSsTempDegraded:
        evaluation: 'Storage System temperature degraded.


          The agent has detected a temperature status that has been set to

          degraded.  The storage system''s temperature is outside of the

          normal operating range.'
        eventClassKey: cpqSsTempDegraded
        example: snmp trap cpqSsTempDegraded
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqSsTempOk
          zEventSeverity: 3
      cpqSsTempFailed:
        evaluation: 'Storage System temperature failure.


          The agent has detected that a temperature status has been set

          to failed.  The storage system will be shutdown.'
        eventClassKey: cpqSsTempFailed
        example: snmp trap cpqSsTempFailed
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqSsTempOk
          zEventSeverity: 3
      cpqSsTempOk:
        evaluation: 'Storage System temperature ok.


          The temperature status has been set to OK.  The storage

          system''s temperature has returned to normal operating range.

          It may be reactivated by the administrator.'
        eventClassKey: cpqSsTempOk
        example: snmp trap cpqSsTempOk
        zProperties:
          zEventSeverity: 0
      cpqTape3LibraryDegraded:
        evaluation: 'Tape Library Degraded


          The agent has detected that an autoloader unit is

          in a degraded condition.'
        eventClassKey: cpqTape3LibraryDegraded
        example: snmp trap cpqTape3LibraryDegraded
        zProperties:
          zEventSeverity: 3
      cpqTape3LibraryDoorClosed:
        evaluation: 'Tape Library Door Closed


          The agent has detected that the door on a an autoloader

          has closed.'
        eventClassKey: cpqTape3LibraryDoorClosed
        example: snmp trap cpqTape3LibraryDoorClosed
        zProperties:
          zEventSeverity: 3
      cpqTape3LibraryDoorOpen:
        evaluation: 'Tape Library Door Open


          The agent has detected that the door on an autoloader

          is open so the unit is not operational.'
        eventClassKey: cpqTape3LibraryDoorOpen
        example: snmp trap cpqTape3LibraryDoorOpen
        zProperties:
          zEventSeverity: 3
      cpqTape3LibraryFailed:
        evaluation: 'Tape Library Error


          The agent has detected that an autoloader unit has

          an encountered an error.'
        eventClassKey: cpqTape3LibraryFailed
        example: snmp trap cpqTape3LibraryFailed
        zProperties:
          zEventSeverity: 3
      cpqTape3LibraryOkay:
        evaluation: 'Tape Library Okay


          The agent has detected that an autoloader unit has

          recovered from errors.'
        eventClassKey: cpqTape3LibraryOkay
        example: snmp trap cpqTape3LibraryOkay
        zProperties:
          zEventSeverity: 3
      cpqTape3PhyDrvCleanTapeReplace:
        evaluation: 'Tape Drive Cleaning Tape Needs Replacing.


          The agent has detected that an autoloader tape unit has

          a cleaning tape that has been fully used and therefore needs to

          be replaced with a new cleaning tape.'
        eventClassKey: cpqTape3PhyDrvCleanTapeReplace
        example: snmp trap cpqTape3PhyDrvCleanTapeReplace
        zProperties:
          zEventSeverity: 3
      cpqTape3PhyDrvCleaningRequired:
        evaluation: 'Tape Drive Cleaning Required trap.


          The agent has detected a tape drive that needs to have

          a cleaning tape inserted and run.  This will cause the tape drive

          heads to be cleaned.'
        eventClassKey: cpqTape3PhyDrvCleaningRequired
        example: snmp trap cpqTape3PhyDrvCleaningRequired
        zProperties:
          zEventSeverity: 3
      cpqTape3PhyDrvStatusChange:
        evaluation: 'Tape Drive Status Change.


          The agent has detected a change in the status of a

          Tape drive.  The current physical drive status is

          indicated in the cpqTapePhyDrvCondition variable.'
        eventClassKey: cpqTape3PhyDrvStatusChange
        example: snmp trap cpqTape3PhyDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqTape4PhyDrvStatusChange:
        evaluation: 'Tape Drive Status Change.


          The Storage Agent has detected a change in the status of a

          Tape drive.  The current physical drive status is

          indicated in the cpqTapePhyDrvStatus variable.'
        eventClassKey: cpqTape4PhyDrvStatusChange
        example: snmp trap cpqTape4PhyDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqTape5PhyDrvStatusChange:
        evaluation: 'Tape Drive Status Change.


          The Storage Agent has detected a change in the status of a

          tape drive.  The current physical drive status is

          indicated in the cpqTapePhyDrvStatus variable.'
        eventClassKey: cpqTape5PhyDrvStatusChange
        example: snmp trap cpqTape5PhyDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqTapeLibraryStatusChange:
        evaluation: 'Tape Library Status Change


          The Storage Agent has detected a change in the status of a

          tape library.  The current tape library status is

          indicated in the cpqTapeLibraryState variable.'
        eventClassKey: cpqTapeLibraryStatusChange
        example: snmp trap cpqTapeLibraryStatusChange
        zProperties:
          zEventSeverity: 3
      cpqTapePhyDrvStatusChange:
        evaluation: 'Tape Drive Status Change.


          The agent has detected a change in the status of a

          Tape drive.  The current physical drive status is

          indicated in the cpqTapePhyDrvCondition variable.'
        eventClassKey: cpqTapePhyDrvStatusChange
        example: snmp trap cpqTapePhyDrvStatusChange
        zProperties:
          zEventSeverity: 3
      cpqUps2BatteryLow:
        evaluation: UPS Battery Low.  The server will soon lose power.
        eventClassKey: cpqUps2BatteryLow
        example: snmp trap cpqUps2BatteryLow
        zProperties:
          zEventSeverity: 3
      cpqUps2Confirmation:
        evaluation: 'Server now operational after power down.


          This server has previously been shutdown due to a power

          anomaly and has just become operational again.'
        eventClassKey: cpqUps2Confirmation
        example: snmp trap cpqUps2Confirmation
        zProperties:
          zEventSeverity: 0
      cpqUps2LineFailed:
        evaluation: 'AC Line power failure.


          The UPS reports that the AC line power has failed.'
        eventClassKey: cpqUps2LineFailed
        example: snmp trap cpqUps2LineFailed
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqUps2LineOk
          zEventSeverity: 3
      cpqUps2LineOk:
        evaluation: 'AC line power ok.


          The UPS reports that the AC line power has returned.'
        eventClassKey: cpqUps2LineOk
        example: snmp trap cpqUps2LineOk
        zProperties:
          zEventSeverity: 0
      cpqUps2Shutdown:
        evaluation: 'UPS initiating graceful server shutdown.


          The UPS software is initiating a graceful server shutdown.

          Every attempt to preserve the state of the file system

          will be made.  The server shutdown will be initiated due to

          a power anomaly.'
        eventClassKey: cpqUps2Shutdown
        example: snmp trap cpqUps2Shutdown
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqUps2Confirmation
          zEventSeverity: 3
      cpqUpsBatteryLow:
        evaluation: UPS Battery Low.  The server will soon lose power.
        eventClassKey: cpqUpsBatteryLow
        example: snmp trap cpqUpsBatteryLow
        zProperties:
          zEventSeverity: 3
      cpqUpsConfirmation:
        evaluation: 'Server now operational after power down.


          This server has previously been shutdown due to a power

          anomaly and has just become operational again.'
        eventClassKey: cpqUpsConfirmation
        example: snmp trap cpqUpsConfirmation
        zProperties:
          zEventSeverity: 0
      cpqUpsGenericCritical:
        evaluation: Generic UPS critical alarm.
        eventClassKey: cpqUpsGenericCritical
        example: snmp trap cpqUpsGenericCritical
        zProperties:
          zEventSeverity: 3
      cpqUpsGenericInfo:
        evaluation: Generic UPS informational alarm.
        eventClassKey: cpqUpsGenericInfo
        example: snmp trap cpqUpsGenericInfo
        zProperties:
          zEventSeverity: 3
      cpqUpsLineFailed:
        evaluation: 'AC Line power failure.


          The UPS reports that the AC line power has failed.'
        eventClassKey: cpqUpsLineFailed
        example: snmp trap cpqUpsLineFailed
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqUpsLineOk
          zEventSeverity: 3
      cpqUpsLineOk:
        evaluation: 'AC line power ok.


          The UPS reports that the AC line power has returned.'
        eventClassKey: cpqUpsLineOk
        example: snmp trap cpqUpsLineOk
        zProperties:
          zEventSeverity: 0
      cpqUpsOverload:
        evaluation: 'The UPS has entered an overload condition.  A failure

          may occur unless the overload is corrected.'
        eventClassKey: cpqUpsOverload
        example: snmp trap cpqUpsOverload
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqUpsConfirmation
          zEventSeverity: 3
      cpqUpsPendingBatteryFailure:
        evaluation: 'The UPS battery is about to fail.  Replace as soon

          as possible.'
        eventClassKey: cpqUpsPendingBatteryFailure
        example: snmp trap cpqUpsPendingBatteryFailure
        zProperties:
          zEventSeverity: 3
      cpqUpsShutdown:
        evaluation: 'UPS initiating graceful server shutdown.


          The UPS software is initiating a graceful server shutdown.

          Every attempt to preserve the state of the file system

          will be made.  The server shutdown will be initiated due to

          a power anomaly.'
        eventClassKey: cpqUpsShutdown
        example: snmp trap cpqUpsShutdown
        zProperties:
          zEventClearClasses:
          - /Status/Snmp/Proliant/instances/cpqUpsConfirmation
          zEventSeverity: 3
      sanEventTrap:
        evaluation: This trap signals (using SNMP) an event has been published to
          the HP OpenView Storage Management Appliance.
        eventClassKey: sanEventTrap
        example: snmp trap sanEventTrap
        zProperties:
          zEventSeverity: 3
      sanTestTrap:
        evaluation: HP OpenView Storage Management Appliance has sent a test trap.
        eventClassKey: sanTestTrap
        example: snmp trap sanTestTrap
        zProperties:
          zEventSeverity: 3
      svrCluMemberAdded:
        evaluation: Generated when a cluster member is added
        eventClassKey: svrCluMemberAdded
        example: snmp trap svrCluMemberAdded
        zProperties:
          zEventSeverity: 3
      svrCluMemberDeleted:
        evaluation: Generated when a cluster member is deleted
        eventClassKey: svrCluMemberDeleted
        example: snmp trap svrCluMemberDeleted
        zProperties:
          zEventSeverity: 3
      swFailureTrap:
        evaluation: Failure event detected
        eventClassKey: swFailureTrap
        example: snmp trap swFailureTrap
        zProperties:
          zEventSeverity: 3
      swInformationTrap:
        evaluation: Information event detected
        eventClassKey: swInformationTrap
        example: snmp trap swInformationTrap
        zProperties:
          zEventSeverity: 3
      swWarningTrap:
        evaluation: Warning event detected
        eventClassKey: swWarningTrap
        example: snmp trap swWarningTrap
        zProperties:
          zEventSeverity: 3
      testTrap:
        eventClassKey: testTrap
        example: snmp trap testTrap
        sequence: 101
    transform: 'from ZenPacks.zenoss.HP.Proliant.transforms import *


      process_trap(evt)'
  /Events/Status/Snmp/Restart:
    mappings:
      coldStart:
        eventClassKey: coldStart
        example: snmp trap coldStart
        sequence: 7
      snmp_coldStart:
        eventClassKey: snmp_coldStart
        example: snmp trap snmp_coldStart
        sequence: 7
    transform: evt.component =  "SNMP service (re)started"
    zProperties:
      zEventSeverity: 2
  /Events/Status/Snmp/SNMP_AgentStart: {}
  /Events/Status/Snmp/SNMP_AgentStop: {}
  /Events/Status/SystemEventLog:
    transform: "if evt.component.find(\"TerminalServices\") >= 0:\n    evt._action\
      \ = \"drop\"\nif evt.component.find(\"Microsoft-Windows-WindowsUpdateClient\"\
      ) >= 0:\n   evt.severity = 2\n"
  /Events/Status/UPS: {}
  /Events/Status/UPS/Battery:
    transform: "'''\n{'rcvtime': 1530521698.445521, 'severity': 3, 'min': 30, 'max':\
      \ None, 'component': None, 'agent': 'zenpython', 'summary': 'threshold of Runtimeremaining\
      \ not met: current value 16.000000', 'current': 16.0, 'how': 'not met', 'manager':\
      \ 'pra-monlogcol-s01.fednot.be', 'eventKey': '|ups_upsEstimatedMinutesRemaining|Runtimeremaining',\
      \ 'device': 'pra-ups-s01.fednot.be', 'eventClass': '/Status', 'device_guid':\
      \ '3229ece7-390b-4fb0-8738-e8ba0b35a691', 'monitor': 'PRA'}\n'''\n\nif 'upsEstimatedMinutesRemaining'\
      \ in evt.eventKey:\n    msg = ' Estimated time remaining on battery is {:d}\
      \ minutes'.format(int(float(evt.current)))\n    evt.message = msg\n    evt.summary\
      \ = msg\n"
  /Events/Status/Update:
    transform: "summary = evt.summary\n\nif summary.startswith(\"User-supplied Python\
      \ expression\"):\n    evt.severity = 0\n"
  /Events/Status/VPN: {}
  /Events/Status/Wbem:
    transform: "evt.component = 'WBEM'\n\nem = device.getEventManager()\nfor event\
      \ in em.getEventList(where=\"device='\" + device.id  + \"'\"):\n    evtdetails\
      \ = dmd.Events.getEventDetail(event.evid)\n    if evt.eventKey != evtdetails.eventKey\
      \ and evt.eventClass == event.eventClass:\n        evt.severity = 2\n      \
      \  break\n"
  /Events/Status/Web:
    transform: "if 'twisted.python.failure.Failure' in evt.message:\n  evt._action\
      \ = \"drop\"\n"
  /Events/Status/WinService:
    mappings:
      Service Control Manager_7000:
        eventClassKey: Service Control Manager_7000
        example: "The ImageNow Server Fax Agent 5.41 service failed to start due to\
          \ the following error: \nThe service did not start due to a logon failure."
        zProperties:
          zEventSeverity: 4
      Service Control Manager_7038:
        eventClassKey: Service Control Manager_7038
        example: "The ImageNow Server Fax Agent 5.41 service was unable to log on\
          \ as .\\Administrator with the currently configured\npassword due to the\
          \ following error: \nLogon failure: unknown user name or bad password. \n\
          \nTo ensure that the service is\nconfigured properly, use the Services snap-in\
          \ in Microsoft Management\nConsole (MMC)."
        zProperties:
          zEventSeverity: 4
  /Events/Status/WinServiceSNMP:
    transform: "if evt.summary.startswith('threshold of WinServiceSNMPStatus'):\n\
      \    if evt.severity > 0:\n        evt.summary = \"Windows service '%s' is stopped\"\
      \ % (evt.component)\n        evt.message = \"Windows service '%s' is stopped\"\
      \ % (evt.component)\n    else:\n        evt.summary = \"Windows service '%s'\
      \ is running\" % (evt.component)\n        evt.message = \"Windows service '%s'\
      \ is running\" % (evt.component)\n"
  /Events/Status/Winrm: {}
  /Events/Status/Winrm/Auth:
    mappings:
      AuthenticationFailure:
        eventClassKey: AuthenticationFailure
        zProperties:
          zEventSeverity: 5
      AuthenticationSuccess:
        eventClassKey: AuthenticationSuccess
        zProperties:
          zEventSeverity: 0
  /Events/Status/Winrm/Ping: {}
  /Events/Status/Wmi: {}
  /Events/Status/Wmi/Conn: {}
  /Events/Status/XmlRpc: {}
  /Events/Status/ZEP: {}
  /Events/Status/Zone:
    transform: "if any([value in evt.message for value in (\"Command not found\",\
      \ \"No data returned\")]):\n            evt.summary = \"The system may not be\
      \ configured for zones, as it does not have 'zonestat' utility.\"\n        \
      \    evt.message = \"The system may not be configured for zones, as it does\
      \ not have 'zonestat' utility. Therefore Zones will not be monitored.\"\n  \
      \          if any([value in device.getOSProductName() for value in (\"8\", \"\
      9\")]):\n                evt.severity = 2\n"
  /Events/Status/zenwinmodeler: {}
  /Events/Storage:
    mappings:
      CPQCISSE_24597:
        eventClassKey: CPQCISSE_24597
        example: 'Physical Drive on SCSI Port 1, ID 1 of


          Array Controller [Embedded] has failed.


          Failure Code: 0x0d.'
      Storage Agents_1202:
        eventClassKey: Storage Agents_1202
      VxSvc_PercPro_509:
        evaluation: PERC 3/DC Controller, Virtual Disk degraded
        eventClassKey: VxSvc_PercPro_509
      VxSvc_PercPro_580:
        eventClassKey: VxSvc_PercPro_580
        example: PERC 3/Di Controller 0 , battery low.
        regex: PERC 3/Di Controller (?P<eventKey>\S+) , battery low.
    zProperties:
      zEventSeverity: 4
  /Events/Storage/EMC: {}
  /Events/Storage/Full:
    mappings:
      Remote Storage_6027:
        eventClassKey: Remote Storage_6027
        example: An attempt was made to start or restart the job <Remote Storage Validate
          F> that is already active.
        zProperties:
          zEventSeverity: 5
      Srv_2013:
        eventClassKey: Srv_2013
        example: 'The C: disk is at or near capacity.  You may need to delete some
          files.'
        zProperties:
          zEventSeverity: 2
    zProperties:
      zEventSeverity: 5
  /Events/Storage/NetApp: {}
  /Events/Storage/SAN:
    mappings:
      EmcpBase_100:
        evaluation: Fiber Channel Bus is Dead
        eventClassKey: EmcpBase_100
      EmcpBase_106:
        evaluation: Killing Fiber Channel Bus
        eventClassKey: EmcpBase_106
  /Events/Syslog: {}
  /Events/Syslog/Drop:
    mappings:
      prb-dpwr-l01-mgt.in.credoc.be__production__0x01130006__mpgw__error__mpgw(MPG-NRPROXY-1.00-OUT-SUPPLIER):
        eventClassKey: prb-dpwr-l01-mgt.in.credoc.be_[production][0x01130006][mpgw][error]_mpgw(MPG-NRPROXY-1.00-OUT-SUPPLIER)
        example: 'trans(1077417263)[error][10.4.20.254] gtid(1077417263): Failed to
          establish a backside connection\n'
        sequence: 21
      prb-dpwr-l02-mgt.in.credoc.be__production__0x01130006__mpgw__error__mpgw(MPG-PERSONSERVICE-2.00.00-OUT-SUPPLIER):
        eventClassKey: prb-dpwr-l02-mgt.in.credoc.be_[production][0x01130006][mpgw][error]_mpgw(MPG-PERSONSERVICE-2.00.00-OUT-SUPPLIER)
        example: 'trans(1270303135)[error][10.4.20.254] gtid(1270303135): Failed to
          establish a backside connection\n'
        sequence: 21
      prb-dpwr-l02-mgt.in.credoc.be__production__0x80000001__xsltmsg__error__mpgw(MPG-NRPROXY-1.00-OUT-SUPPLIER):
        eventClassKey: prb-dpwr-l02-mgt.in.credoc.be_[production][0x80000001][xsltmsg][error]_mpgw(MPG-NRPROXY-1.00-OUT-SUPPLIER)
        example: "trans(2150427777)[error][10.4.20.254] gtid(2150427777): \n\tError:\t\
          0x01130006, Soapfault: 1\n\tErrorMsg:\tFailed to establish a backside connection\n\
          \tOn:\tMPG-NRPROXY-1.00-OUT-SUPPLIER for the POL-NRPROXY-1.00-OUT-SUPPLIER_GenError\
          \ rule\n  \t\t\t\n\tXMLBody:\n            <soap:Body xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"\
          ><ns2:getLegalCohabitationRequest xmlns=\"http://fsb.belgium.be/data/business/context/v1_00\"\
          \ xmlns:ns2=\"http://fsb.belgium.be/nrProxyService/messages/v1_00\" xmlns:ns3=\"\
          http://fsb.belgium.be/v1_01\" xmlns:ns4=\"http://fsb.belgium.be/data/common/code/v1_00\"\
          \ xmlns:ns5=\"http://fsb.belgium.be/data/common/error/v1_00\" xmlns:ns6=\"\
          http://www.ibz.rrn.fgov.be/XSD/xm25/rn25Schema\" xmlns:ns7=\"http://fsb.belgium.be/data/common/date/v1_00\"\
          \ xmlns:ns8=\"http://fsb.belgium.be/data/common/label/v1_00\" xmlns:ns9=\"\
          http://fsb.belgium.be/nrProxyService/v1_00\"><userContext><personNumber>89100\n"
        sequence: 21
      prb-dpwr-l02-mgt.in.credoc.be__production__0x80000001__xsltmsg__error__mpgw(MPG-VEA-1.00.00-OUT-SUPPLIER):
        eventClassKey: prb-dpwr-l02-mgt.in.credoc.be_[production][0x80000001][xsltmsg][error]_mpgw(MPG-VEA-1.00.00-OUT-SUPPLIER)
        example: "trans(1270458063)[error][10.4.20.254] gtid(1270458063): \n\tError:\t\
          0x01130006, Soapfault: 1\n\tErrorMsg:\tFailed to establish a backside connection\n\
          \tOn:\tMPG-VEA-1.00.00-OUT-SUPPLIER for the POL-VEA-1.00.00-OUT-SUPPLIER_GenericError\
          \ rule\n  \t\t\t\n\tXMLBody:\n            <env:Body xmlns:env=\"http://schemas.xmlsoap.org/soap/envelope/\"\
          ><env:Fault><faultcode>env:Client</faultcode><faultstring>Failed to establish\
          \ a backside connection</faultstring><detail><error_headers>HTTP/1.1 500\
          \ Error&#13;\nContent-Type: text/xml; charset=UTF-8&#13;\nX-Backside-Transport:\
          \ FAIL FAIL&#13;\nConnection: close&#13;\n&#13;\n</error_headers><error_message>Failed\
          \ to establish a backside connection</error_message><transaction_id>1270458063</transaction_id><error_code>0x01130006</error_code><error_subcode>0x00000000</error_subcode><formatted_error_msg>&lt;?xml\
          \ version=\"1.0\" encoding=\"UTF-8\"?>\n&lt;env:Envelope xmlns:env=\"http:/\n"
        sequence: 21
      prb-dpwr-l02-mgt.in.credoc.be__production__0x80c0007b__ws-proxy__warn__wsm-stylepolicy(WSP-EBOX-2.00-OUT-SUPPLIER):
        eventClassKey: prb-dpwr-l02-mgt.in.credoc.be_[production][0x80c0007b][ws-proxy][warn]_wsm-stylepolicy(WSP-EBOX-2.00-OUT-SUPPLIER)
        example: 'trans(2149572289)[10.4.20.254] gtid(2149572289): No error rule is
          matched.\n'
        sequence: 21
    zProperties:
      zEventAction: drop
  /Events/Test:
    mappings:
      test:
        eventClassKey: test
        sequence: 7
        transform: "from ConfigParser import SafeConfigParser\n\nparser = SafeConfigParser()\n\
          parser.read(\"/opt/zenoss/zenoss/etc/clusters.conf\")\n\ndomain=parser.get('sql-legprd','domain')\n\
          \nnodeline \t= parser.get('sql-legprd','nodes')\nnodes \t= nodeline.split(',')\n\
          iloline \t= parser.get('sql-legprd','ilos')\nilos\t\t= iloline.split(',')\n\
          fibreswline = parser.get('sql-legprd','fibresw')\nfibresws \t= fibreswline.split(',')\n\
          dependency_summaries_line = parser.get('sql-legprd','depsum')\ndependency_sumarries\
          \ = dependency_summaries_line.split(',')\n\nallitems = nodes + ilos + fibresws\
          \ + dependency_sumarries\n\nfor item in allitems:\n    evt.message +=  \"\
          -\" + item + \"-\"\n\ndependentdevices = nodes + ilos + fibresws\n\nfor\
          \ dev in dependentdevices:\n    evt.message += \"Device: %s\" %dev\n   \
          \ events = dmd.ZenEventManager.getEventList(where=\"device='%s.%s'\" %(dev,domain))\n\
          \    for event in events:\n        evt.message += \"-- Event: %s\" %event.summary\n\
          \        if event.summary in dependency_sumarries:\n            evt.severity\
          \ = 0\n        else:\n            evt.summary = \"HP Server Power Outage\"\
          \n            evt.component = \"HP Server (Check Cluster!)\"\n         \
          \   evt.severity = 5\n"
  /Events/Tuning: {}
  /Events/Tuning/EventHealthCheck: {}
  /Events/Unknown:
    mappings:
      coldStart:
        eventClassKey: coldStart
        sequence: 14
        transform: 'evt.eventClass = "/Status/Snmp/SNMP_AgentStart"

          evt.eventKey = "SNMP daemon status"

          dedupfields = [evt.device, evt.component, evt.eventKey, evt.severity]

          evt.dedupid = ''|''.join(map(str, dedupfields))

          evt.severity = 0

          '
      nsNotifyShutdown:
        eventClassKey: nsNotifyShutdown
        sequence: 14
        transform: 'evt.eventClass = "/Status/Snmp/SNMP_AgentStop"

          evt.eventKey = "SNMP daemon status"

          dedupfields = [evt.device, evt.component, evt.eventKey, evt.severity]

          evt.dedupid = ''|''.join(map(str, dedupfields))

          '
    transform: "if evt.device in ['prb-log-s01.in.credoc.be', 'prb-log-s02.in.credoc.be']:\n\
      \    if evt.agent == 'zensyslog':\n        evt._action = 'drop'\n"
  /Events/Users: {}
  /Events/VMWare: {}
  /Events/VMWare/ESX:
    mappings:
      vmwESX.3:
        eventClassKey: vmwESX.3
        example: snmp trap vmwESX.3
        sequence: 7
      vmwESX.3_01:
        eventClassKey: vmwESX.3
        example: snmp trap vmwESX.3
        sequence: 7
      vmwESX.3_01_02:
        eventClassKey: vmwESX.3
        example: snmp trap vmwESX.3
        sequence: 7
      vmwESX.4:
        eventClassKey: vmwESX.4
        example: snmp trap vmwESX.4
        sequence: 7
      vmwESX.4_01:
        eventClassKey: vmwESX.4
        example: snmp trap vmwESX.4
        sequence: 7
      vmwESX.4_01_02:
        eventClassKey: vmwESX.4
        example: snmp trap vmwESX.4
        sequence: 7
    zProperties:
      zEventSeverity: 2
  /Events/VMWare/VeeAM Monitor: {}
  /Events/VMWare/VeeAM Monitor/Host Memory:
    mappings:
      vmwTraps.201:
        eventClassKey: vmwTraps.201
        example: snmp trap vmwTraps.201
        sequence: 7
  /Events/Win:
    mappings:
      winrsCollectionError:
        eventClassKey: winrsCollectionError
        example: 'WinRS: Failed collection Server not found in Kerberos database:
          HTTPS@10.4.50.44 on prb-pdfr-s04.in.credoc.be'
        sequence: 20
        zProperties:
          zEventSeverity: 1
  /Events/Win/AD:
    mappings:
      AD WebManager_0:
        eventClassKey: AD WebManager_0
        example: 'Modify User

          Modify user: username

          The attribute syntax specified to the directory service is invalid.'
        zProperties:
          zEventAction: history
          zEventSeverity: 1
      DirXML Remote Loader_2:
        eventClassKey: DirXML Remote Loader_2
        example: "Driver : \\ID_VAULT\\org\\services\\DirXML\\Driver-Set\\NewADDriver\n\
          Thread : Subscriber Channel\nObject : \nMessage : Could not set password\
          \ via platform call. Err=2221 (user not found)\nThis error has been reported\
          \ 1980 times in a row since first logged."
        zProperties:
          zEventSeverity: 3
      MRxSmb_8003:
        eventClassKey: MRxSmb_8003
        example: 'The master browser has received a server announcement from the computer
          COMPUTER

          that believes that it is the master browser for the domain on transport
          NetBT_Tcpip_{4E448810-5CCB.

          The master browser is stopping or an election is being forced.'
        sequence: 1
        zProperties:
          zEventAction: history
      MSExchangeAL_8270:
        eventClassKey: MSExchangeAL_8270
        example: "LDAP returned the error [10] No Such Attribute when importing the\
          \ transaction \ndn: <GUID=EB3D6BE41A37084C8D306C8190A80CF0>\nchangetype:\
          \ Modify\nmsExchPoliciesIncluded:delete:{FDBF7EC5-F16E-4840-805D-25D492F273E5},{3B6813EC-CE89-42BA-9442-D87D4AA30DBC}\n\
          objectGUID:EB3D6BE41A37084C8D306C8190A80CF0\n-\n\nDC=domain,DC=com\n\n\n\
          For more information, click http://www.microsoft.com/contentredirect.asp."
        zProperties:
          zEventSeverity: 3
      MSExchangeIS_9548:
        eventClassKey: MSExchangeIS_9548
        example: 'Disabled user /o=My Organization/ou=DOMAIN/cn=Recipients/cn=username
          does not have a master account SID. Please use Active Directory MMC to set
          an active account as this user''s master account.



          For more information, click http://www.microsoft.com/contentredirect.asp.'
        zProperties:
          zEventSeverity: 2
      Userenv_1006:
        eventClassKey: Userenv_1006
        example: Windows cannot bind to DOMAIN domain. (Invalid Credentials). Group
          Policy processing aborted.
        zProperties:
          zEventSeverity: 3
      Userenv_1030:
        eventClassKey: Userenv_1030
        example: Windows cannot query for the list of Group Policy objects. Check
          the event log for possible messages previously logged by the policy engine
          that describes the reason for this.
        zProperties:
          zEventSeverity: 3
  /Events/Win/DCOM:
    mappings:
      DCOM_10016:
        eventClassKey: DCOM_10016
        example: "The application-specific permission settings do not grant Local\
          \ Activation permission for the COM Server application with CLSID \n{0C0A3666-30C9-11D0-8F20-00805F2CD064}\n\
          \ to the user NT AUTHORITY\\NETWORK SERVICE SID (S-1-5-20).  This security\
          \ permission can be modified using the Component Services administrative\
          \ tool."
        zProperties:
          zEventAction: history
      MSExchangeIS_9646:
        eventClassKey: MSExchangeIS_9646
        sequence: 21
        zProperties:
          zEventSeverity: 5
  /Events/Win/EventLog:
    mappings:
      System:
        eventClassKey: Microsoft-Windows-TerminalServices-Printers_1111
        sequence: 17
        transform: evt._action = "drop"
      WindowsEventCollectionError:
        eventClassKey: WindowsEventCollectionError
        example: 'WindowsEventLog: failed collection. Get-WinEvent : Attempted to
          perform an unauthorized operation.

          At line:1 char:2596

          + ... y]$events = Get-WinEvent -FilterXml $query.replace("{logname}",$logna
          ...

          +                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

          + CategoryInfo          : NotSpecified: (:) [Get-WinEvent], UnauthorizedAccessException

          + FullyQualifiedErrorId : Attempted to perform an unauthorized operation.,Microsoft.PowerShell.Commands.GetWinEventCommand

          Get-WinEvent : Attempted to perform an unauthorized operation.

          At line:1 char:2596

          + ... y]$events = Get-WinEvent -FilterXml $query.replace("{logname}",$logna
          ...

          +                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

          + CategoryInfo          : NotSpecified: (:) [Get-WinEvent], UnauthorizedAccessException

          + FullyQualifiedErrorId : Attempted to perform an unauthorized operation.,Microsoft.PowerShell.Commands.GetWinEventCommand

          Get-WinEvent : Attempted to perform an unauthorized operation.

          At line:1 char:2596

          + ... y]$events = Get-WinEvent -FilterXml $query.replace("{logname}",$logna
          ...

          +                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

          + CategoryInfo          : NotSpecified: (:) [Get-WinEvent], UnauthorizedAccessException

          + FullyQualifiedErrorId : Attempted to perform an unauthorized operation.,Microsoft.PowerShell.Commands.GetWinEventCommand

          '
        sequence: 20
        zProperties:
          zEventSeverity: 1
  /Events/Win/Exchange:
    mappings:
      Cloudmark Server Edition_2007:
        eventClassKey: Cloudmark Server Edition_2007
        example: Cloudmark Server Edition cannot establish a connection to the Exchange
          server.
        zProperties:
          zEventSeverity: 4
      MSExchangeIS_9646:
        eventClassKey: MSExchangeIS_9646
        example: Mapi session "/o=My Organization/ou=DOMAIN/cn=Recipients/cn=username"
          exceeded the maximum of 250 objects of type "objtMessage". For more information,
          click http://www.microsoft.com/contentredirect.asp.
        regex: Mapi session "/o=My Organization/ou=DOMAIN/cn=Recipients/cn=username"
          exceeded the maximum of \d+ objects of type "objtMessage". For more information,
          click http://www.microsoft.com/contentredirect.asp.
        zProperties:
          zEventSeverity: 5
      MSExchangeIS_9665:
        eventClassKey: MSExchangeIS_9665
        example: The memory settings for this server are not optimal for Exchange.
          For more information, click http://support.microsoft.com?kbid=815372
      MSExchangeMGMT_3:
        eventClassKey: MSExchangeMGMT_3
        example: The Microsoft Exchange Management service has started
        zProperties:
          zEventSeverity: 2
  /Events/Win/NetBios:
    mappings:
      AutoEnrollment_13:
        eventClassKey: AutoEnrollment_13
        example: Automatic certificate enrollment for local system failed to enroll
          for one Domain Controller certificate (0x80070005). Access is denied.
        zProperties:
          zEventSeverity: 2
      BROWSER_8021:
        eventClassKey: BROWSER_8021
        example: The browser was unable to retrieve a list of servers from the browser
          master \\MHSISA on the network \Device\NetBT_Tcpip_{D160DC6C-96D6-4C96-8F04-F6FEA5E9089B}.
          The data is the error code.
        zProperties:
          zEventAction: history
      Userenv_1000:
        eventClassKey: Userenv_1000
        example: Windows cannot obtain the domain controller name for your computer
          network. Return value (59).
    zProperties:
      zEventSeverity: 3
  /Events/Win/PWMgr:
    mappings:
      Password Manager_100:
        eventClassKey: Password Manager_100
        example: User Enrolled in Password Recovery Service The user account DOMAIN\user
          has been enrolled on the password recovery service
        zProperties:
          zEventSeverity: 2
      Password Manager_200:
        eventClassKey: Password Manager_200
        example: Password changed There were errors changing the password for the
          user account DOMAIN\user. Password was in an invalid format
    zProperties:
      zEventAction: history
  /Events/Win/SharePoint:
    mappings:
      Windows SharePoint Services 2.0_1000:
        eventClassKey: Windows SharePoint Services 2.0_1000
        example: '#50070: Unable to connect to the database database on server.  Check
          the database connection information and make sure that the database server
          is running.'
        zProperties:
          zEventAction: drop
  /Events/Win/Shell:
    mappings:
      Winlogon_1002:
        eventClassKey: Winlogon_1002
        example: The shell stopped unexpectedly and Explorer.exe was restarted.
        zProperties:
          zEventSeverity: 3
  /Events/Win/Userenv:
    mappings:
      Userenv_1517:
        eventClassKey: Userenv_1517
        example: "Windows saved user DOMAIN\\administrator registry while an application\
          \ or service was still using the registry during log off. The memory used\
          \ by the user's registry has not been freed. The registry will be unloaded\
          \ when it is no longer in use. \n\n\nThis is often caused by services running\
          \ as a user account, try configuring the services to run in either the LocalService\
          \ or NetworkService account."
        zProperties:
          zEventAction: history
      Userenv_1524:
        eventClassKey: Userenv_1524
        example: Windows cannot unload your classes registry file - it is still in
          use by other applications or services. The file will be unloaded when it
          is no longer in use.
        zProperties:
          zEventAction: history
    zProperties:
      zEventAction: status
  /Events/Win/WindowsUpdate: {}
  /Events/Win/WindowsUpdate/Failure:
    mappings:
      WUSyncService_101:
        eventClassKey: WUSyncService_101
        example: "Software Update Services encountered a failure during synchronization.\n\
          \nView the synchronization log on this server for details of what failed\
          \ during synchronization. To view the synchronization log, go to the Software\
          \ Update Services Admin Web site (http://<YourServerName>/SUSAdmin), and\
          \ click the View synchronization log link. (Error 0x80190197: HTTP error\
          \ 407. Proxy authentication required.)\n\n\n\nUser Action \n\nTry synchronizing\
          \ the server again to see if the error occurs again. To synchronize the\
          \ server, go to the Software Update Services Admin Web site, and click the\
          \ Synchronize server link. Then click the Synchronize Now button.\n\n\n\n\
          Additional Data\n\nThe most common reason for failed synchronization is\
          \ incorrect proxy server configuration. If you are using a proxy server,\
          \ please confirm your configuration by going to the Software Update Services\
          \ Admin Web site and clicking the Set options link. Confirm your configuration\
          \ in the results pane.\n\n\n\nFor troubleshooting information, see the Microsoft\
          \ Software Update Services Deployment Guide (http://go.microsoft.com/fwlink/?LinkId=6928)."
        zProperties:
          zEventSeverity: 3
      Windows Update Agent_16:
        eventClassKey: Windows Update Agent_16
        example: 'Unable to Connect: Windows is unable to connect to the automatic
          updates service and therefore cannot download and install updates according
          to the set schedule. Windows will continue to try to establish a connection'
        zProperties:
          zEventSeverity: 3
      Windows Update Agent_20:
        eventClassKey: Windows Update Agent_20
        example: 'Installation Failure: Windows failed to install the following update
          with error 0x80074273: Security Update for Microsoft Data Access Components
          2.8 (KB911562).'
        zProperties:
          zEventSeverity: 3
      WindowsUpdateAgent_16:
        eventClassKey: WindowsUpdateAgent_16
        example: 'Unable to Connect: Windows is unable to connect to the automatic
          updates service and therefore cannot download and install updates according
          to the set schedule. Windows will continue to try to establish a connection.'
        zProperties:
          zEventSeverity: 3
      WindowsUpdateAgent_20:
        eventClassKey: WindowsUpdateAgent_20
        example: 'Installation Failure: Windows failed to install the following update
          with error 0x80070003: Security Update for Windows Server 2003 (KB896422).'
        zProperties:
          zEventSeverity: 3
  /Events/Win/WindowsUpdate/Pending:
    mappings:
      WindowsUpdateAgent_18:
        eventClassKey: WindowsUpdateAgent_18
        example: 'Installation Ready: The following updates are downloaded and ready
          for installation. This computer is currently scheduled to install these
          updates on Tuesday, April 18, 2006 at 1:00 AM: - Security Update for Windows
          Server 2003 (KB908531)'
        zProperties:
          zEventSeverity: 2
  /Events/Win/WindowsUpdate/Success:
    mappings:
      Exchange Server 2003_4377:
        eventClassKey: Exchange Server 2003_4377
        example: Security Update for Exchange Server 2003 (KB916803) was installed.
        zProperties:
          zEventSeverity: 2
      MDAC_4377:
        eventClassKey: MDAC_4377
        example: MDAC 2.71 Hotfix KB911562 was installed.
        zProperties:
          zEventSeverity: 2
      NtServicePack_4377:
        eventClassKey: NtServicePack_4377
        example: Windows Server 2003 Hotfix KB911567 was installed.
        zProperties:
          zEventSeverity: 2
      OutlookExpress6_4377:
        eventClassKey: OutlookExpress6_4377
        example: Windows 2000 Hotfix KB911567-OE6SP1-20060316.165634 was installed.
        zProperties:
          zEventSeverity: 2
      Windows Update Agent_19:
        eventClassKey: Windows Update Agent_19
        example: 'Installation Successful: Windows successfully installed the following
          update: Windows Malicious Software Removal Tool - May 2006 (KB890830)'
        zProperties:
          zEventSeverity: 2
      WindowsUpdateAgent_19:
        eventClassKey: WindowsUpdateAgent_19
        example: 'Installation Successful: Windows successfully installed the following
          update: Security Update for Microsoft Data Access Components 2.7 Service
          Pack 1 (KB911562)'
        zProperties:
          zEventSeverity: 2
  /Events/Win/evtsys:
    mappings:
      evtsys:
        evaluation: All evtsys log messages except heartbeat go here
        eventClassKey: evtsys
        example: 'Eventlog to Syslog Service Started: Version 3.4.1'
        regex: ^[^-]+
        sequence: 2
    zProperties:
      zEventSeverity: 2
  /Events/Zenoss: {}
  /Events/Zenoss/Add: {}
  /Events/ZenossRM: {}
  /Events/vSphere:
    mappings:
      hbr.primary.ConnectionRestoredToHbrServerEvent:
        evaluation: Clear event for hbr.primary.NoConnectionToHbrServerEvent event.
        eventClassKey: hbr.primary.ConnectionRestoredToHbrServerEvent
        sequence: 111
        transform: 'evt.eventKey = ''hbr.primary.NoConnectionToHbrServerEvent''

          evt.severity = 0'
      hbr.primary.NoConnectionToHbrServerEvent:
        evaluation: Setting eventKey for hbr.primary.NoConnectionToHbrServerEvent
          event.
        eventClassKey: hbr.primary.NoConnectionToHbrServerEvent
        sequence: 110
        transform: evt.eventKey = 'hbr.primary.NoConnectionToHbrServerEvent'
      vSphere Default Mapping:
        eventClassKey: defaultmapping
        rule: getattr(evt, 'agent', '') == 'zenvsphere'
        sequence: 7
        transform: "evt.eventClass = '/vSphere'\n\nif getattr(evt, 'eventClassKey',\
          \ ''):\n    if evt.eventClassKey.startswith(\"esx.problem\") or evt.eventClassKey.startswith(\"\
          esx.clear\"):\n        base = \".\".join(evt.eventClassKey.split(\".\")[2:])\n\
          \n        # Group known esx.failure / esx.clear event pairs together into\
          \ single events.\n        for prefix in (\n            'net.connectivity',\
          \ 'net.dvport.connectivity', 'net.dvport.redundancy',\n            'net.redundancy',\
          \ 'net.vmnic.linkstate', 'scsi.device.io.latency',\n            'scsi.device.state',\
          \ 'scsi.device.state.permanentloss',\n            'storage.connectivity',\
          \ 'storage.redundancy',):\n            if base.startswith(prefix):\n   \
          \             evt.eventKey = \"esx.\" + prefix\n                if evt.eventClassKey.startswith(\"\
          esx.clear\"):\n                    evt.severity = 0\n                break\n\
          \        if evt.eventKey == 'esx.scsi.device.io.latency':\n            evt.eventClass\
          \ = '/Perf/vSphere'"
      vim.event.AlarmEmailFailedEvent:
        evaluation: Lower severity to Info
        eventClassKey: vim.event.AlarmEmailFailedEvent
        sequence: 100
        zProperties:
          zEventSeverity: 2
      vim.event.AlarmScriptFailedEvent:
        evaluation: Lower severity to Info
        eventClassKey: vim.event.AlarmScriptFailedEvent
        sequence: 101
        zProperties:
          zEventSeverity: 2
      vim.event.AlarmSnmpFailedEvent:
        evaluation: Lower severity to Info
        eventClassKey: vim.event.AlarmSnmpFailedEvent
        sequence: 102
        zProperties:
          zEventSeverity: 2
      vim.event.AlreadyAuthenticatedSessionEvent:
        evaluation: Send directly to history.
        eventClassKey: vim.event.AlreadyAuthenticatedSessionEvent
        sequence: 102
        zProperties:
          zEventAction: history
      vim.event.BadUsernameSessionEvent:
        evaluation: Lower severity to info and send directly to history.
        eventClassKey: vim.event.BadUsernameSessionEvent
        sequence: 104
        zProperties:
          zEventAction: history
          zEventSeverity: 2
      vim.event.NoAccessUserEvent:
        evaluation: Lower severity to info and send directly to history.
        eventClassKey: vim.event.NoAccessUserEvent
        sequence: 105
        zProperties:
          zEventAction: history
          zEventSeverity: 2
      vim.event.ServerStartedSessionEvent:
        evaluation: Send directly to history.
        eventClassKey: vim.event.ServerStartedSessionEvent
        sequence: 106
        zProperties:
          zEventAction: history
          zEventSeverity: 2
      vim.event.SessionTerminatedEvent:
        evaluation: Send directly to history.
        eventClassKey: vim.event.SessionTerminatedEvent
        sequence: 107
        zProperties:
          zEventAction: history
      vim.event.UserLoginSessionEvent:
        evaluation: Send directly to history.
        eventClassKey: vim.event.UserLoginSessionEvent
        sequence: 108
        zProperties:
          zEventAction: history
      vim.event.UserLogoutSessionEvent:
        evaluation: Send directly to history.
        eventClassKey: vim.event.UserLogoutSessionEvent
        sequence: 109
        zProperties:
          zEventAction: history
    transform: '

      '
